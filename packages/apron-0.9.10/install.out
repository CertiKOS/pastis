(cd mlgmpidl; make install)
install -d /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/bin
install gmp_caml.h /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
for i in mpz.idl mpq.idl mpf.idl mpfr.idl gmp_random.idl mpz.mli mpzf.mli mpq.mli mpqf.mli mpf.mli mpfr.mli mpfrf.mli gmp_random.mli mpz.cmi mpzf.cmi mpq.cmi mpqf.cmi mpf.cmi mpfr.cmi mpfrf.cmi gmp_random.cmi gmp.cma mpz.cmx mpzf.cmx mpq.cmx mpqf.cmx mpf.cmx mpfr.cmx mpfrf.cmx gmp_random.cmx gmp.cmxa gmp.a libgmp_caml.a libgmp_caml.so  ; do \
		if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; \
	done
(cd /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; if test -f libgmp_caml.so; then ln -s -f libgmp_caml.so dllgmp_caml.so; fi)
(cd apron; make install)
(cd num; make install)
mkdir -p /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
cp num_config.h num.h num_numint.h num_numrat.h num_numflt.h numint.h numint_native.h numint_mpz.h numrat.h numrat_native.h numrat_mpq.h numflt.h numflt_native.h numflt_mpfr.h num_name.h bound.h bound_def.h /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
(cd itv; make install)
ar rcs libitvIl.a itvIl.o itv_linexprIl.o itv_linearizeIl.o
ranlib libitvIl.a
ar rcs libitvIl_debug.a itvIl_debug.o itv_linexprIl_debug.o itv_linearizeIl_debug.o
ranlib libitvIl_debug.a
ar rcs libitvIll.a itvIll.o itv_linexprIll.o itv_linearizeIll.o
ranlib libitvIll.a
ar rcs libitvIll_debug.a itvIll_debug.o itv_linexprIll_debug.o itv_linearizeIll_debug.o
ranlib libitvIll_debug.a
ar rcs libitvRl.a itvRl.o itv_linexprRl.o itv_linearizeRl.o
ranlib libitvRl.a
ar rcs libitvRl_debug.a itvRl_debug.o itv_linexprRl_debug.o itv_linearizeRl_debug.o
ranlib libitvRl_debug.a
ar rcs libitvMPZ.a itvMPZ.o itv_linexprMPZ.o itv_linearizeMPZ.o
ranlib libitvMPZ.a
ar rcs libitvMPZ_debug.a itvMPZ_debug.o itv_linexprMPZ_debug.o itv_linearizeMPZ_debug.o
ranlib libitvMPZ_debug.a
install -d /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib
install itv.h itv_fun.h itv_config.h itv_linexpr.h itv_linearize.h /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
for i in libitvIl.a libitvIl_debug.a libitvIll.a libitvIll_debug.a libitvRl.a libitvRl_debug.a libitvRll.a libitvRll_debug.a libitvMPZ.a libitvMPZ_debug.a libitvMPQ.a libitvMPQ_debug.a libitvD.a libitvD_debug.a libitvMPFR.a libitvMPFR_debug.a libitv.a libitv_debug.a; do \
		if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; \
	done
(cd apron; make install)
mkdir -p /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
cp ap_config.h ap_scalar.h ap_interval.h ap_coeff.h ap_dimension.h ap_linexpr0.h ap_lincons0.h ap_generator0.h ap_texpr0.h ap_tcons0.h ap_expr0.h ap_manager.h ap_abstract0.h ap_generic.h ap_var.h ap_environment.h ap_linexpr1.h ap_lincons1.h ap_generator1.h ap_texpr1.h ap_tcons1.h ap_expr1.h ap_abstract1.h ap_global0.h ap_global1.h ap_linearize.h ap_linearize_aux.h ap_reducedproduct.h /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
mkdir -p /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib
for i in libapron.a libapron_debug.a libapron.so libapron_debug.so; do if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; done
(cd newpolka; make install)
install -d /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib
install pk.h pkeq.h /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
for i in libpolkaMPQ.a libpolkaMPQ_debug.a libpolkaRll.a libpolkaRll_debug.a libpolkaMPQ.so libpolkaMPQ_debug.so libpolkaRll.so libpolkaRll_debug.so ; do \
		if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; \
	done
for i in polka.idl polka.mli polka.ml polka.cmi polka.cma polkaMPQ.cma polkaRll.cma libpolkaMPQ_caml.a libpolkaMPQ_caml_debug.a libpolkaRll_caml.a libpolkaRll_caml_debug.a polka.cmx polka.cmxa polka.a polkaMPQ.cmxa polkaMPQ.a polkaRll.cmxa polkaRll.a; do \
		if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; \
	done
(cd box; make install)
install -d /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib
install box.h /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
for i in libboxMPQ.a libboxD.a libboxMPFR.a libboxMPQ_debug.a libboxD_debug.a libboxMPFR_debug.a; do \
		if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; \
	done
for i in box.idl box.ml box.mli box.cmi box.cma boxMPQ.cma boxD.cma boxMPFR.cma libboxMPQ_caml.a libboxD_caml.a libboxMPFR_caml.a libboxMPQ_caml_debug.a libboxD_caml_debug.a libboxMPFR_caml_debug.a box.cmxa box.a boxMPQ.cmxa boxMPQ.a boxD.cmxa boxD.a boxMPFR.cmxa boxMPFR.a; do \
		if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; \
	done
(cd octagons; make install)
install -d /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include/oct /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/bin
install oct.h /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
install oct_internal.h oct_fun.h /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include/oct
for i in liboct*.* liboct*_debug.* liboct*_caml.* oct.idl; do \
		if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; \
	done
for i in dlloct*_caml.so; do \
		if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; \
	done
for i in octtest* octtop* octrun*; do \
		if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/bin; fi; \
	done
for i in oct.mli oct.cmi oct.cmx oct*.cma oct*.cmxa oct.a; do \
		if test -f $i; then install $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; \
	done
(cd mlapronidl; make install)
mkdir -p /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib
mkdir -p /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
for i in scalar.idl interval.idl coeff.idl dim.idl linexpr0.idl lincons0.idl generator0.idl texpr0.idl tcons0.idl manager.idl abstract0.idl var.idl environment.idl linexpr1.idl lincons1.idl generator1.idl texpr1.idl tcons1.idl abstract1.idl apron.cmi apron.cma apron.cmx apron.cmxa apron.a libapron_caml.a libapron_caml_debug.a ; do if test -f $i; then cp -f $i /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/lib; fi; done
install apron_caml.h /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/include
install -d /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/bin
if test -f aprontop; then install aprontop /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/sandbox/bin; fi
