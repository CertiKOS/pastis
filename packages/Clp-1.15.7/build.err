In file included from CoinBuild.cpp:18:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinBuild.cpp:93:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      memcpy(copyOfItem,item,length);
      ~~~~~~                 ^~~~~~
CoinBuild.cpp:153:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memcpy(copyOfItem,item,length);
        ~~~~~~                 ^~~~~~
8 warnings generated.
In file included from CoinDenseVector.cpp:12:
In file included from ./CoinDenseVector.hpp:17:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinDenseVector.cpp:20:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
   memset(elements_, 0, nElements_*sizeof(T));
                        ^~~~~~~~~~~
CoinDenseVector.cpp:208:16: note: in instantiation of member function 'CoinDenseVector<float>::clear' requested here
template class CoinDenseVector<float>;
               ^
CoinDenseVector.cpp:20:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
   memset(elements_, 0, nElements_*sizeof(T));
                        ^~~~~~~~~~~
CoinDenseVector.cpp:209:16: note: in instantiation of member function 'CoinDenseVector<double>::clear' requested here
template class CoinDenseVector<double>;
               ^
8 warnings generated.
In file included from CoinFactorization1.cpp:14:
In file included from ./CoinFactorization.hpp:22:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinFactorization1.cpp:14:
In file included from ./CoinFactorization.hpp:22:
./CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
CoinFactorization1.cpp:287:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (areaFactor)
  ~~  ^~~~~~~~~~
CoinFactorization1.cpp:412:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (areaFactor)
  ~~  ^~~~~~~~~~
CoinFactorization1.cpp:471:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (areaFactor)
  ~~  ^~~~~~~~~~
CoinFactorization1.cpp:608:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if ( !areaFactor_ ) {
       ~^~~~~~~~~~~
CoinFactorization1.cpp:1976:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if ( areaFactor_ ) {
    ~~   ^~~~~~~~~~~
In file included from CoinFactorization1.cpp:14:
In file included from ./CoinFactorization.hpp:22:
In file included from ./CoinIndexedVector.hpp:19:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
./CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstLess_2<int, double> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
CoinFactorization1.cpp:549:5: note: in instantiation of function template specialization 'CoinSort_2<int, double>' requested here
    CoinSort_2(indexRowU_.array()+startColumnU_.array()[i],
    ^
15 warnings generated.
In file included from CoinFactorization2.cpp:16:
In file included from ./CoinFactorization.hpp:22:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinFactorization2.cpp:16:
In file included from ./CoinFactorization.hpp:22:
./CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
CoinFactorization2.cpp:761:26: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (fwrite(first,last-first,1,fp)!=1)
        ~~~~~~       ~~~~^~~~~~
CoinFactorization2.cpp:848:25: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (fread(first,last-first,1,fp)!=1)
        ~~~~~       ~~~~^~~~~~
In file included from CoinFactorization2.cpp:16:
In file included from ./CoinFactorization.hpp:22:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:916:54: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            static_cast<CoinBigIndex>(fread(array,sizeof(T),newSize,fp));
                                      ~~~~~                 ^~~~~~~
CoinFactorization2.cpp:853:9: note: in instantiation of function template specialization 'CoinFromFile<double>' requested here
    if (CoinFromFile(elementU,lengthAreaU_ , fp, newSize )==1)
        ^
In file included from CoinFactorization2.cpp:16:
In file included from ./CoinFactorization.hpp:22:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:916:54: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            static_cast<CoinBigIndex>(fread(array,sizeof(T),newSize,fp));
                                      ~~~~~                 ^~~~~~~
CoinFactorization2.cpp:857:9: note: in instantiation of function template specialization 'CoinFromFile<int>' requested here
    if (CoinFromFile(indexRowU,lengthAreaU_ , fp, newSize )==1)
        ^
13 warnings generated.
In file included from CoinFactorization3.cpp:16:
In file included from ./CoinFactorization.hpp:22:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinFactorization3.cpp:16:
In file included from ./CoinFactorization.hpp:22:
./CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
CoinFactorization3.cpp:170:11: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
      if (ftranAverageAfterL_) {
      ~~  ^~~~~~~~~~~~~~~~~~~
CoinFactorization3.cpp:631:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (ftranAverageAfterR_) {
    ~~  ^~~~~~~~~~~~~~~~~~~
CoinFactorization3.cpp:843:9: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
    if (ftranAverageAfterR_) {
    ~~  ^~~~~~~~~~~~~~~~~~~
CoinFactorization3.cpp:908:9: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
    if (pivotValue) {
    ~~  ^~~~~~~~~~
CoinFactorization3.cpp:977:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if ( value ) {
      ~~   ^~~~~
CoinFactorization3.cpp:993:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if ( value ) {
      ~~   ^~~~~
CoinFactorization3.cpp:1271:8: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          if (pivotValue) {
          ~~  ^~~~~~~~~~
CoinFactorization3.cpp:1352:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if ( value ) {
        ~~   ^~~~~
CoinFactorization3.cpp:1371:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if ( value ) {
            ~~   ^~~~~
CoinFactorization3.cpp:1391:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if ( value ) {
        ~~   ^~~~~
CoinFactorization3.cpp:1410:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if ( value ) {
            ~~   ^~~~~
CoinFactorization3.cpp:1742:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (value) 
      ~~  ^~~~~
CoinFactorization3.cpp:1983:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (value) {
        ~~  ^~~~~
22 warnings generated.
In file included from CoinFactorization4.cpp:16:
In file included from ./CoinFactorization.hpp:22:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinFactorization4.cpp:16:
In file included from ./CoinFactorization.hpp:22:
./CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
CoinFactorization4.cpp:1037:9: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
    if (btranAverageAfterU_) {
    ~~  ^~~~~~~~~~~~~~~~~~~
CoinFactorization4.cpp:1083:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (region[first]) 
    ~~  ^~~~~~~~~~~~~
CoinFactorization4.cpp:1169:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (region[first]) 
    ~~  ^~~~~~~~~~~~~
CoinFactorization4.cpp:1313:23: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if(!mark[kPivot]&&region[kPivot]) {
                    ~~^~~~~~~~~~~~~~
CoinFactorization4.cpp:1377:9: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
    if (btranAverageAfterL_) {
    ~~  ^~~~~~~~~~~~~~~~~~~
CoinFactorization4.cpp:1606:10: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
    if ( pivotValue ) {
    ~~   ^~~~~~~~~~
CoinFactorization4.cpp:1653:10: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
    if ( pivotValue ) {
    ~~   ^~~~~~~~~~
CoinFactorization4.cpp:1659:6: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
        if (oldValue) {
        ~~  ^~~~~~~~
CoinFactorization4.cpp:1660:8: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          if (newValue) 
          ~~  ^~~~~~~~
CoinFactorization4.cpp:1737:12: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
         0,maximumRowsExtra_*sizeof(char));
           ^~~~~~~~~~~~~~~~~~
CoinFactorization4.cpp:1907:8: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
CoinFactorization4.cpp:1974:6: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
        if (value) {
        ~~  ^~~~~
CoinFactorization4.cpp:2247:9: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
    if (pivotValue) {
    ~~  ^~~~~~~~~~
CoinFactorization4.cpp:2253:9: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          if (!oldValue) {
              ~^~~~~~~~
CoinFactorization4.cpp:2268:18: warning: implicit conversion turns floating-point number into integer: 'CoinFactorizationDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
      } else if (pivotValue) {
             ~~  ^~~~~~~~~~
CoinFactorization4.cpp:2309:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (!region[pivotRow])
          ~^~~~~~~~~~~~~~~~
CoinFactorization4.cpp:2313:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (region[pivotRow])
      ~~  ^~~~~~~~~~~~~~~~
CoinFactorization4.cpp:2617:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (btranCountInput_&&btranCountAfterU_&&btranCountAfterR_) {
        ^~~~~~~~~~~~~~~~~~
CoinFactorization4.cpp:2617:27: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (btranCountInput_&&btranCountAfterU_&&btranCountAfterR_) {
                        ~~^~~~~~~~~~~~~~~~~
CoinFactorization4.cpp:2617:46: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (btranCountInput_&&btranCountAfterU_&&btranCountAfterR_) {
                                           ~~^~~~~~~~~~~~~~~~~
29 warnings generated.
In file included from CoinSimpFactorization.cpp:10:
In file included from ./CoinSimpFactorization.hpp:16:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinSimpFactorization.cpp:10:
In file included from ./CoinSimpFactorization.hpp:16:
./CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
CoinSimpFactorization.cpp:38:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(firstColKnonzeros, -1, (numRows+1)*sizeof(int) ); 
                                   ~~~~~~~^~ ~
CoinSimpFactorization.cpp:381:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(pivotRow_,other.pivotRow_,(2*maximumRows_+numberPivots_)*sizeof(int));
                                      ~~~~~~~~~~~~~~^~~~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:383:66: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(elements_,other.elements_,(maximumRows_+numberPivots_)*maximumRows_*sizeof(CoinFactorizationDouble));
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
CoinSimpFactorization.cpp:423:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(denseVector_,other.denseVector_,maximumRows_*sizeof(double));
                                                 ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:428:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(workArea2_,other.workArea2_,maximumRows_*sizeof(double));
                                             ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:433:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(workArea3_,other.workArea3_,maximumRows_*sizeof(double));
                                             ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:438:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(vecLabels_,other.vecLabels_,maximumRows_*sizeof(int));
                                             ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:443:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(indVector_ ,other.indVector_ , maximumRows_ *sizeof(int ));
                                                ^~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:449:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(auxVector_ ,other.auxVector_ , maximumRows_ *sizeof(double ));
                                                ^~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:454:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(auxInd_ , other.auxInd_, maximumRows_ *sizeof(int));
                                          ^~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:460:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(vecKeep_ ,other.vecKeep_ , maximumRows_ *sizeof(double));
                                            ^~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:465:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(indKeep_ , other.indKeep_, maximumRows_ *sizeof(int));
                                            ^~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:470:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(LrowStarts_ , other.LrowStarts_, maximumRows_ *sizeof(int));
                                                  ^~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:475:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(LrowLengths_ , other.LrowLengths_ , maximumRows_ *sizeof(int));
                                                     ^~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:480:40: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(Lrows_ , other.Lrows_, other.LrowCap_*sizeof(double));
                                        ~~~~~~^~~~~~~~~
CoinSimpFactorization.cpp:485:44: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(LrowInd_, other.LrowInd_,  other.LrowCap_*sizeof(int));
                                            ~~~~~~^~~~~~~~~
CoinSimpFactorization.cpp:491:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(LcolStarts_ ,other.LcolStarts_ , maximumRows_*sizeof(int));
                                                  ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:496:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(LcolLengths_ , other.LcolLengths_ , maximumRows_ *sizeof(int));
                                                     ^~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:501:46: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(Lcolumns_ ,other.Lcolumns_ , other.LcolCap_ *sizeof(double));
                                              ~~~~~~^~~~~~~~ ~
CoinSimpFactorization.cpp:506:44: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(LcolInd_ , other.LcolInd_, other.LcolCap_*sizeof(int));
                                            ~~~~~~^~~~~~~~~
CoinSimpFactorization.cpp:512:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(UrowStarts_ ,other.UrowStarts_ , maximumRows_ *sizeof(int));
                                                  ^~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:517:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(UrowLengths_ ,other.UrowLengths_ , maximumRows_ *sizeof(int));
                                                    ^~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:529:40: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(Urows_ ,other.Urows_ , other.UrowMaxCap_ *sizeof(double));
                                        ~~~~~~^~~~~~~~~~~ ~
CoinSimpFactorization.cpp:534:42: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(UrowInd_,other.UrowInd_, other.UrowMaxCap_*sizeof(int));
                                          ~~~~~~^~~~~~~~~~~~
CoinSimpFactorization.cpp:540:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(prevRowInU_ , other.prevRowInU_, maximumRows_*sizeof(int));
                                                  ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:545:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(nextRowInU_, other.nextRowInU_, maximumRows_*sizeof(int));
                                                 ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:551:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(UcolStarts_ , other.UcolStarts_, maximumRows_*sizeof(int));
                                                  ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:556:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(UcolLengths_ , other.UcolLengths_,  maximumRows_*sizeof(int));
                                                     ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:568:46: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(Ucolumns_ ,other.Ucolumns_ , other.UcolMaxCap_*sizeof(double));
                                              ~~~~~~^~~~~~~~~~~~
CoinSimpFactorization.cpp:573:45: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(UcolInd_ , other.UcolInd_ , other.UcolMaxCap_*sizeof(int));
                                             ~~~~~~^~~~~~~~~~~~
CoinSimpFactorization.cpp:578:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(prevColInU_ , other.prevColInU_ , maximumRows_*sizeof(int));
                                                   ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:583:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(nextColInU_ ,other.nextColInU_ , maximumRows_*sizeof(int));
                                                  ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:588:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(colSlack_, other.colSlack_, maximumRows_*sizeof(int));
                                             ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:595:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(invOfPivots_ , other.invOfPivots_,  maximumRows_*sizeof(double));
                                                     ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:601:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(colOfU_ , other.colOfU_, maximumRows_*sizeof(int));
                                          ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:606:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(colPosition_, other.colPosition_,  maximumRows_*sizeof(int));
                                                    ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:611:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(rowOfU_ , other.rowOfU_, maximumRows_*sizeof(int));
                                          ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:616:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(rowPosition_ , other.rowPosition_,  maximumRows_*sizeof(int));
                                                     ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:621:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(secRowOfU_ , other.secRowOfU_,  maximumRows_*sizeof(int));
                                                 ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:626:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(secRowPosition_ , other.secRowPosition_, maximumRows_*sizeof(int));
                                                          ^~~~~~~~~~~~~
CoinSimpFactorization.cpp:632:52: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(EtaPosition_ ,other.EtaPosition_ , other.maxEtaRows_ *sizeof(int));
                                                    ~~~~~~^~~~~~~~~~~ ~
CoinSimpFactorization.cpp:637:47: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(EtaStarts_, other.EtaStarts_, other.maxEtaRows_*sizeof(int));
                                               ~~~~~~^~~~~~~~~~~~
CoinSimpFactorization.cpp:642:49: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(EtaLengths_, other.EtaLengths_, other.maxEtaRows_*sizeof(int));
                                                 ~~~~~~^~~~~~~~~~~~
CoinSimpFactorization.cpp:647:41: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(EtaInd_, other.EtaInd_, other.EtaMaxCap_*sizeof(int));
                                         ~~~~~~^~~~~~~~~~~
CoinSimpFactorization.cpp:652:37: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
          memcpy(Eta_ , other.Eta_,  other.EtaMaxCap_*sizeof(double));
                                     ~~~~~~^~~~~~~~~~~
CoinSimpFactorization.cpp:769:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(LrowStarts_,-1,numberRows_ * sizeof(int));
                          ^~~~~~~~~~~ ~
CoinSimpFactorization.cpp:770:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(LrowLengths_,0,numberRows_ * sizeof(int));
                          ^~~~~~~~~~~ ~
CoinSimpFactorization.cpp:771:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(LcolStarts_,-1,numberRows_ * sizeof(int));
                          ^~~~~~~~~~~ ~
CoinSimpFactorization.cpp:772:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(LcolLengths_,0,numberRows_ * sizeof(int));
                          ^~~~~~~~~~~ ~
CoinSimpFactorization.cpp:985:18: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        memset(region,0,numberRows_*sizeof(double));
                        ^~~~~~~~~~~~
CoinSimpFactorization.cpp:1030:16: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memset(vec2,0,numberRows_*sizeof(double));
                      ^~~~~~~~~~~~
CoinSimpFactorization.cpp:1140:18: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        memset(region,0,numberRows_*sizeof(double));
                        ^~~~~~~~~~~~
CoinSimpFactorization.cpp:1691:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(aux, Lcolumns_, LcolCap_ * sizeof(double));
                           ^~~~~~~~ ~
CoinSimpFactorization.cpp:1696:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(iaux, LcolInd_, LcolCap_ * sizeof(int));
                           ^~~~~~~~ ~
CoinSimpFactorization.cpp:1705:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(iaux, UcolInd_, UcolMaxCap_*sizeof(int) );
                           ^~~~~~~~~~~~
CoinSimpFactorization.cpp:1711:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(aux, Ucolumns_, UcolMaxCap_*sizeof(double) );
                               ^~~~~~~~~~~~
CoinSimpFactorization.cpp:1721:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(iaux, UrowInd_, UrowMaxCap_*sizeof(int) );
                           ^~~~~~~~~~~~
CoinSimpFactorization.cpp:1726:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(aux, Urows_, UrowMaxCap_*sizeof(double) );
                        ^~~~~~~~~~~~
CoinSimpFactorization.cpp:1735:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(UcolLengths_,0,numberColumns_*sizeof(int));
                          ^~~~~~~~~~~~~~~
CoinSimpFactorization.cpp:1792:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(LrowLengths_,0,numberRows_*sizeof(int));
                          ^~~~~~~~~~~~
CoinSimpFactorization.cpp:1828:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(LrowLengths_,0,numberRows_*sizeof(int));
                          ^~~~~~~~~~~~
CoinSimpFactorization.cpp:1901:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(denseVector_,0,numberRows_*sizeof(double));
                          ^~~~~~~~~~~~
CoinSimpFactorization.cpp:1909:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(vecLabels_,0, numberRows_*sizeof(int)); 
                         ^~~~~~~~~~~~
CoinSimpFactorization.cpp:2242:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if ( rhs[ rowOfU_[last] ] ) break;
        ~~   ^~~~~~~~~~~~~~~~~~~~
CoinSimpFactorization.cpp:2386:5: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           sizeNewColumn * sizeof(double) );
           ^~~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:2388:5: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           sizeNewColumn * sizeof(int) );
           ^~~~~~~~~~~~~ ~
CoinSimpFactorization.cpp:2495:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(&Urows_[startRow],&workArea2_[0], newEls*sizeof(double) );
                                             ^~~~~~~
CoinSimpFactorization.cpp:2496:48: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(&UrowInd_[startRow],&indVector_[0], newEls*sizeof(int) );
                                               ^~~~~~~
CoinSimpFactorization.cpp:2509:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(iaux, EtaPosition_, maxEtaRows_ * sizeof(int));
                                   ^~~~~~~~~~~ ~
CoinSimpFactorization.cpp:2514:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(jaux, EtaStarts_, maxEtaRows_ * sizeof(int));
                                 ^~~~~~~~~~~ ~
CoinSimpFactorization.cpp:2519:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(kaux, EtaLengths_, maxEtaRows_ * sizeof(int));
                                  ^~~~~~~~~~~ ~
CoinSimpFactorization.cpp:2529:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(iaux, EtaInd_, EtaSize_ * sizeof(int));
                              ^~~~~~~~ ~
CoinSimpFactorization.cpp:2534:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(aux, Eta_, EtaSize_ * sizeof(double));
                          ^~~~~~~~ ~
CoinSimpFactorization.cpp:2548:5: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           numberRows_ * sizeof(int) );
           ^~~~~~~~~~~ ~
CoinSimpFactorization.cpp:2550:5: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           numberRows_ * sizeof(int) );
           ^~~~~~~~~~~ ~
84 warnings generated.
In file included from CoinDenseFactorization.cpp:12:
In file included from ./CoinDenseFactorization.hpp:20:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinDenseFactorization.cpp:12:
In file included from ./CoinDenseFactorization.hpp:20:
./CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
CoinDenseFactorization.cpp:182:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(workArea_,0,numberRows_*sizeof(CoinFactorizationDouble));
                       ^~~~~~~~~~~~
CoinDenseFactorization.cpp:378:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(elements,0,numberRows_*sizeof(CoinFactorizationDouble));
                    ^~~~~~~~~~~~
11 warnings generated.
In file included from CoinOslFactorization.cpp:10:
In file included from ./CoinOslFactorization.hpp:18:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinOslFactorization.cpp:10:
In file included from ./CoinOslFactorization.hpp:18:
./CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
CoinOslFactorization.cpp:829:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  return reinterpret_cast<double *>( malloc(number_entries*sizeof(double)));
                                            ^~~~~~~~~~~~~~~
CoinOslFactorization.cpp:844:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  return reinterpret_cast<int *>( malloc(number_entries*sizeof(int)));
                                         ^~~~~~~~~~~~~~~
CoinOslFactorization.cpp:859:17: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  return malloc(number_entries);
         ~~~~~~ ^~~~~~~~~~~~~~
CoinOslFactorization.cpp:1003:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  tempD += ((6*nrowmx +8)*(sizeof(int))/sizeof(double));
             ~~~~~~~~~^~ ~
CoinOslFactorization.cpp:1037:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  nDouble = static_cast<int>(sizeof(int)*(nInt+1)/sizeof(double));
                                        ~ ~~~~^~
CoinOslFactorization.cpp:1147:68: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
  memcpy(&fact->nrow,&rhsFact->nrow,((&fact->maxNNetas-&fact->nrow)+1)*
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~ ~
CoinOslFactorization.cpp:1188:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(fact->kw1adr,rhsFact->kw1adr,length*sizeof(double));
                                          ^~~~~~~
CoinOslFactorization.cpp:1265:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
              memcpy(hcoli+istart,hcoliR+istart,hinrow[i]*sizeof(int));
                                                ^~~~~~~~~~
CoinOslFactorization.cpp:1281:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
              memcpy(hcoli+istart,hcoliR+istart,hinrow[i]*sizeof(int));
                                                ^~~~~~~~~~
CoinOslFactorization.cpp:1282:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
              memcpy(de2val+istart,de2valR+istart,hinrow[i]*sizeof(double));
                                                  ^~~~~~~~~~
CoinOslFactorization.cpp:1390:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (areaFactor)
  ~~  ^~~~~~~~~~
20 warnings generated.
In file included from CoinOslFactorization2.cpp:15:
In file included from ./CoinOslFactorization.hpp:18:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinOslFactorization2.cpp:15:
In file included from ./CoinOslFactorization.hpp:18:
./CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
CoinOslFactorization2.cpp:436:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (dwork1[i]) {
    ~~  ^~~~~~~~~
CoinOslFactorization2.cpp:486:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (dwork1[i]) {
    ~~  ^~~~~~~~~
CoinOslFactorization2.cpp:846:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (dv) {
    ~~  ^~
CoinOslFactorization2.cpp:1235:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (dpermu[ipiv])
        ~~  ^~~~~~~~~~~~
CoinOslFactorization2.cpp:1247:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (dpermu[ipiv]) {
      ~~  ^~~~~~~~~~~~
CoinOslFactorization2.cpp:1258:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (!dpermu[ipiv]) {
            ~^~~~~~~~~~~~
CoinOslFactorization2.cpp:1268:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (dpermu[ipiv])
        ~~  ^~~~~~~~~~~~
CoinOslFactorization2.cpp:2245:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if (!dwork1[ipiv]) {
                ~^~~~~~~~~~~~
CoinOslFactorization2.cpp:2558:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (dluval[kc]) {
          ~~  ^~~~~~~~~~
CoinOslFactorization2.cpp:2583:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if (dluval[kc]) {
            ~~  ^~~~~~~~~~
19 warnings generated.
In file included from CoinOslFactorization3.cpp:8:
In file included from ./CoinOslFactorization.hpp:18:
In file included from ./CoinIndexedVector.hpp:20:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinOslFactorization3.cpp:8:
In file included from ./CoinOslFactorization.hpp:18:
./CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from CoinOslFactorization3.cpp:811:
./CoinOslC.h:366:12: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
        if ( (jj1 == 0)) {
              ~~~~^~~~
./CoinOslC.h:366:12: note: remove extraneous parentheses around the comparison to silence this warning
        if ( (jj1 == 0)) {
             ~    ^   ~
./CoinOslC.h:366:12: note: use '=' to turn this equality comparison into an assignment
        if ( (jj1 == 0)) {
                  ^~
                  =
./CoinOslC.h:375:12: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
        if ( (jj2 == 0)) {
              ~~~~^~~~
./CoinOslC.h:375:12: note: remove extraneous parentheses around the comparison to silence this warning
        if ( (jj2 == 0)) {
             ~    ^   ~
./CoinOslC.h:375:12: note: use '=' to turn this equality comparison into an assignment
        if ( (jj2 == 0)) {
                  ^~
                  =
In file included from CoinOslFactorization3.cpp:1205:
./CoinOslC.h:366:12: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
        if ( (jj1 == 0)) {
              ~~~~^~~~
./CoinOslC.h:366:12: note: remove extraneous parentheses around the comparison to silence this warning
        if ( (jj1 == 0)) {
             ~    ^   ~
./CoinOslC.h:366:12: note: use '=' to turn this equality comparison into an assignment
        if ( (jj1 == 0)) {
                  ^~
                  =
./CoinOslC.h:375:12: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
        if ( (jj2 == 0)) {
              ~~~~^~~~
./CoinOslC.h:375:12: note: remove extraneous parentheses around the comparison to silence this warning
        if ( (jj2 == 0)) {
             ~    ^   ~
./CoinOslC.h:375:12: note: use '=' to turn this equality comparison into an assignment
        if ( (jj2 == 0)) {
                  ^~
                  =
CoinOslFactorization3.cpp:1221:21: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
  memset(hpivro+1,0,nrow*sizeof(int));
                    ^~~~~
CoinOslFactorization3.cpp:1222:21: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
  memset(hpivco+1,0,nrow*sizeof(int));
                    ^~~~~
CoinOslFactorization3.cpp:1912:12: warning: implicit conversion from 'long' to 'int' changes value from -9223372036854775807 to 1 [-Wconstant-conversion]
  int last=-LONG_MAX;
      ~~~~ ^~~~~~~~~
CoinOslFactorization3.cpp:2385:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(array,0xff,nSet*sizeof(int));
                      ^~~~~
CoinOslFactorization3.cpp:2386:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(array+nSet,0,(n2-nSet)*sizeof(int));
                         ~~^~~~~ ~
CoinOslFactorization3.cpp:2793:63: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
  CoinZeroN(reinterpret_cast<int *>(rlink+1),static_cast<int>(nrow*(sizeof(EKKHlink)/sizeof(int))));
                                                              ^~~~~
CoinOslFactorization3.cpp:2794:63: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
  CoinZeroN(reinterpret_cast<int *>(clink+1),static_cast<int>(nrow*(sizeof(EKKHlink)/sizeof(int))));
                                                              ^~~~~
20 warnings generated.
In file included from CoinFileIO.cpp:14:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinFileIO.cpp:70:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    return static_cast<int>(fread (buffer, 1, size, f_));
                            ~~~~~             ^~~~
CoinFileIO.cpp:234:34: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    return gzread (gzf_, buffer, size);
           ~~~~~~                ^~~~
CoinFileIO.cpp:413:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    return static_cast<int>(fwrite (buffer, 1, size, f_));
                            ~~~~~~             ^~~~
CoinFileIO.cpp:455:56: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    return gzwrite (gzf_, const_cast<void *> (buffer), size);
           ~~~~~~~                                     ^~~~
10 warnings generated.
CoinFinite.cpp:36:12: warning: 'finite' is deprecated: first deprecated in macOS 10.9 [-Wdeprecated-declarations]
    return COIN_C_FINITE(val)!=0;
           ^
./config.h:38:23: note: expanded from macro 'COIN_C_FINITE'
#define COIN_C_FINITE finite
                      ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/usr/include/math.h:757:12: note: 'finite' has been explicitly marked deprecated here
extern int finite(double) __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_9, __IPHONE_NA, __IPHONE_NA);
           ^
1 warning generated.
In file included from CoinIndexedVector.cpp:16:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinIndexedVector.cpp:17:
./CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
./CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
CoinIndexedVector.cpp:264:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (elements_[index])
  ~~  ^~~~~~~~~~~~~~~~
CoinIndexedVector.cpp:282:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (elements_[index]) {
  ~~  ^~~~~~~~~~~~~~~~
CoinIndexedVector.cpp:412:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (elements_[indexValue]) {
    ~~  ^~~~~~~~~~~~~~~~~~~~~
CoinIndexedVector.cpp:743:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (!oldValue) {
        ~^~~~~~~~
CoinIndexedVector.cpp:790:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (!oldValue) {
        ~^~~~~~~~
CoinIndexedVector.cpp:837:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (oldValue) {
    ~~  ^~~~~~~~
CoinIndexedVector.cpp:881:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (oldValue) {
    ~~  ^~~~~~~~
CoinIndexedVector.cpp:882:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (!value)
          ~^~~~~
CoinIndexedVector.cpp:1071:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (elements_[indexValue]) {
    ~~  ^~~~~~~~~~~~~~~~~~~~~
CoinIndexedVector.cpp:1227:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (elements_[indexValue]) {
    ~~  ^~~~~~~~~~~~~~~~~~~~~
CoinIndexedVector.cpp:1413:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(celem,0,CoinMin(capacity_,tempB.capacity_)*sizeof(double));
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CoinIndexedVector.cpp:1446:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (elem[i]) {
      ~~  ^~~~~~~
CoinIndexedVector.cpp:1454:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (celem[i]) {
      ~~  ^~~~~~~~
CoinIndexedVector.cpp:1487:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(temp,0,CoinMax(capacity_,rhs.capacity_)*sizeof(double));
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CoinIndexedVector.cpp:1574:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (elements_[i])
    ~~  ^~~~~~~~~~~~
CoinIndexedVector.cpp:1598:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (value) {
    ~~  ^~~~~
CoinIndexedVector.cpp:1694:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (value) {
    ~~  ^~~~~
CoinIndexedVector.cpp:1802:20: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  memset (array_,0,size_);
  ~~~~~~           ^~~~~
CoinIndexedVector.cpp:1882:21: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memset(array_,0,size);
    ~~~~~~          ^~~~
CoinIndexedVector.cpp:2036:65: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
  memset(startPartition_,0,((&numberPartitions_-startPartition_)+1)*sizeof(int));
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~ ~
CoinIndexedVector.cpp:2042:83: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
  memcpy(startPartition_,rhs.startPartition_,((&numberPartitions_-startPartition_)+1)*sizeof(int));
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~ ~
CoinIndexedVector.cpp:2048:84: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
  memcpy(startPartition_,rhs->startPartition_,((&numberPartitions_-startPartition_)+1)*sizeof(int));
                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~ ~
CoinIndexedVector.cpp:2055:85: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    memcpy(startPartition_,rhs.startPartition_,((&numberPartitions_-startPartition_)+1)*sizeof(int));
                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~ ~
CoinIndexedVector.cpp:2085:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memmove(indices_+n,indices_+start,nThis*sizeof(int));
                                        ^~~~~~
CoinIndexedVector.cpp:2086:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memmove(elements_+n,elements_+start,nThis*sizeof(double));
                                          ^~~~~~
CoinIndexedVector.cpp:2100:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memset(elements_+start,0,nThis*sizeof(double));
                                 ^~~~~~
CoinIndexedVector.cpp:2113:65: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
  memset(startPartition_,0,((&numberPartitions_-startPartition_)+1)*sizeof(int));
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~ ~
CoinIndexedVector.cpp:2123:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(startPartition_,starts,(number+1)*sizeof(int));
                                   ~~~~~~^~ ~
CoinIndexedVector.cpp:2148:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memset(elements_+startPartition_[i],0,n*sizeof(double));
                                            ^~
CoinIndexedVector.cpp:2152:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(elements_,0,nElements_*sizeof(double));
                       ^~~~~~~~~~~
CoinIndexedVector.cpp:2166:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(elements_+startPartition_[i],0,n*sizeof(double));
                                          ^~
CoinIndexedVector.cpp:2178:49: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(elements_+startPartition_[partition],0,n*sizeof(double));
                                                ^~
CoinIndexedVector.cpp:2250:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (!tolerance) {
      ~^~~~~~~~~
CoinIndexedVector.cpp:2253:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (value) {
      ~~  ^~~~~
CoinIndexedVector.cpp:2262:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (value) {
      ~~  ^~~~~
In file included from CoinIndexedVector.cpp:17:
In file included from ./CoinIndexedVector.hpp:19:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
CoinIndexedVector.cpp:947:3: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstGreater_2<int, double> >' requested here
  CoinSort_2(indices_, indices_ + nElements_, elements,
  ^
In file included from CoinIndexedVector.cpp:17:
In file included from ./CoinIndexedVector.hpp:19:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
CoinIndexedVector.cpp:966:3: note: in instantiation of function template specialization 'CoinSort_2<double, int, CoinFirstLess_2<double, int> >' requested here
  CoinSort_2(elements, elements + nElements_, indices_,
  ^
In file included from CoinIndexedVector.cpp:16:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinIndexedVector.cpp:2283:25: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
  double * tempElements=CoinCopyOfArray(elements_,capacity_);
                        ^
In file included from CoinIndexedVector.cpp:16:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinIndexedVector.cpp:2284:21: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
  int * tempIndices=CoinCopyOfArray(indices_,capacity_);
                    ^
48 warnings generated.
In file included from CoinLpIO.cpp:24:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinLpIO.cpp:26:
In file included from ./CoinLpIO.hpp:21:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
CoinLpIO.cpp:41:3: warning: field 'rowsense_' will be initialized after field 'rhs_' [-Wreorder]
  rowsense_(NULL),
  ^
CoinLpIO.cpp:43:3: warning: field 'rowrange_' will be initialized after field 'matrixByRow_' [-Wreorder]
  rowrange_(NULL),
  ^
CoinLpIO.cpp:44:3: warning: field 'matrixByRow_' will be initialized after field 'matrixByColumn_' [-Wreorder]
  matrixByRow_(NULL),
  ^
CoinLpIO.cpp:55:3: warning: field 'numberAcross_' will be initialized after field 'epsilon_' [-Wreorder]
  numberAcross_(10),
  ^
CoinLpIO.cpp:87:5: warning: field 'rowsense_' will be initialized after field 'rhs_' [-Wreorder]
    rowsense_(NULL),
    ^
CoinLpIO.cpp:89:5: warning: field 'rowrange_' will be initialized after field 'matrixByRow_' [-Wreorder]
    rowrange_(NULL),
    ^
CoinLpIO.cpp:90:5: warning: field 'matrixByRow_' will be initialized after field 'matrixByColumn_' [-Wreorder]
    matrixByRow_(NULL),
    ^
CoinLpIO.cpp:101:5: warning: field 'numberAcross_' will be initialized after field 'epsilon_' [-Wreorder]
    numberAcross_(10),
    ^
CoinLpIO.cpp:148:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       rowlower_ = reinterpret_cast<double*> (malloc(numberRows_ * sizeof(double)));
                                                     ^~~~~~~~~~~ ~
CoinLpIO.cpp:149:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       rowupper_ = reinterpret_cast<double*> (malloc(numberRows_ * sizeof(double)));
                                                     ^~~~~~~~~~~ ~
CoinLpIO.cpp:150:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       memcpy(rowlower_, rhs.rowlower_, numberRows_ * sizeof(double));
                                        ^~~~~~~~~~~ ~
CoinLpIO.cpp:151:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       memcpy(rowupper_, rhs.rowupper_, numberRows_ * sizeof(double));
                                        ^~~~~~~~~~~ ~
CoinLpIO.cpp:152:55: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       rowrange_ = reinterpret_cast<double *> (malloc(numberRows_*sizeof(double)));
                                                      ^~~~~~~~~~~~
CoinLpIO.cpp:153:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       rowsense_ = reinterpret_cast<char *> (malloc(numberRows_*sizeof(char)));
                                                    ^~~~~~~~~~~~
CoinLpIO.cpp:154:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       rhs_ = reinterpret_cast<double *> (malloc(numberRows_*sizeof(double)));
                                                 ^~~~~~~~~~~~
CoinLpIO.cpp:155:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       memcpy(rowrange_,rhs.getRowRange(),numberRows_*sizeof(double));
                                          ^~~~~~~~~~~~
CoinLpIO.cpp:156:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       memcpy(rowsense_,rhs.getRowSense(),numberRows_*sizeof(char));
                                          ^~~~~~~~~~~~
CoinLpIO.cpp:157:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       memcpy(rhs_,rhs.getRightHandSide(),numberRows_*sizeof(double));
                                          ^~~~~~~~~~~~
CoinLpIO.cpp:161:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       collower_ = reinterpret_cast<double*> (malloc(numberColumns_ * sizeof(double)));
                                                     ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:162:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       colupper_ = reinterpret_cast<double*> (malloc(numberColumns_ * sizeof(double)));
                                                     ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:163:55: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       objective_ = reinterpret_cast<double*> (malloc(numberColumns_ * sizeof(double)));
                                                      ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:164:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       memcpy(collower_, rhs.collower_, numberColumns_ * sizeof(double));
                                        ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:165:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       memcpy(colupper_, rhs.colupper_, numberColumns_ * sizeof(double));
                                        ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:166:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       memcpy(objective_, rhs.objective_, numberColumns_ * sizeof(double));
                                          ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:170:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       integerType_ = reinterpret_cast<char*> (malloc (numberColumns_ * sizeof(char)));
                                                       ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:171:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
       memcpy(integerType_, rhs.integerType_, numberColumns_ * sizeof(char));
                                              ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:190:62: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          names_[section] = reinterpret_cast<char**> (malloc(maxHash_[section] *
                                                             ^~~~~~~~~~~~~~~~~ ~
CoinLpIO.cpp:200:59: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          std::memcpy(hash_[section], rhs.hash_[section], maxHash_[section]*sizeof(CoinHashLink));
                                                          ^~~~~~~~~~~~~~~~~~
CoinLpIO.cpp:397:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rowsense_ = reinterpret_cast<char *> (malloc(nr*sizeof(char)));
                                                 ^~~
CoinLpIO.cpp:413:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rhs_ = reinterpret_cast<double *> (malloc(nr*sizeof(double)));
                                              ^~~
CoinLpIO.cpp:430:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rowrange_ = reinterpret_cast<double *> (malloc(nr*sizeof(double)));
                                                   ^~~
CoinLpIO.cpp:706:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  rowlower_ = reinterpret_cast<double *> (malloc (numberRows_ * sizeof(double)));
                                                  ^~~~~~~~~~~ ~
CoinLpIO.cpp:707:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  rowupper_ = reinterpret_cast<double *> (malloc (numberRows_ * sizeof(double)));
                                                  ^~~~~~~~~~~ ~
CoinLpIO.cpp:708:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  collower_ = reinterpret_cast<double *> (malloc (numberColumns_ * sizeof(double)));
                                                  ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:709:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  colupper_ = reinterpret_cast<double *> (malloc (numberColumns_ * sizeof(double)));
                                                  ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:710:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  objective_ = reinterpret_cast<double *> (malloc (numberColumns_ * sizeof(double)));
                                                   ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:718:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    integerType_ = reinterpret_cast<char *> (malloc (numberColumns_ * sizeof(char)));
                                                     ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:737:68: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  char **defaultRowNames = reinterpret_cast<char **> (malloc ((nrow+1) * sizeof(char *)));
                                                               ~~~~^~  ~
CoinLpIO.cpp:762:63: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  char **defaultColNames = reinterpret_cast<char **> (malloc (ncol * sizeof(char *)));
                                                              ^~~~ ~
CoinLpIO.cpp:929:58: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     prowNames = reinterpret_cast<char **> (malloc ((nrow+1) * sizeof(char *)));
                                                     ~~~~^~  ~
CoinLpIO.cpp:941:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     pcolNames = reinterpret_cast<char **> (malloc (ncol * sizeof(char *)));
                                                    ^~~~ ~
CoinLpIO.cpp:1571:74: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *colNames = reinterpret_cast<char **> (realloc ((*colNames), (*maxcoeff+1) * sizeof(char *)));
                                                                ~~~~~~~~~^~  ~
CoinLpIO.cpp:1572:69: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *coeff = reinterpret_cast<double *> (realloc ((*coeff), (*maxcoeff+1) * sizeof(double)));
                                                           ~~~~~~~~~^~  ~
CoinLpIO.cpp:1582:72: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *rowNames = reinterpret_cast<char **> (realloc ((*rowNames), (*maxrow+1) * sizeof(char *)));
                                                                ~~~~~~~^~  ~
CoinLpIO.cpp:1583:64: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *start = reinterpret_cast<int *> (realloc ((*start), (*maxrow+1) * sizeof(int)));
                                                        ~~~~~~~^~  ~
CoinLpIO.cpp:1584:63: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *rhs = reinterpret_cast<double *> (realloc ((*rhs), (*maxrow+1) * sizeof(double)));
                                                       ~~~~~~~^~  ~
CoinLpIO.cpp:1585:69: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *rowlow = reinterpret_cast<double *> (realloc ((*rowlow), (*maxrow+1) * sizeof(double)));
                                                             ~~~~~~~^~  ~
CoinLpIO.cpp:1586:67: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *rowup = reinterpret_cast<double *> (realloc ((*rowup), (*maxrow+1) * sizeof(double)));
                                                           ~~~~~~~^~  ~
CoinLpIO.cpp:1596:69: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *collow = reinterpret_cast<double *> (realloc ((*collow), (*maxcol+1) * sizeof(double)));
                                                             ~~~~~~~^~  ~
CoinLpIO.cpp:1597:67: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *colup = reinterpret_cast<double *> (realloc ((*colup), (*maxcol+1) * sizeof(double)));
                                                           ~~~~~~~^~  ~
CoinLpIO.cpp:1598:67: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *is_int = reinterpret_cast<char *> (realloc ((*is_int), (*maxcol+1) * sizeof(char)));
                                                           ~~~~~~~^~  ~
CoinLpIO.cpp:1739:65: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  char **colNames = reinterpret_cast<char **> (malloc ((maxcoeff+1) * sizeof(char *)));
                                                        ~~~~~~~~^~  ~
CoinLpIO.cpp:1740:64: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  double *coeff = reinterpret_cast<double *> (malloc ((maxcoeff+1) * sizeof(double)));
                                                       ~~~~~~~~^~  ~
CoinLpIO.cpp:1742:63: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  char **rowNames = reinterpret_cast<char **> (malloc ((maxrow+1) * sizeof(char *)));
                                                        ~~~~~~^~  ~
CoinLpIO.cpp:1743:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  int *start = reinterpret_cast<int *> (malloc ((maxrow+1) * sizeof(int)));
                                                 ~~~~~~^~  ~
CoinLpIO.cpp:1744:60: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  double *rhs = reinterpret_cast<double *> (malloc ((maxrow+1) * sizeof(double)));
                                                     ~~~~~~^~  ~
CoinLpIO.cpp:1745:63: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  double *rowlow = reinterpret_cast<double *> (malloc ((maxrow+1) * sizeof(double)));
                                                        ~~~~~~^~  ~
CoinLpIO.cpp:1746:62: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  double *rowup = reinterpret_cast<double *> (malloc ((maxrow+1) * sizeof(double)));
                                                       ~~~~~~^~  ~
CoinLpIO.cpp:1818:63: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  double *collow = reinterpret_cast<double *> (malloc ((maxcol+1) * sizeof(double)));
                                                        ~~~~~~^~  ~
CoinLpIO.cpp:1819:62: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  double *colup = reinterpret_cast<double *> (malloc ((maxcol+1) * sizeof(double)));
                                                       ~~~~~~^~  ~
CoinLpIO.cpp:1820:59: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  char *is_int = reinterpret_cast<char *> (malloc ((maxcol+1) * sizeof(char)));
                                                    ~~~~~~^~  ~
CoinLpIO.cpp:2070:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  int *ind = reinterpret_cast<int *> (malloc ((maxcoeff+1) * sizeof(int)));
                                               ~~~~~~~~^~  ~
CoinLpIO.cpp:2090:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  double *obj = reinterpret_cast<double *> (malloc (numberColumns_ * sizeof(double)));
                                                    ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:2091:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(obj, 0, numberColumns_ * sizeof(double));
                 ^~~~~~~~~~~~~~ ~
CoinLpIO.cpp:2280:55: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  names_[section] = reinterpret_cast<char **> (malloc(maxhash * sizeof(char *)));
                                                      ^~~~~~~ ~
75 warnings generated.
In file included from CoinMessage.cpp:12:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
4 warnings generated.
In file included from CoinMessageHandler.cpp:6:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinMessageHandler.cpp:7:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinMessageHandler.cpp:313:23: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memcpy(temp,&message,length);
        ~~~~~~               ^~~~~~
CoinMessageHandler.cpp:422:18: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
  g_precision_ = new_precision ;
               ~ ^~~~~~~~~~~~~
CoinMessageHandler.cpp:428:48: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    char c = static_cast<char>(new_precision / base);
                                             ~ ^~~~
CoinMessageHandler.cpp:429:37: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    new_precision = new_precision % base;
                                  ~ ^~~~
CoinMessageHandler.cpp:740:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          strncpy(messageOut_,start,numberToCopy);
          ~~~~~~~                   ^~~~~~~~~~~~
CoinMessageHandler.cpp:823:26: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
            sprintf(messageOut_,format_+2);
                                ^~~~~~~~~
CoinMessageHandler.cpp:823:26: note: treat the string as an argument to avoid this
            sprintf(messageOut_,format_+2);
                                ^
                                "%s", 
In file included from CoinMessageHandler.cpp:7:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinMessageHandler.cpp:118:19: note: in instantiation of function template specialization 'CoinCopyOfArray<char>' requested here
    char * temp = CoinCopyOfArray(reinterpret_cast<char *> (rhs.message_),lengthMessages_);
                  ^
17 warnings generated.
In file included from CoinModel.cpp:7:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinModel.cpp:8:
In file included from ./CoinModel.hpp:9:
./CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
./CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
In file included from CoinModel.cpp:10:
In file included from ./CoinMpsIO.hpp:19:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
CoinModel.cpp:395:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if (value&&objRow<0) {
                ^~~~~~~
CoinModel.cpp:414:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
              if (value) {
              ~~  ^~~~~
CoinModel.cpp:1594:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(newRow,0,numberRows_*sizeof(int));
                  ^~~~~~~~~~~~
CoinModel.cpp:1700:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(newColumn,0,numberColumns_*sizeof(int));
                     ^~~~~~~~~~~~~~~
CoinModel.cpp:1857:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (value) {
      ~~  ^~~~~
CoinModel.cpp:1889:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(startPositive,0,numberColumns_*sizeof(int));
                         ^~~~~~~~~~~~~~~
CoinModel.cpp:1890:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(startNegative,0,numberColumns_*sizeof(int));
                         ^~~~~~~~~~~~~~~
CoinModel.cpp:1911:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (value) {
      ~~  ^~~~~
CoinModel.cpp:3498:6: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
        if (linearRow[i])
        ~~  ^~~~~~~~~~~~
CoinModel.cpp:3505:6: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
        if (linearRow[i]) {
        ~~  ^~~~~~~~~~~~
CoinModel.cpp:3528:11: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
      if (linearRow[i])
      ~~  ^~~~~~~~~~~~
CoinModel.cpp:3546:6: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
        if (linearRow[i])
        ~~  ^~~~~~~~~~~~
CoinModel.cpp:3553:6: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
        if (linearRow[i]) {
        ~~  ^~~~~~~~~~~~
CoinModel.cpp:3576:11: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
      if (linearRow[i])
      ~~  ^~~~~~~~~~~~
CoinModel.cpp:4085:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(rowType_,row,numberRows_*sizeof(int));
                      ^~~~~~~~~~~~
CoinModel.cpp:4088:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(columnType_,column,numberColumns_*sizeof(int));
                            ^~~~~~~~~~~~~~~
In file included from CoinModel.cpp:7:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinModel.cpp:490:15: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
  rowLower_ = CoinCopyOfArray(rowLower,numberRows_);
              ^
In file included from CoinModel.cpp:7:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinModel.cpp:526:14: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
  rowType_ = CoinCopyOfArray(rhs.rowType_,maximumRows_);
             ^
In file included from CoinModel.cpp:7:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinModel.cpp:563:15: note: in instantiation of function template specialization 'CoinCopyOfArray<CoinModelTriple>' requested here
  elements_ = CoinCopyOfArray(rhs.elements_,maximumElements_);
              ^
In file included from CoinModel.cpp:9:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
./CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstLess_2<int, double> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
CoinModel.cpp:736:7: note: in instantiation of function template specialization 'CoinSort_2<int, double>' requested here
      CoinSort_2(sortIndices_,sortIndices_+numberInRow,sortElements_);
      ^
32 warnings generated.
In file included from CoinStructuredModel.cpp:8:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinStructuredModel.cpp:9:
In file included from ./CoinStructuredModel.hpp:9:
In file included from ./CoinModel.hpp:9:
./CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
./CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
In file included from CoinStructuredModel.cpp:9:
./CoinStructuredModel.hpp:132:27: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return rowBlockNames_[i];}
           ~~~~~~~~~~~~~~ ^
./CoinStructuredModel.hpp:135:20: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { rowBlockNames_[i] = name;}
    ~~~~~~~~~~~~~~ ^
./CoinStructuredModel.hpp:142:30: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return columnBlockNames_[i];}
           ~~~~~~~~~~~~~~~~~ ^
./CoinStructuredModel.hpp:145:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { columnBlockNames_[i] = name;}
    ~~~~~~~~~~~~~~~~~ ^
In file included from CoinStructuredModel.cpp:11:
In file included from ./CoinMpsIO.hpp:19:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
CoinStructuredModel.cpp:223:30: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (name==rowBlockNames_[iRowBlock])
              ~~~~~~~~~~~~~~ ^~~~~~~~~
CoinStructuredModel.cpp:239:30: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (name==rowBlockNames_[iRowBlock])
              ~~~~~~~~~~~~~~ ^~~~~~~~~
CoinStructuredModel.cpp:252:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (name==columnBlockNames_[iColumnBlock])
              ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~
CoinStructuredModel.cpp:268:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (name==columnBlockNames_[iColumnBlock])
              ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~
CoinStructuredModel.cpp:417:7: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
             nRows*sizeof(double));
             ^~~~~~
CoinStructuredModel.cpp:419:7: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
             nRows*sizeof(double));
             ^~~~~~
CoinStructuredModel.cpp:428:7: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
             nColumns*sizeof(double));
             ^~~~~~~~~
CoinStructuredModel.cpp:430:7: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
             nColumns*sizeof(double));
             ^~~~~~~~~
CoinStructuredModel.cpp:432:7: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
             nColumns*sizeof(double));
             ^~~~~~~~~
CoinStructuredModel.cpp:438:7: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
             nColumns*sizeof(int));
             ^~~~~~~~~
CoinStructuredModel.cpp:695:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(temp,blocks_,numberElementBlocks_*sizeof(CoinBaseModel *));
                        ^~~~~~~~~~~~~~~~~~~~~
CoinStructuredModel.cpp:699:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(temp2,blockType_,numberElementBlocks_*sizeof(CoinModelBlockInfo));
                            ^~~~~~~~~~~~~~~~~~~~~
CoinStructuredModel.cpp:705:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(temp,coinModelBlocks_,numberElementBlocks_*sizeof(CoinModel *));
                                   ^~~~~~~~~~~~~~~~~~~~~
In file included from CoinStructuredModel.cpp:8:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinStructuredModel.cpp:74:15: note: in instantiation of function template specialization 'CoinCopyOfArray<CoinBaseModel *>' requested here
    blocks_ = CoinCopyOfArray(rhs.blocks_,maximumElementBlocks_);
              ^
In file included from CoinStructuredModel.cpp:8:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinStructuredModel.cpp:77:18: note: in instantiation of function template specialization 'CoinCopyOfArray<CoinModelInfo2>' requested here
    blockType_ = CoinCopyOfArray(rhs.blockType_,maximumElementBlocks_);
                 ^
In file included from CoinStructuredModel.cpp:8:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinStructuredModel.cpp:79:26: note: in instantiation of function template specialization 'CoinCopyOfArray<CoinModel *>' requested here
      coinModelBlocks_ = CoinCopyOfArray(rhs.coinModelBlocks_,
                         ^
In file included from CoinStructuredModel.cpp:10:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
./CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, int, CoinFirstLess_2<int, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
CoinStructuredModel.cpp:809:4: note: in instantiation of function template specialization 'CoinSort_2<int, int>' requested here
          CoinSort_2(rowBlock,rowBlock+numberRows,stack);
          ^
33 warnings generated.
In file included from CoinModelUseful.cpp:16:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinModelUseful.cpp:18:
./CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
./CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
CoinModelUseful.cpp:724:20: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    n += mmult2[0] * tempChar[0];
      ~~ ~~~~~~~~~~^~~~~~~~~~~~~
CoinModelUseful.cpp:725:20: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    n += mmult2[1] * tempChar[1];
      ~~ ~~~~~~~~~~^~~~~~~~~~~~~
CoinModelUseful.cpp:726:20: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    n += mmult2[2] * tempChar[2];
      ~~ ~~~~~~~~~~^~~~~~~~~~~~~
CoinModelUseful.cpp:727:19: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    n += mmult[3] * tempChar[3];
      ~~ ~~~~~~~~~^~~~~~~~~~~~~
CoinModelUseful.cpp:729:22: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    n += mmult2[0+8] * tempChar[0];
      ~~ ~~~~~~~~~~~~^~~~~~~~~~~~~
CoinModelUseful.cpp:730:22: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    n += mmult2[1+8] * tempChar[1];
      ~~ ~~~~~~~~~~~~^~~~~~~~~~~~~
CoinModelUseful.cpp:731:22: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    n += mmult2[2+8] * tempChar[2];
      ~~ ~~~~~~~~~~~~^~~~~~~~~~~~~
CoinModelUseful.cpp:732:22: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    n += mmult2[3+8] * tempChar[3];
      ~~ ~~~~~~~~~~~~^~~~~~~~~~~~~
CoinModelUseful.cpp:733:14: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    return n % (maximumItems_<<1);
    ~~~~~~ ~~^~~~~~~~~~~~~~~~~~~~
CoinModelUseful.cpp:733:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    return n % (maximumItems_<<1);
             ~  ~~~~~~~~~~~~~^~~
CoinModelUseful.cpp:1428:17: warning: implicit conversion changes signedness: 'const int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  memset(mark,0,maximumElements_);
  ~~~~~~        ^~~~~~~~~~~~~~~~
In file included from CoinModelUseful.cpp:16:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinModelUseful.cpp:119:13: note: in instantiation of function template specialization 'CoinCopyOfArray<CoinModelHashLink>' requested here
    hash_ = CoinCopyOfArray(rhs.hash_,4*maximumItems_);
            ^
In file included from CoinModelUseful.cpp:16:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinModelUseful.cpp:788:17: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
    previous_ = CoinCopyOfArray(rhs.previous_,maximumElements_);
                ^
21 warnings generated.
In file included from CoinModelUseful2.cpp:74:
In file included from ./CoinModel.hpp:9:
./CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
./CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
In file included from CoinModelUseful2.cpp:75:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinModelUseful2.cpp:853:76: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
             length = 40, symbuf = reinterpret_cast<char *>(malloc (length + 1));
                                                            ~~~~~~  ~~~~~~~^~~
CoinModelUseful2.cpp:862:79: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                   symbuf = reinterpret_cast<char *> (realloc (symbuf, length + 1));
                                                      ~~~~~~~          ~~~~~~~^~~
CoinModelUseful2.cpp:993:38: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      YYSIZE_T yysize = yyssp - yyss + 1;
               ~~~~~~   ~~~~~~~~~~~~~^~~
11 warnings generated.
In file included from CoinMpsIO.cpp:21:
In file included from ./CoinMpsIO.hpp:19:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinMpsIO.cpp:23:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinMpsIO.cpp:24:
In file included from ./CoinModel.hpp:9:
./CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
./CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
CoinMpsIO.cpp:302:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      memcpy(card_+82,card_,length);
      ~~~~~~                ^~~~~~
CoinMpsIO.cpp:564:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
              if ( !strncmp ( next, mpsTypes[i], nchar ) ) {
                    ~~~~~~~                      ^~~~~
CoinMpsIO.cpp:985:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            strncpy(columnName_,position_,length);
            ~~~~~~~                       ^~~~~~
CoinMpsIO.cpp:1018:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            strncpy(rowName_,position_,length);
            ~~~~~~~                    ^~~~~~
CoinMpsIO.cpp:1091:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            strncpy(rowName_,position_,length);
            ~~~~~~~                    ^~~~~~
CoinMpsIO.cpp:1117:45: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
              strncpy(columnName_,position_,length);
              ~~~~~~~                       ^~~~~~
CoinMpsIO.cpp:1148:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          strncpy(rowName_,position_,length);
          ~~~~~~~                    ^~~~~~
CoinMpsIO.cpp:1670:50: warning: implicit conversion changes signedness: 'COINRowIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
      reinterpret_cast< COINMpsType *> (malloc ( maxRows * sizeof ( COINMpsType )));
                                                 ^~~~~~~ ~
CoinMpsIO.cpp:1671:58: warning: implicit conversion changes signedness: 'COINRowIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
    char **rowName = reinterpret_cast<char **> (malloc ( maxRows * sizeof ( char * )));
                                                         ^~~~~~~ ~
CoinMpsIO.cpp:1678:43: warning: implicit conversion changes signedness: 'COINRowIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
      reinterpret_cast<char **> (malloc ( maxFreeRows * sizeof ( char * )));
                                          ^~~~~~~~~~~ ~
CoinMpsIO.cpp:1693:12: warning: implicit conversion changes signedness: 'COINRowIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
                                              maxFreeRows * sizeof ( char * )));
                                              ^~~~~~~~~~~ ~
CoinMpsIO.cpp:1707:14: warning: implicit conversion changes signedness: 'COINRowIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
                                                       maxRows * sizeof ( COINMpsType )));
                                                       ^~~~~~~ ~
CoinMpsIO.cpp:1710:52: warning: implicit conversion changes signedness: 'COINRowIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
            reinterpret_cast<char **> (realloc ( rowName, maxRows * sizeof ( char * )));
                                                          ^~~~~~~ ~
CoinMpsIO.cpp:1741:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                   numberRows_ * sizeof ( COINMpsType )));
                                                   ^~~~~~~~~~~ ~
CoinMpsIO.cpp:1748:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            ( numberRows_ + 1 +
                              ~~~~~~~~~~~~~~~~^
CoinMpsIO.cpp:1754:7: warning: implicit conversion changes signedness: 'COINRowIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
             numberOtherFreeRows * sizeof ( char * ) );
             ^~~~~~~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:1765:17: warning: implicit conversion changes signedness: 'COINColumnIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
      (malloc ( maxColumns * sizeof ( COINMpsType )));
                ^~~~~~~~~~ ~
CoinMpsIO.cpp:1766:61: warning: implicit conversion changes signedness: 'COINColumnIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
    char **columnName = reinterpret_cast<char **> (malloc ( maxColumns * sizeof ( char * )));
                                                            ^~~~~~~~~~ ~
CoinMpsIO.cpp:1768:55: warning: implicit conversion changes signedness: 'COINColumnIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
    objective_ = reinterpret_cast<double *> (malloc ( maxColumns * sizeof ( double )));
                                                      ^~~~~~~~~~ ~
CoinMpsIO.cpp:1770:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      (malloc ( ( maxColumns + 1 ) * sizeof ( CoinBigIndex )));
                  ~~~~~~~~~~~^~~   ~
CoinMpsIO.cpp:1772:17: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
      (malloc ( maxElements * sizeof ( COINRowIndex )));
                ^~~~~~~~~~~ ~
CoinMpsIO.cpp:1774:44: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
      reinterpret_cast<double *> (malloc ( maxElements * sizeof ( double )));
                                           ^~~~~~~~~~~ ~
CoinMpsIO.cpp:1818:31: warning: implicit conversion changes signedness: 'COINColumnIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
              (realloc ( columnType, maxColumns * sizeof ( COINMpsType )));
                                     ^~~~~~~~~~ ~
CoinMpsIO.cpp:1820:31: warning: implicit conversion changes signedness: 'COINColumnIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
              (realloc ( columnName, maxColumns * sizeof ( char * )));
                                     ^~~~~~~~~~ ~
CoinMpsIO.cpp:1823:31: warning: implicit conversion changes signedness: 'COINColumnIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
              (realloc ( objective_, maxColumns * sizeof ( double )));
                                     ^~~~~~~~~~ ~
CoinMpsIO.cpp:1826:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                         ( maxColumns + 1 ) * sizeof ( CoinBigIndex )));
                           ~~~~~~~~~~~^~~   ~
CoinMpsIO.cpp:1848:24: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
              (realloc ( row, maxElements * sizeof ( COINRowIndex )));
                              ^~~~~~~~~~~ ~
CoinMpsIO.cpp:1850:28: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
              (realloc ( element, maxElements * sizeof ( double )));
                                  ^~~~~~~~~~~ ~
CoinMpsIO.cpp:1971:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                   numberColumns_ * sizeof ( COINMpsType )));
                                                   ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:1974:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        reinterpret_cast<char **> (realloc ( columnName, numberColumns_ * sizeof ( char * )));
                                                         ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:1976:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        (realloc ( objective_, numberColumns_ * sizeof ( double )));
                               ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:1988:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      (realloc ( start, ( numberColumns_ + 1 ) * sizeof ( CoinBigIndex )));
                          ~~~~~~~~~~~~~~~^~~   ~
CoinMpsIO.cpp:1991:18: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
        (realloc ( row, numberElements_ * sizeof ( COINRowIndex )));
                        ^~~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:1993:22: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
        (realloc ( element, numberElements_ * sizeof ( double )));
                            ^~~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:2001:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      rowlower_ = reinterpret_cast<double *> (malloc ( numberRows_ * sizeof ( double )));
                                                       ^~~~~~~~~~~ ~
CoinMpsIO.cpp:2002:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      rowupper_ = reinterpret_cast<double *> (malloc ( numberRows_ * sizeof ( double )));
                                                       ^~~~~~~~~~~ ~
CoinMpsIO.cpp:2248:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      collower_ = reinterpret_cast<double *> (malloc ( numberColumns_ * sizeof ( double )));
                                                       ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:2249:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      colupper_ = reinterpret_cast<double *> (malloc ( numberColumns_ * sizeof ( double )));
                                                       ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:2260:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      integerType_ = reinterpret_cast<char *> (malloc (numberColumns_*sizeof(char)));
                                                       ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:2627:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(sets,setsA,numberSets*sizeof(CoinSet **));
                          ^~~~~~~~~~~
CoinMpsIO.cpp:2694:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rowlower_ = reinterpret_cast<double *> (malloc ( numberRows_ * sizeof ( double )));
                                                     ^~~~~~~~~~~ ~
CoinMpsIO.cpp:2695:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rowupper_ = reinterpret_cast<double *> (malloc ( numberRows_ * sizeof ( double )));
                                                     ^~~~~~~~~~~ ~
CoinMpsIO.cpp:2706:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    collower_ = reinterpret_cast<double *> (malloc ( numberColumns_ * sizeof ( double )));
                                                     ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:2707:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    colupper_ = reinterpret_cast<double *> (malloc ( numberColumns_ * sizeof ( double )));
                                                     ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:2708:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    objective_= reinterpret_cast<double *> (malloc ( numberColumns_ * sizeof ( double )));
                                                     ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:2709:71: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    start = reinterpret_cast<CoinBigIndex *> (malloc ((numberColumns_ + 1) *
                                                       ~~~~~~~~~~~~~~~^~~  ~
CoinMpsIO.cpp:2711:53: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
    row = reinterpret_cast<COINRowIndex *> (malloc (numberElements_ * sizeof (COINRowIndex)));
                                                    ^~~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:2712:51: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
    element = reinterpret_cast<double *> (malloc (numberElements_ * sizeof (double)));
                                                  ^~~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:3108:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  rowlower_ = reinterpret_cast<double *> (malloc ( numberRows_ * sizeof ( double )));
                                                   ^~~~~~~~~~~ ~
CoinMpsIO.cpp:3109:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  rowupper_ = reinterpret_cast<double *> (malloc ( numberRows_ * sizeof ( double )));
                                                   ^~~~~~~~~~~ ~
CoinMpsIO.cpp:3110:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  collower_ = reinterpret_cast<double *> (malloc ( numberColumns_ * sizeof ( double )));
                                                   ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:3111:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  colupper_ = reinterpret_cast<double *> (malloc ( numberColumns_ * sizeof ( double )));
                                                   ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:3112:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  objective_= reinterpret_cast<double *> (malloc ( numberColumns_ * sizeof ( double )));
                                                   ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:3113:80: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  CoinBigIndex *start = reinterpret_cast<CoinBigIndex *> (malloc ((numberRows_ + 1) *
                                                                   ~~~~~~~~~~~~^~~  ~
CoinMpsIO.cpp:3115:72: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
  COINColumnIndex * column = reinterpret_cast<COINRowIndex *> (malloc (numberElements_ * sizeof (COINRowIndex)));
                                                                       ^~~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:3116:57: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'unsigned long' [-Wsign-conversion]
  double *element = reinterpret_cast<double *> (malloc (numberElements_ * sizeof (double)));
                                                        ^~~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:3118:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    reinterpret_cast<COINMpsType *> (malloc ( numberRows_ * sizeof ( COINMpsType )));
                                              ^~~~~~~~~~~ ~
CoinMpsIO.cpp:3119:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  char **rowName = reinterpret_cast<char **> (malloc ( numberRows_ * sizeof ( char * )));
                                                       ^~~~~~~~~~~ ~
CoinMpsIO.cpp:3121:15: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    (malloc ( numberColumns_ * sizeof ( COINMpsType )));
              ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:3122:59: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  char **columnName = reinterpret_cast<char **> (malloc ( numberColumns_ * sizeof ( char * )));
                                                          ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:3158:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  integerType_ = reinterpret_cast<char *> (malloc (numberColumns_*sizeof(char)));
                                                   ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:3159:25: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  memset(integerType_,0,numberColumns_);
  ~~~~~~                ^~~~~~~~~~~~~~
CoinMpsIO.cpp:3291:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value&&value!=1.0) 
              ^~~~~~~
CoinMpsIO.cpp:3583:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    names_[0] = reinterpret_cast<char **> (malloc(numberRows_ * sizeof(char *)));
                                                  ^~~~~~~~~~~ ~
CoinMpsIO.cpp:3584:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    names_[1] = reinterpret_cast<char **> (malloc (numberColumns_ * sizeof(char *)));
                                                   ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:3589:30: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      rowNames[i] = rownames[i].c_str();
                    ~~~~~~~~ ^
CoinMpsIO.cpp:3592:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      columnNames[i] = colnames[i].c_str();
                       ~~~~~~~~ ^
CoinMpsIO.cpp:4003:19: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memset(used,0,largest);
    ~~~~~~        ^~~~~~~
CoinMpsIO.cpp:4113:12: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
         length = static_cast<int>(strlen(rowNames[i]));
                ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CoinMpsIO.cpp:4120:15: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            length = static_cast<int>(strlen(columnNames[i]));
                   ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CoinMpsIO.cpp:4177:35: warning: implicit conversion changes signedness: 'const int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   memcpy( sense , getRowSense(), numberRows_);
   ~~~~~~                         ^~~~~~~~~~~
CoinMpsIO.cpp:4229:34: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   memset(stringRow,0,numberRows_+1);
   ~~~~~~             ~~~~~~~~~~~^~
CoinMpsIO.cpp:4251:10: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
     if (objective[i]||lengths[i]||i==nextColumnString) {
         ^~~~~~~~~~~~~~
CoinMpsIO.cpp:4253:12: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
       if (columnLower[i]||columnUpper[i]<largeValue||isInteger(i))
           ^~~~~~~~~~~~~~~~
CoinMpsIO.cpp:4256:12: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
       if (objective[i]) {
       ~~  ^~~~~~~~~~~~
CoinMpsIO.cpp:4288:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
         if (value&&!stringRow[jRow]) {
             ^~~~~~~
CoinMpsIO.cpp:4346:8: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
   if (objectiveOffset_ ) {
   ~~  ^~~~~~~~~~~~~~~~
CoinMpsIO.cpp:4514:7: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
         if (objective[i]||lengths[i]) {
             ^~~~~~~~~~~~~~
CoinMpsIO.cpp:4516:10: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
            if (columnLower[i]||columnUpper[i]<largeValue||isInteger(i)) {
                ^~~~~~~~~~~~~~~~
CoinMpsIO.cpp:4550:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                  if (lowerValue) {
                  ~~  ^~~~~~~~~~
CoinMpsIO.cpp:4820:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rowsense_ = reinterpret_cast<char *> (malloc(nr*sizeof(char)));
                                                 ^~~
CoinMpsIO.cpp:4840:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rhs_ = reinterpret_cast<double *> (malloc(nr*sizeof(double)));
                                              ^~~
CoinMpsIO.cpp:4862:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rowrange_ = reinterpret_cast<double *> (malloc(nr*sizeof(double)));
                                                   ^~~
CoinMpsIO.cpp:4924:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  rowlower_ = reinterpret_cast<double *> (malloc (numberRows_ * sizeof(double)));
                                                  ^~~~~~~~~~~ ~
CoinMpsIO.cpp:4925:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  rowupper_ = reinterpret_cast<double *> (malloc (numberRows_ * sizeof(double)));
                                                  ^~~~~~~~~~~ ~
CoinMpsIO.cpp:4926:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  collower_ = reinterpret_cast<double *> (malloc (numberColumns_ * sizeof(double)));
                                                  ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:4927:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  colupper_ = reinterpret_cast<double *> (malloc (numberColumns_ * sizeof(double)));
                                                  ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:4928:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  objective_ = reinterpret_cast<double *> (malloc (numberColumns_ * sizeof(double)));
                                                   ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:4935:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    integerType_ = reinterpret_cast<char *> (malloc (numberColumns_ * sizeof(char)));
                                                     ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:4957:49: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  names_[0] = reinterpret_cast<char **> (malloc(numberRows_ * sizeof(char *)));
                                                ^~~~~~~~~~~ ~
CoinMpsIO.cpp:4958:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  names_[1] = reinterpret_cast<char **> (malloc (numberColumns_ * sizeof(char *)));
                                                 ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:5015:49: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  names_[0] = reinterpret_cast<char **> (malloc(numberRows_ * sizeof(char *)));
                                                ^~~~~~~~~~~ ~
CoinMpsIO.cpp:5016:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  names_[1] = reinterpret_cast<char **> (malloc (numberColumns_ * sizeof(char *)));
                                                 ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:5022:42: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
       rowNames[i] = CoinStrdup(rownames[i].c_str());
                                ~~~~~~~~ ^
CoinMpsIO.cpp:5032:45: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
       columnNames[i] = CoinStrdup(colnames[i].c_str());
                                   ~~~~~~~~ ^
CoinMpsIO.cpp:5157:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      integerType_ = reinterpret_cast<char *> (malloc (numberColumns_ * sizeof(char)));
                                                       ^~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:5158:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memcpy(integerType_,integerType,numberColumns_);
    ~~~~~~                          ^~~~~~~~~~~~~~
CoinMpsIO.cpp:5376:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rowlower_ = reinterpret_cast<double *> (malloc(numberRows_*sizeof(double)));
                                                   ^~~~~~~~~~~~
CoinMpsIO.cpp:5377:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rowupper_ = reinterpret_cast<double *> (malloc(numberRows_*sizeof(double)));
                                                   ^~~~~~~~~~~~
CoinMpsIO.cpp:5378:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(rowlower_,rhs.rowlower_,numberRows_*sizeof(double));
                                   ^~~~~~~~~~~~
CoinMpsIO.cpp:5379:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(rowupper_,rhs.rowupper_,numberRows_*sizeof(double));
                                   ^~~~~~~~~~~~
CoinMpsIO.cpp:5382:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    collower_ = reinterpret_cast<double *> (malloc(numberColumns_*sizeof(double)));
                                                   ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:5383:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    colupper_ = reinterpret_cast<double *> (malloc(numberColumns_*sizeof(double)));
                                                   ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:5384:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    objective_ = reinterpret_cast<double *> (malloc(numberColumns_*sizeof(double)));
                                                    ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:5385:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(collower_,rhs.collower_,numberColumns_*sizeof(double));
                                   ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:5386:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(colupper_,rhs.colupper_,numberColumns_*sizeof(double));
                                   ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:5387:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(objective_,rhs.objective_,numberColumns_*sizeof(double));
                                     ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:5390:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    integerType_ = reinterpret_cast<char *> (malloc (numberColumns_*sizeof(char)));
                                                     ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:5391:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(integerType_,rhs.integerType_,numberColumns_*sizeof(char));
                                         ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:5415:59: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      names_[section] = reinterpret_cast<char **> (malloc(numberHash_[section]*
                                                          ^~~~~~~~~~~~~~~~~~~~~
CoinMpsIO.cpp:5605:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  int * column = reinterpret_cast<int *> (malloc(maximumNonZeros*sizeof(int)));
                                                 ^~~~~~~~~~~~~~~~
CoinMpsIO.cpp:5606:55: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  int * column2Temp = reinterpret_cast<int *> (malloc(maximumNonZeros*sizeof(int)));
                                                      ^~~~~~~~~~~~~~~~
CoinMpsIO.cpp:5607:61: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  double * elementTemp = reinterpret_cast<double *> (malloc(maximumNonZeros*sizeof(double)));
                                                            ^~~~~~~~~~~~~~~~
CoinMpsIO.cpp:5619:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            (realloc ( column, maximumNonZeros * sizeof ( COINColumnIndex )));
                               ^~~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:5621:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            (realloc ( column2Temp, maximumNonZeros * sizeof ( COINColumnIndex )));
                                    ^~~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:5623:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            (realloc ( elementTemp, maximumNonZeros * sizeof ( double )));
                                    ^~~~~~~~~~~~~~~ ~
CoinMpsIO.cpp:5685:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(count,0,numberColumns_*sizeof(int));
                 ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:5766:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (value) {
      ~~  ^~~~~
CoinMpsIO.cpp:5949:51: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  char * line = reinterpret_cast<char *> (malloc(n+1));
                                          ~~~~~~ ~^~
CoinMpsIO.cpp:6051:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(which_,which,numberEntries_*sizeof(int));
                      ^~~~~~~~~~~~~~~
CoinMpsIO.cpp:6100:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(weights_,weights,numberEntries_*sizeof(double));
                          ^~~~~~~~~~~~~~~
In file included from CoinMpsIO.cpp:25:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
./CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstLess_2<int, double> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
CoinMpsIO.cpp:4284:8: note: in instantiation of function template specialization 'CoinSort_2<int, double>' requested here
       CoinSort_2(tempRow,tempRow+numberEntries,tempValue);
       ^
In file included from CoinMpsIO.cpp:23:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinMpsIO.cpp:6068:12: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
  which_ = CoinCopyOfArray(rhs.which_,numberEntries_);
           ^
In file included from CoinMpsIO.cpp:23:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinMpsIO.cpp:6069:14: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
  weights_ = CoinCopyOfArray(rhs.weights_,numberEntries_);
             ^
136 warnings generated.
In file included from CoinPackedMatrix.cpp:17:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinPackedMatrix.cpp:413:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (newElement||keepZero) {
              ^~~~~~~~~~~~
CoinPackedMatrix.cpp:428:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (j==end&&(newElement||keepZero)) {
                   ^~~~~~~~~~~~
CoinPackedMatrix.cpp:432:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           memset(addedEntries, 0, majorDim_ * sizeof(int));
                                   ^~~~~~~~~ ~
CoinPackedMatrix.cpp:538:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(index_+k,eliminatedIndex,kbad*sizeof(int));
                                      ^~~~~
CoinPackedMatrix.cpp:539:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(element_+k,eliminatedElement,kbad*sizeof(double));
                                          ^~~~~
CoinPackedMatrix.cpp:1345:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(addedEntries, 0, majorDim_ * sizeof(int));
                            ^~~~~~~~~ ~
CoinPackedMatrix.cpp:1635:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
   if (!extraGap_&&!extraMajor_) {
       ~^~~~~~~~~
CoinPackedMatrix.cpp:1635:21: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
   if (!extraGap_&&!extraMajor_) {
                   ~^~~~~~~~~~~
CoinPackedMatrix.cpp:1638:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(keep,1,majorDim_);
     ~~~~~~        ^~~~~~~~~
CoinPackedMatrix.cpp:1718:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(length_,0,majorDim_*sizeof(int));
                      ^~~~~~~~~~
CoinPackedMatrix.cpp:1719:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(start_,0,(majorDim_+1)*sizeof(CoinBigIndex ));
                      ~~~~~~~~~^~ ~
CoinPackedMatrix.cpp:1773:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (!extraGap_) {
      ~^~~~~~~~~
CoinPackedMatrix.cpp:1821:17: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
   memset(y, 0, minorDim_ * sizeof(double));
                ^~~~~~~~~ ~
CoinPackedMatrix.cpp:1837:17: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
   memset(y, 0, minorDim_ * sizeof(double));
                ^~~~~~~~~ ~
CoinPackedMatrix.cpp:1854:17: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
   memset(y, 0, majorDim_ * sizeof(double));
                ^~~~~~~~~ ~
CoinPackedMatrix.cpp:1869:17: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
   memset(y, 0, majorDim_ * sizeof(double));
                ^~~~~~~~~ ~
CoinPackedMatrix.cpp:2190:22: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
  if (!hasGaps&&!rhs.extraMajor_) {
                ~~~~~^~~~~~~~~~~
CoinPackedMatrix.cpp:3004:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (diff) {
        ~~  ^~~~
CoinPackedMatrix.cpp:3099:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (!extraGap_&&!extraMajor_&&numberOther<=0&&!hasGaps()) {
        ~^~~~~~~~~
CoinPackedMatrix.cpp:3099:22: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (!extraGap_&&!extraMajor_&&numberOther<=0&&!hasGaps()) {
                    ~^~~~~~~~~~~
CoinPackedMatrix.cpp:3155:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      memset(which,0,numberOther);
      ~~~~~~         ^~~~~~~~~~~
CoinPackedMatrix.cpp:3182:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (!extraGap_) {
          ~^~~~~~~~~
CoinPackedMatrix.cpp:3213:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      memset(which,0,numberOther);
      ~~~~~~         ^~~~~~~~~~~
CoinPackedMatrix.cpp:3242:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (!extraGap_) {
          ~^~~~~~~~~
CoinPackedMatrix.cpp:3311:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memset(which,0,numberOther);
    ~~~~~~         ^~~~~~~~~~~
CoinPackedMatrix.cpp:3457:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (!slack) {
        ~^~~~~
In file included from CoinPackedMatrix.cpp:17:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinPackedMatrix.cpp:728:16: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
  int * temp = CoinCopyOfArray(length_,majorDim_);
               ^
In file included from CoinPackedMatrix.cpp:17:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinPackedMatrix.cpp:737:20: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
  double * temp3 = CoinCopyOfArray(element_,size_);
                   ^
In file included from CoinPackedMatrix.cpp:16:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
CoinPackedMatrix.cpp:2121:7: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstLess_2<int, double> >' requested here
      CoinSort_2(rowIndices+start,rowIndices+end,elements+start,CoinFirstLess_2<int, double>());
      ^
35 warnings generated.
In file included from CoinPackedVector.cpp:13:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinPackedVector.cpp:168:11: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
      if (elems[i]) {
      ~~  ^~~~~~~~
In file included from CoinPackedVector.cpp:14:
In file included from ./CoinPackedVector.hpp:13:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
./CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from CoinPackedVector.cpp:14:
In file included from ./CoinPackedVector.hpp:13:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
./CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
9 warnings generated.
In file included from CoinPackedVectorBase.cpp:10:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinPackedVectorBase.cpp:166:49: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
  itmp = memcmp(getIndices(), rhs.getIndices(), size * sizeof(int));
                                                ^~~~ ~
CoinPackedVectorBase.cpp:170:51: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
  return memcmp(getElements(), rhs.getElements(), size * sizeof(double));
                                                  ^~~~ ~
8 warnings generated.
CoinParam.cpp:442:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
              << definedKwds_[currentKwd_] << " to "
                 ~~~~~~~~~~~~ ^~~~~~~~~~~
CoinParam.cpp:443:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
              << definedKwds_[value] << std::endl ; }
                 ~~~~~~~~~~~~ ^~~~~
CoinParam.cpp:455:24: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return (definedKwds_[currentKwd_]) ;
          ~~~~~~~~~~~~ ^~~~~~~~~~~
CoinParam.cpp:475:12: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    if (it%maxAcross == 0)
          ~^~~~~~~~~
CoinParam.cpp:482:38: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  std::string current = definedKwds_[currentKwd_] ;
                        ~~~~~~~~~~~~ ^~~~~~~~~~~
5 warnings generated.
CoinParamUtils.cpp:230:32: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
              (*pfx) = field.substr(0,pfxlen) ;
                       ~~~~~          ^~~~~~
CoinParamUtils.cpp:231:27: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
            field = field.substr(pfxlen) ; } } }
                    ~~~~~        ^~~~~~
CoinParamUtils.cpp:312:40: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    for (i = length-1 ; i >= 0 && name[i] == '?' ; i--)
                                  ~~~~ ^
CoinParamUtils.cpp:326:32: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    name = name.substr(0,length-numQuery) ;
           ~~~~          ~~~~~~^~~~~~~~~
CoinParamUtils.cpp:543:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { CoinParam *param =  paramVec[i] ;
                        ~~~~~~~~ ^
CoinParamUtils.cpp:545:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    int match = paramVec[i]->matches(name) ;
                ~~~~~~~~ ^
CoinParamUtils.cpp:616:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { CoinParam *param =  paramVec[i] ;
                          ~~~~~~~~ ^
CoinParamUtils.cpp:628:14: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        << paramVec[matchNdx]->matchName() << "." ; }
           ~~~~~~~~ ^~~~~~~~
CoinParamUtils.cpp:632:19: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      << paramVec[lclNdx]->matchName() << "." ; } }
         ~~~~~~~~ ^~~~~~
CoinParamUtils.cpp:636:20: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
              << paramVec[matchNdx]->matchName() ;
                 ~~~~~~~~ ^~~~~~~~
CoinParamUtils.cpp:644:29: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { std::cout << paramVec[lclNdx]->shortHelp() ; }
                   ~~~~~~~~ ^~~~~~
CoinParamUtils.cpp:646:16: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { paramVec[lclNdx]->printLongHelp() ; } }
      ~~~~~~~~ ^~~~~~
CoinParamUtils.cpp:670:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { CoinParam *param = paramVec[i] ;
                       ~~~~~~~~ ^
CoinParamUtils.cpp:756:35: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { CoinParam *param = paramVec[i] ;
                         ~~~~~~~~ ^
CoinParamUtils.cpp:775:35: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { CoinParam *param = paramVec[i] ;
                         ~~~~~~~~ ^
CoinParamUtils.cpp:786:35: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { CoinParam *param = paramVec[i] ;
                         ~~~~~~~~ ^
16 warnings generated.
In file included from CoinPostsolveMatrix.cpp:11:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPostsolveMatrix.cpp:12:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
10 warnings generated.
In file included from CoinPrePostsolveMatrix.cpp:10:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPrePostsolveMatrix.cpp:11:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
10 warnings generated.
In file included from CoinPresolveDoubleton.cpp:10:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPresolveDoubleton.cpp:11:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
CoinPresolveDoubleton.cpp:655:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (movement) { 
          ~~  ^~~~~~~~
CoinPresolveDoubleton.cpp:665:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (movement) {
          ~~  ^~~~~~~~
CoinPresolveDoubleton.cpp:1166:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (colels[kcs]) {
        ~~  ^~~~~~~~~~~
CoinPresolveDoubleton.cpp:1173:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (colels[kcs]) {
      ~~  ^~~~~~~~~~~
CoinPresolveDoubleton.cpp:1204:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (!element1[i]) {
            ~^~~~~~~~~~~
15 warnings generated.
In file included from CoinPresolveDual.cpp:9:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolveDual.cpp:13:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
10 warnings generated.
In file included from CoinPresolveDupcol.cpp:12:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolveDupcol.cpp:17:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinPresolveDupcol.cpp:349:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (!clo1&&!clo2) {
        ~^~~~
CoinPresolveDupcol.cpp:349:17: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (!clo1&&!clo2) {
               ~^~~~
CoinPresolveDupcol.cpp:667:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (!clo1&&!clo2) {
          ~^~~~
CoinPresolveDupcol.cpp:667:19: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (!clo1&&!clo2) {
                 ~^~~~
CoinPresolveDupcol.cpp:1170:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  memset(markCol,0,ncols);
  ~~~~~~           ^~~~~
CoinPresolveDupcol.cpp:1197:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
              if (value2) {
              ~~  ^~~~~~
CoinPresolveDupcol.cpp:1404:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (!cost[icol]) {
            ~^~~~~~~~~~
CoinPresolveDupcol.cpp:1642:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(actions,boundRecords,nactions*sizeof(action));
                                ^~~~~~~~~
In file included from CoinPresolveDupcol.cpp:15:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
./CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstLess_2<int, double> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
CoinPresolveDupcol.cpp:185:5: note: in instantiation of function template specialization 'CoinSort_2<int, double>' requested here
    CoinSort_2(hrow+mcstrt[j],hrow+mcstrt[j]+hincol[j],
    ^
In file included from CoinPresolveDupcol.cpp:15:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
./CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<double, int, CoinFirstLess_2<double, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
CoinPresolveDupcol.cpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<double, int>' requested here
  CoinSort_2(colsum,colsum+nlook,sort) ;
  ^
In file included from CoinPresolveDupcol.cpp:17:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinPresolveDupcol.cpp:770:39: note: in instantiation of function template specialization 'CoinCopyOfArray<dupcol_action::action>' requested here
  { next = new dupcol_action(nactions,CoinCopyOfArray(actions,nactions),next) ;
                                      ^
In file included from CoinPresolveDupcol.cpp:14:
./CoinPresolveDupcol.hpp:94:13: warning: private field 'nactions_' is not used [-Wunused-private-field]
  const int nactions_;
            ^
./CoinPresolveDupcol.hpp:95:23: warning: private field 'actions_' is not used [-Wunused-private-field]
  const action *const actions_;
                      ^
./CoinPresolveDupcol.hpp:132:13: warning: private field 'nactions_' is not used [-Wunused-private-field]
  const int nactions_;
            ^
./CoinPresolveDupcol.hpp:133:23: warning: private field 'actions_' is not used [-Wunused-private-field]
  const action *const actions_;
                      ^
25 warnings generated.
In file included from CoinPresolveEmpty.cpp:10:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPresolveEmpty.cpp:11:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
10 warnings generated.
In file included from CoinPresolveFixed.cpp:9:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolveFixed.cpp:11:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinPresolveFixed.cpp:215:17: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  memset(mark,0,ncols);
  ~~~~~~        ^~~~~
CoinPresolveFixed.cpp:564:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (movement) {
    ~~  ^~~~~~~~
CoinPresolveFixed.cpp:776:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (cost[js] && hincol[js] == 1 && cup[js] > clo[js]) {
        ^~~~~~~~ ~~
CoinPresolveFixed.cpp:816:13: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (cost[js] && cup[js] > clo[js]) {
            ^~~~~~~~ ~~
CoinPresolveFixed.cpp:828:22: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                if (!cost[j] && integerType[j]) nThen++ ;
                    ~^~~~~~~
15 warnings generated.
In file included from CoinPresolveForcing.cpp:9:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolveForcing.cpp:13:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinPresolveForcing.cpp:385:6: note: in instantiation of function template specialization 'CoinCopyOfArray<forcing_constraint_action::action>' requested here
                                 CoinCopyOfArray(actions,nactions),next) ;
                                 ^
11 warnings generated.
In file included from CoinPresolveHelperFunctions.cpp:17:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPresolveHelperFunctions.cpp:18:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
CoinPresolveHelperFunctions.cpp:213:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           reinterpret_cast<void *>(&minndxs[kcsx]),majlens[k]*sizeof(int)) ;
                                                    ^~~~~~~~~~~
CoinPresolveHelperFunctions.cpp:215:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           reinterpret_cast<void *>(&els[kcsx]),majlens[k]*sizeof(double)) ;
                                                ^~~~~~~~~~~
CoinPresolveHelperFunctions.cpp:261:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  { memcpy(dArray,elems+offset,length*sizeof(double)) ;
                               ^~~~~~~
CoinPresolveHelperFunctions.cpp:262:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(iArray,indices+offset,length*sizeof(int)) ; }
                                 ^~~~~~~
14 warnings generated.
In file included from CoinPresolveImpliedFree.cpp:9:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolveImpliedFree.cpp:17:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
10 warnings generated.
In file included from CoinPresolveIsolated.cpp:9:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolveIsolated.cpp:11:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinPresolveIsolated.cpp:108:6: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
                                        CoinCopyOfArray(&hcol[krs], nc),
                                        ^
In file included from CoinPresolveIsolated.cpp:11:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinPresolveIsolated.cpp:109:6: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
                                        CoinCopyOfArray(&rowels[krs], nc),
                                        ^
12 warnings generated.
In file included from CoinPresolveMatrix.cpp:11:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPresolveMatrix.cpp:12:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
10 warnings generated.
In file included from CoinPresolvePsdebug.cpp:10:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolvePsdebug.cpp:11:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
10 warnings generated.
In file included from CoinPresolveMonitor.cpp:8:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPresolveMonitor.cpp:10:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolveMonitor.cpp:9:
In file included from ./CoinPackedVector.hpp:13:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
./CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from CoinPresolveMonitor.cpp:9:
In file included from ./CoinPackedVector.hpp:13:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
./CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
12 warnings generated.
In file included from CoinPresolveSingleton.cpp:9:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPresolveSingleton.cpp:10:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
CoinPresolveSingleton.cpp:314:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (movement) {
      ~~  ^~~~~~~~
CoinPresolveSingleton.cpp:571:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (dcost[iCol])
    ~~  ^~~~~~~~~~~
CoinPresolveSingleton.cpp:609:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (dcost[iCol])
          ~~  ^~~~~~~~~~~
CoinPresolveSingleton.cpp:611:21: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        } else if ((dcost[iCol]&&currentLower!=currentUpper)||rowObjective[iRow]) {
                    ^~~~~~~~~~~~~
CoinPresolveSingleton.cpp:611:63: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        } else if ((dcost[iCol]&&currentLower!=currentUpper)||rowObjective[iRow]) {
                                                            ~~^~~~~~~~~~~~~~~~~~
CoinPresolveSingleton.cpp:673:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(temp,actions,nactions*sizeof(action)) ;
                              ^~~~~~~~~
CoinPresolveSingleton.cpp:718:27: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (rowObjective&&dcost[iCol]) {
                        ~~^~~~~~~~~~~
CoinPresolveSingleton.cpp:734:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (movement) 
          ~~  ^~~~~~~~
CoinPresolveSingleton.cpp:877:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (!dcost[iCol]) {
        ~^~~~~~~~~~~
19 warnings generated.
In file included from CoinPresolveSubst.cpp:9:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolveSubst.cpp:16:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPresolveSubst.cpp:17:
In file included from ./CoinSort.hpp:12:
./CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
./CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
./CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstLess_2<int, double> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
CoinPresolveSubst.cpp:508:7: note: in instantiation of function template specialization 'CoinSort_2<int, double>' requested here
      CoinSort_2(colIndices+tgtrs,colIndices+tgtre,rowCoeffs+tgtrs) ;
      ^
In file included from CoinPresolveSubst.cpp:16:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinPresolveSubst.cpp:686:8: note: in instantiation of function template specialization 'CoinCopyOfArray<subst_constraint_action::action>' requested here
                                   CoinCopyOfArray(actions,nactions),next) ;
                                   ^
12 warnings generated.
In file included from CoinPresolveTighten.cpp:9:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolveTighten.cpp:13:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinPresolveTighten.cpp:290:44: note: in instantiation of function template specialization 'CoinCopyOfArray<do_tighten_action::action>' requested here
    next = new do_tighten_action(nactions, CoinCopyOfArray(actions,nactions), next);
                                           ^
11 warnings generated.
In file included from CoinPresolveTripleton.cpp:10:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPresolveTripleton.cpp:11:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
CoinPresolveTripleton.cpp:355:17: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  memset(mark,0,ncols);
  ~~~~~~        ^~~~~
CoinPresolveTripleton.cpp:723:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(element1,0,nrows*sizeof(double));
                    ^~~~~~
CoinPresolveTripleton.cpp:726:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(element2,0,nrows*sizeof(double));
                    ^~~~~~
13 warnings generated.
In file included from CoinPresolveUseless.cpp:8:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CoinPresolveUseless.cpp:11:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinPresolveUseless.cpp:689:18: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
    f->rowcols = CoinCopyOfArray(&hcol[krs], hinrow[irow]);
                 ^
In file included from CoinPresolveUseless.cpp:11:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinPresolveUseless.cpp:690:18: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
    f->rowels  = CoinCopyOfArray(&rowels[krs], hinrow[irow]);
                 ^
12 warnings generated.
In file included from CoinPresolveZeros.cpp:9:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinPresolveZeros.cpp:10:
In file included from ./CoinPresolveMatrix.hpp:11:
In file included from ./CoinMessage.hpp:24:
./CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
./CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
10 warnings generated.
In file included from CoinSearchTree.cpp:7:
In file included from ./CoinSearchTree.hpp:15:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinSearchTree.cpp:7:
./CoinSearchTree.hpp:438:41: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    inline size_t size() const { return candidates_->size(); }
                                 ~~~~~~ ^~~~~~~~~~~~~~~~~~~
./CoinSearchTree.hpp:439:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    inline size_t numInserted() const { return candidates_->numInserted(); }
                                        ~~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~
8 warnings generated.
In file included from CoinShallowPackedVector.cpp:11:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
6 warnings generated.
In file included from CoinSnapshot.cpp:8:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinSnapshot.cpp:149:17: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
    colLower_ = CoinCopyOfArray(rhs.colLower_,numCols_);
                ^
In file included from CoinSnapshot.cpp:8:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinSnapshot.cpp:173:16: note: in instantiation of function template specialization 'CoinCopyOfArray<char>' requested here
    colType_ = CoinCopyOfArray(rhs.colType_,numCols_);
               ^
In file included from CoinSnapshot.cpp:8:
./CoinHelperFunctions.hpp:221:36: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinSnapshot.cpp:244:15: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
  colLower_ = CoinCopyOfArray(collb,numCols_,0.0);
              ^
9 warnings generated.
In file included from CoinWarmStartBasis.cpp:14:
In file included from ./CoinWarmStartBasis.hpp:19:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
CoinWarmStartBasis.cpp:33:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset (structuralStatus_, 0, (4*nintS) * sizeof(char));
                                   ~^~~~~~  ~
CoinWarmStartBasis.cpp:35:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset (artificialStatus_, 0, (4*nintA) * sizeof(char));
                                   ~^~~~~~  ~
CoinWarmStartBasis.cpp:156:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memset(array,0,4*maxSize_*sizeof(char));
                     ~^~~~~~~~~~
CoinWarmStartBasis.cpp:171:25: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                (nCharOldA>nCharNewA)?nCharNewA:nCharOldA);
                                      ^~~~~~~~~
CoinWarmStartBasis.cpp:171:35: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                (nCharOldA>nCharNewA)?nCharNewA:nCharOldA);
                                                ^~~~~~~~~
CoinWarmStartBasis.cpp:293:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(deleted,0,numStructural_*sizeof(char));
                   ^~~~~~~~~~~~~~~
CoinWarmStartBasis.cpp:576:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    { diffNdx[numberChanged] = i|0x80000000 ;
                               ^~
CoinWarmStartBasis.cpp:579:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  { diffNdx[numberChanged] = i|0x80000000 ;
                             ^~
CoinWarmStartBasis.cpp:590:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    { diffNdx[numberChanged] = i ;
                             ~ ^
CoinWarmStartBasis.cpp:593:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  { diffNdx[numberChanged] = i ;
                           ~ ^
CoinWarmStartBasis.cpp:700:18: warning: implicit conversion changes signedness: 'const int' to 'unsigned int' [-Wsign-conversion]
  difference_[0]=artifCnt;
                ~^~~~~~~~
In file included from CoinWarmStartBasis.cpp:14:
In file included from ./CoinWarmStartBasis.hpp:19:
./CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
CoinWarmStartBasis.cpp:717:21: note: in instantiation of function template specialization 'CoinCopyOfArray<unsigned int>' requested here
    { difference_ = CoinCopyOfArray(rhs.difference_,2*sze_); }
                    ^
18 warnings generated.
In file included from CoinWarmStartDual.cpp:13:
In file included from ./CoinWarmStartDual.hpp:9:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinWarmStartDual.cpp:13:
In file included from ./CoinWarmStartDual.hpp:11:
./CoinWarmStartVector.hpp:368:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      diffNdx[numberChanged] = i ;
                             ~ ^
./CoinWarmStartVector.hpp:373:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    diffNdx[numberChanged] = i ;
                           ~ ^
./CoinWarmStartVector.hpp:442:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(diffNdxs_,rhs.diffNdxs_,sze_*sizeof(unsigned int)) ;
                                     ^~~~~
./CoinWarmStartVector.hpp:170:11: note: in instantiation of member function 'CoinWarmStartVectorDiff<double>::operator=' requested here
  virtual ~CoinWarmStartVectorDiff() {
          ^
./CoinWarmStartDual.hpp:120:11: note: in instantiation of member function 'CoinWarmStartVectorDiff<double>::~CoinWarmStartVectorDiff' requested here
  virtual ~CoinWarmStartDualDiff() {}
          ^
In file included from CoinWarmStartDual.cpp:13:
In file included from ./CoinWarmStartDual.hpp:11:
./CoinWarmStartVector.hpp:444:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(diffVals_,rhs.diffVals_,sze_*sizeof(T)) ;
                                     ^~~~~
./CoinWarmStartVector.hpp:465:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(diffNdxs_,rhs.diffNdxs_,sze_*sizeof(unsigned int)) ;
                                   ^~~~~
./CoinWarmStartDual.hpp:143:7: note: in instantiation of member function 'CoinWarmStartVectorDiff<double>::CoinWarmStartVectorDiff' requested here
      diff_(rhs.diff_) {}
      ^
In file included from CoinWarmStartDual.cpp:13:
In file included from ./CoinWarmStartDual.hpp:11:
./CoinWarmStartVector.hpp:467:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(diffVals_,rhs.diffVals_,sze_*sizeof(T)) ;
                                   ^~~~~
./CoinWarmStartVector.hpp:482:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(diffNdxs_,diffNdxs,sze*sizeof(unsigned int)) ;
                              ^~~~
./CoinWarmStartDual.hpp:155:7: note: in instantiation of member function 'CoinWarmStartVectorDiff<double>::CoinWarmStartVectorDiff' requested here
      diff_(sze, diffNdxs, diffVals) {}
      ^
In file included from CoinWarmStartDual.cpp:13:
In file included from ./CoinWarmStartDual.hpp:11:
./CoinWarmStartVector.hpp:484:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(diffVals_,diffVals,sze*sizeof(T)) ;
                              ^~~~
./CoinWarmStartVector.hpp:368:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      diffNdx[numberChanged] = i ;
                             ~ ^
CoinWarmStartDual.cpp:39:38: note: in instantiation of member function 'CoinWarmStartVector<double>::generateDiff' requested here
  CoinWarmStartDiff* vecdiff = dual_.generateDiff(&oldDual->dual_);
                                     ^
In file included from CoinWarmStartDual.cpp:13:
In file included from ./CoinWarmStartDual.hpp:11:
./CoinWarmStartVector.hpp:373:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    diffNdx[numberChanged] = i ;
                           ~ ^
16 warnings generated.
In file included from CoinWarmStartPrimalDual.cpp:13:
In file included from ./CoinWarmStartPrimalDual.hpp:9:
./CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
./CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
./CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
./CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
./CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
./CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CoinWarmStartPrimalDual.cpp:13:
In file included from ./CoinWarmStartPrimalDual.hpp:11:
./CoinWarmStartVector.hpp:368:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      diffNdx[numberChanged] = i ;
                             ~ ^
./CoinWarmStartVector.hpp:373:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    diffNdx[numberChanged] = i ;
                           ~ ^
./CoinWarmStartVector.hpp:442:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(diffNdxs_,rhs.diffNdxs_,sze_*sizeof(unsigned int)) ;
                                     ^~~~~
./CoinWarmStartVector.hpp:170:11: note: in instantiation of member function 'CoinWarmStartVectorDiff<double>::operator=' requested here
  virtual ~CoinWarmStartVectorDiff() {
          ^
./CoinWarmStartPrimalDual.hpp:159:11: note: in instantiation of member function 'CoinWarmStartVectorDiff<double>::~CoinWarmStartVectorDiff' requested here
  virtual ~CoinWarmStartPrimalDualDiff() {}
          ^
In file included from CoinWarmStartPrimalDual.cpp:13:
In file included from ./CoinWarmStartPrimalDual.hpp:11:
./CoinWarmStartVector.hpp:444:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(diffVals_,rhs.diffVals_,sze_*sizeof(T)) ;
                                     ^~~~~
./CoinWarmStartVector.hpp:465:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(diffNdxs_,rhs.diffNdxs_,sze_*sizeof(unsigned int)) ;
                                   ^~~~~
./CoinWarmStartPrimalDual.hpp:182:5: note: in instantiation of member function 'CoinWarmStartVectorDiff<double>::CoinWarmStartVectorDiff' requested here
    primalDiff_(rhs.primalDiff_), dualDiff_(rhs.dualDiff_) {}
    ^
In file included from CoinWarmStartPrimalDual.cpp:13:
In file included from ./CoinWarmStartPrimalDual.hpp:11:
./CoinWarmStartVector.hpp:467:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(diffVals_,rhs.diffVals_,sze_*sizeof(T)) ;
                                   ^~~~~
./CoinWarmStartVector.hpp:368:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      diffNdx[numberChanged] = i ;
                             ~ ^
CoinWarmStartPrimalDual.cpp:40:21: note: in instantiation of member function 'CoinWarmStartVector<double>::generateDiff' requested here
  vecdiff = primal_.generateDiff(&old->primal_);
                    ^
In file included from CoinWarmStartPrimalDual.cpp:13:
In file included from ./CoinWarmStartPrimalDual.hpp:11:
./CoinWarmStartVector.hpp:373:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    diffNdx[numberChanged] = i ;
                           ~ ^
./CoinWarmStartVector.hpp:482:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(diffNdxs_,diffNdxs,sze*sizeof(unsigned int)) ;
                              ^~~~
./CoinWarmStartVector.hpp:380:9: note: in instantiation of member function 'CoinWarmStartVectorDiff<double>::CoinWarmStartVectorDiff' requested here
    new CoinWarmStartVectorDiff<T>(numberChanged,diffNdx,diffVal) ;
        ^
CoinWarmStartPrimalDual.cpp:40:21: note: in instantiation of member function 'CoinWarmStartVector<double>::generateDiff' requested here
  vecdiff = primal_.generateDiff(&old->primal_);
                    ^
In file included from CoinWarmStartPrimalDual.cpp:13:
In file included from ./CoinWarmStartPrimalDual.hpp:11:
./CoinWarmStartVector.hpp:484:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(diffVals_,diffVals,sze*sizeof(T)) ;
                              ^~~~
16 warnings generated.
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: .libs/libCoinUtils.a(CoinAlloc.o) has no symbols
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: .libs/libCoinUtils.a(CoinPresolvePsdebug.o) has no symbols
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: .libs/libCoinUtils.a(CoinWarmStartVector.o) has no symbols
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: .libs/libCoinUtils.a(CoinAlloc.o) has no symbols
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: .libs/libCoinUtils.a(CoinPresolvePsdebug.o) has no symbols
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: .libs/libCoinUtils.a(CoinWarmStartVector.o) has no symbols
In file included from OsiAuxInfo.cpp:11:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from OsiAuxInfo.cpp:12:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
OsiAuxInfo.cpp:128:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(betterSolution,bestSolution_,CoinMin(numberColumns,sizeSolution_)*sizeof(double));
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OsiAuxInfo.cpp:149:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(solution,bestSolution_,numberColumns*sizeof(double));
                                ^~~~~~~~~~~~~~
In file included from OsiAuxInfo.cpp:11:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
OsiAuxInfo.cpp:91:21: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
    bestSolution_ = CoinCopyOfArray(rhs.bestSolution_,sizeSolution_);
                    ^
13 warnings generated.
In file included from OsiBranchingObject.cpp:14:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiBranchingObject.cpp:16:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
OsiBranchingObject.cpp:587:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (preferredWay_>=0&&returnValue)
                      ~~^~~~~~~~~~~
OsiBranchingObject.cpp:848:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(members_,which,numberMembers_*sizeof(int));
                          ^~~~~~~~~~~~~~~
OsiBranchingObject.cpp:850:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(weights_,weights,numberMembers_*sizeof(double));
                              ^~~~~~~~~~~~~~~
OsiBranchingObject.cpp:881:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(members_,rhs.members_,numberMembers_*sizeof(int));
                                 ^~~~~~~~~~~~~~~
OsiBranchingObject.cpp:882:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(weights_,rhs.weights_,numberMembers_*sizeof(double));
                                 ^~~~~~~~~~~~~~~
OsiBranchingObject.cpp:910:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(members_,rhs.members_,numberMembers_*sizeof(int));
                                   ^~~~~~~~~~~~~~~
OsiBranchingObject.cpp:911:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(weights_,rhs.weights_,numberMembers_*sizeof(double));
                                   ^~~~~~~~~~~~~~~
OsiBranchingObject.cpp:952:9: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
    if (upper[iColumn]) {
    ~~  ^~~~~~~~~~~~~~
OsiBranchingObject.cpp:1039:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if (useful[iRow]) {
            ~~  ^~~~~~~~~~~~
OsiBranchingObject.cpp:1041:13: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
              if (!value)
                  ~^~~~~
OsiBranchingObject.cpp:1087:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
              if (useful2[iRow]) {
              ~~  ^~~~~~~~~~~~~
OsiBranchingObject.cpp:1089:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                if (!value)
                    ~^~~~~
OsiBranchingObject.cpp:1127:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (movement) {
          ~~  ^~~~~~~~
OsiBranchingObject.cpp:1184:22: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
      if (value>sum&&upper[iColumn]) {
                   ~~^~~~~~~~~~~~~~
OsiBranchingObject.cpp:1199:6: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
        if (upper[iColumn]||upper[jColumn]) {
            ^~~~~~~~~~~~~~~~
OsiBranchingObject.cpp:1199:22: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
        if (upper[iColumn]||upper[jColumn]) {
                          ~~^~~~~~~~~~~~~~
OsiBranchingObject.cpp:1200:17: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
          firstNonZero=upper[jColumn] ? j-1 : j;
                       ^~~~~~~~~~~~~~ ~
OsiBranchingObject.cpp:1201:16: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
          lastNonZero=upper[iColumn] ? j : j-1;
                      ^~~~~~~~~~~~~~ ~
OsiBranchingObject.cpp:1274:9: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
    if (upper[iColumn]) {
    ~~  ^~~~~~~~~~~~~~
OsiBranchingObject.cpp:1406:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (bound) {
    ~~  ^~~~~
OsiBranchingObject.cpp:1418:16: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      else if (bound)
           ~~  ^~~~~
OsiBranchingObject.cpp:1424:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (bound)
      ~~  ^~~~~
OsiBranchingObject.cpp:1433:16: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      else if (bound)
           ~~  ^~~~~
OsiBranchingObject.cpp:1439:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (bound)
      ~~  ^~~~~
OsiBranchingObject.cpp:1545:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(bound_,rhs.bound_,(numberRanges_+1)*rangeType_*sizeof(double));
                             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
OsiBranchingObject.cpp:1573:49: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(bound_,rhs.bound_,(numberRanges_+1)*rangeType_*sizeof(double));
                               ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from OsiBranchingObject.cpp:16:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
OsiBranchingObject.cpp:257:17: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
    solution_ = CoinCopyOfArray(solver_->getColSolution(),numberColumns_);
                ^
In file included from OsiBranchingObject.cpp:18:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<double, int, CoinFirstLess_2<double, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
OsiBranchingObject.cpp:856:5: note: in instantiation of function template specialization 'CoinSort_2<double, int>' requested here
    CoinSort_2(weights_,weights_+numberMembers_,members_);
    ^
38 warnings generated.
In file included from OsiChooseVariable.cpp:10:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiChooseVariable.cpp:12:
In file included from ./OsiSolverBranch.hpp:9:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinWarmStartBasis.hpp:19:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
OsiChooseVariable.cpp:798:17: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          upEstimate = numberUp ? ((upEstimate*sumUp)/numberUp) : (upEstimate*upMultiplier);
                       ^~~~~~~~ ~
OsiChooseVariable.cpp:801:19: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          downEstimate = numberDown ? ((downEstimate*sumDown)/numberDown) : (downEstimate*downMultiplier);
                         ^~~~~~~~~~ ~
OsiChooseVariable.cpp:1006:34: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if (obj->preferredWay()>=0&&obj->infeasibility())
                                      ~~^~~~~~~~~~~~~~~~~~~~
In file included from OsiChooseVariable.cpp:12:
In file included from ./OsiSolverBranch.hpp:9:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinWarmStartBasis.hpp:19:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
OsiChooseVariable.cpp:94:23: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
      goodSolution_ = CoinCopyOfArray(rhs.goodSolution_,numberColumns);
                      ^
In file included from OsiChooseVariable.cpp:12:
In file included from ./OsiSolverBranch.hpp:9:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinWarmStartBasis.hpp:19:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
OsiChooseVariable.cpp:98:13: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
    list_ = CoinCopyOfArray(rhs.list_,numberObjects);
            ^
In file included from OsiChooseVariable.cpp:12:
In file included from ./OsiSolverBranch.hpp:9:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinWarmStartBasis.hpp:18:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<double, int, CoinFirstLess_2<double, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
OsiChooseVariable.cpp:277:7: note: in instantiation of function template specialization 'CoinSort_2<double, int>' requested here
      CoinSort_2(useful_,useful_+numberOnList_,list_);
      ^
16 warnings generated.
In file included from OsiColCut.cpp:10:
In file included from ./OsiColCut.hpp:13:
In file included from ./OsiCut.hpp:9:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiColCut.cpp:10:
In file included from ./OsiColCut.hpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiColCut.cpp:10:
In file included from ./OsiColCut.hpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
6 warnings generated.
In file included from OsiCut.cpp:10:
In file included from ./OsiCut.hpp:9:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
4 warnings generated.
In file included from OsiCuts.cpp:13:
In file included from ./OsiCuts.hpp:13:
In file included from ./OsiRowCut.hpp:11:
In file included from ./OsiCut.hpp:9:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiCuts.cpp:13:
./OsiCuts.hpp:384:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiRowCut * OsiCuts::rowCutPtr(int i) const { return rowCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
./OsiCuts.hpp:385:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiColCut * OsiCuts::colCutPtr(int i) const { return colCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
./OsiCuts.hpp:386:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiRowCut * OsiCuts::rowCutPtr(int i) { return rowCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
./OsiCuts.hpp:387:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiColCut * OsiCuts::colCutPtr(int i) { return colCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
./OsiCuts.hpp:444:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete rowCutPtrs_[i];
         ~~~~~~~~~~~ ^
./OsiCuts.hpp:449:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete colCutPtrs_[i];
         ~~~~~~~~~~~ ^
./OsiCuts.hpp:456:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  OsiRowCut * cut = rowCutPtrs_[i];
                    ~~~~~~~~~~~ ^
./OsiCuts.hpp:457:15: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  rowCutPtrs_[i]=NULL;
  ~~~~~~~~~~~ ^
./OsiCuts.hpp:468:24: warning: implicit conversion changes signedness: 'const value_type' (aka 'const int') to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    delete rowCutPtrs_[to_erase[i]];
           ~~~~~~~~~~~ ^~~~~~~~~~~
OsiCuts.cpp:82:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (rowCutPtrs_[i]->globallyValidAsInteger()!=2)
        ~~~~~~~~~~~ ^
OsiCuts.cpp:83:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      delete rowCutPtrs_[i];
             ~~~~~~~~~~~ ^
OsiCuts.cpp:89:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (colCutPtrs_[i]->globallyValidAsInteger()!=2)
        ~~~~~~~~~~~ ^
OsiCuts.cpp:90:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      delete colCutPtrs_[i];
             ~~~~~~~~~~~ ^
In file included from OsiCuts.cpp:13:
In file included from ./OsiCuts.hpp:13:
In file included from ./OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiCuts.cpp:13:
In file included from ./OsiCuts.hpp:13:
In file included from ./OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
19 warnings generated.
In file included from OsiNames.cpp:12:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiNames.cpp:15:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModel.hpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
OsiNames.cpp:104:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { rowNames.resize(m) ;
    ~~~~~~~~        ^
OsiNames.cpp:109:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { rowNames.reserve(m) ; }
    ~~~~~~~~         ^
OsiNames.cpp:113:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { colNames.resize(n) ;
    ~~~~~~~~        ^
OsiNames.cpp:118:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { colNames.reserve(n) ; }
    ~~~~~~~~         ^
OsiNames.cpp:165:28: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    buildName << std::setw(digits) << std::setfill('0') ;
                 ~~~       ^~~~~~
OsiNames.cpp:225:19: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        name = rowNames_[ndx] ;
               ~~~~~~~~~ ^~~
OsiNames.cpp:271:27: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { rowNames_.resize(m+1) ; }
        ~~~~~~~~~        ~^~
OsiNames.cpp:273:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { if (rowNames_[i].length() == 0)
            ~~~~~~~~~ ^
OsiNames.cpp:274:14: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        { rowNames_[i] = dfltRowColName('r',i) ; } }
          ~~~~~~~~~ ^
OsiNames.cpp:275:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      if (rowNames_[m].length() == 0)
          ~~~~~~~~~ ^
OsiNames.cpp:276:19: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { rowNames_[m] = getObjName() ; }
        ~~~~~~~~~ ^
OsiNames.cpp:323:19: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        name = colNames_[ndx] ;
               ~~~~~~~~~ ^~~
OsiNames.cpp:369:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { colNames_.resize(n) ; }
        ~~~~~~~~~        ^
OsiNames.cpp:371:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { if (colNames_[j].length() == 0)
            ~~~~~~~~~ ^
OsiNames.cpp:372:14: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        { colNames_[j] = dfltRowColName('c',j) ; } }
          ~~~~~~~~~ ^
OsiNames.cpp:416:29: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { rowNames_.resize(ndx+1) ; }
        ~~~~~~~~~        ~~~^~
OsiNames.cpp:419:29: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { rowNames_.resize(ndx+1) ; }
        ~~~~~~~~~        ~~~^~
OsiNames.cpp:420:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      rowNames_[ndx] = name ;
      ~~~~~~~~~ ^~~
OsiNames.cpp:469:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { setRowName(tgtNdx,srcNames[srcNdx]) ; }
                        ~~~~~~~~ ^~~~~~
OsiNames.cpp:545:29: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { colNames_.resize(ndx+1) ; }
        ~~~~~~~~~        ~~~^~
OsiNames.cpp:548:29: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { colNames_.resize(ndx+1) ; }
        ~~~~~~~~~        ~~~^~
OsiNames.cpp:549:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      colNames_[ndx] = name ;
      ~~~~~~~~~ ^~~
OsiNames.cpp:599:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { setColName(tgtNdx,srcNames[srcNdx]) ; }
                        ~~~~~~~~ ^~~~~~
OsiNames.cpp:674:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { rowNames_.resize(m) ;
    ~~~~~~~~~        ^
OsiNames.cpp:676:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { rowNames_[i] = mps.rowName(i) ; }
      ~~~~~~~~~ ^
OsiNames.cpp:678:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    colNames_.resize(n) ;
    ~~~~~~~~~        ^
OsiNames.cpp:680:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { colNames_[j] = mps.columnName(j) ; } }
      ~~~~~~~~~ ^
OsiNames.cpp:720:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    rowNames_.resize(m) ;
    ~~~~~~~~~        ^
OsiNames.cpp:728:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      rowNames_[i] = nme ; }
      ~~~~~~~~~ ^
OsiNames.cpp:729:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    rowNames_.resize(maxRowNdx+1) ;
    ~~~~~~~~~        ~~~~~~~~~^~
OsiNames.cpp:731:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    colNames_.resize(n) ;
    ~~~~~~~~~        ^
OsiNames.cpp:739:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      colNames_[j] = nme ; }
      ~~~~~~~~~ ^
OsiNames.cpp:740:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    colNames_.resize(maxColNdx+1) ; }
    ~~~~~~~~~        ~~~~~~~~~^~
OsiNames.cpp:782:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    rowNames_.resize(m) ;
    ~~~~~~~~~        ^
OsiNames.cpp:790:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      rowNames_[i] = nme ; }
      ~~~~~~~~~ ^
OsiNames.cpp:791:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    rowNames_.resize(maxRowNdx+1) ;
    ~~~~~~~~~        ~~~~~~~~~^~
OsiNames.cpp:794:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    colNames_.resize(n) ;
    ~~~~~~~~~        ^
OsiNames.cpp:802:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      colNames_[j] = nme ; }
      ~~~~~~~~~ ^
OsiNames.cpp:803:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    colNames_.resize(maxColNdx+1) ; }
    ~~~~~~~~~        ~~~~~~~~~^~
45 warnings generated.
In file included from OsiPresolve.cpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from OsiPresolve.cpp:25:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiPresolve.cpp:27:
./OsiPresolve.hpp:167:54: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
  { presolveActions_  = (presolveActions_&0xffff0000)|(action&0xffff);}
                      ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
./OsiPresolve.hpp:167:26: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  { presolveActions_  = (presolveActions_&0xffff0000)|(action&0xffff);}
                         ^~~~~~~~~~~~~~~~~
OsiPresolve.cpp:168:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memset(acts,0,nrows*sizeof(double));
                    ^~~~~~
OsiPresolve.cpp:318:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(originalColumn_,prob.originalColumn_,ncolsNow*sizeof(int));
                                                  ^~~~~~~~~
OsiPresolve.cpp:322:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(originalRow_,prob.originalRow_,nrowsNow*sizeof(int));
                                            ^~~~~~~~~
OsiPresolve.cpp:365:14: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
              (prob.presolveOptions_&0x80000000) == 0) {
               ~~~~~^~~~~~~~~~~~~~~~~
OsiPresolve.cpp:1376:24: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  memset(rowChanged_,0,nrows_);
  ~~~~~~               ^~~~~~
OsiPresolve.cpp:1378:24: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  memset(colChanged_,0,ncols_);
  ~~~~~~               ^~~~~~
OsiPresolve.cpp:1444:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
  if (nonLinearValue) {
  ~~  ^~~~~~~~~~~~~~
OsiPresolve.cpp:1488:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(sol_,presol,ncols_*sizeof(double));;
                       ^~~~~~~
OsiPresolve.cpp:1490:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(acts_,si->getRowActivity(),nrows_*sizeof(double));
                                      ^~~~~~~
21 warnings generated.
In file included from OsiRowCut.cpp:12:
In file included from ./OsiRowCut.hpp:11:
In file included from ./OsiCut.hpp:9:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiRowCut.cpp:12:
In file included from ./OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiRowCut.cpp:12:
In file included from ./OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
6 warnings generated.
In file included from OsiRowCutDebugger.cpp:14:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from OsiRowCutDebugger.cpp:19:
In file included from ./OsiRowCutDebugger.hpp:16:
In file included from ./OsiCuts.hpp:13:
In file included from ./OsiRowCut.hpp:11:
In file included from ./OsiCut.hpp:9:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiRowCutDebugger.cpp:19:
In file included from ./OsiRowCutDebugger.hpp:16:
./OsiCuts.hpp:384:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiRowCut * OsiCuts::rowCutPtr(int i) const { return rowCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
./OsiCuts.hpp:385:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiColCut * OsiCuts::colCutPtr(int i) const { return colCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
./OsiCuts.hpp:386:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiRowCut * OsiCuts::rowCutPtr(int i) { return rowCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
./OsiCuts.hpp:387:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiColCut * OsiCuts::colCutPtr(int i) { return colCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
./OsiCuts.hpp:444:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete rowCutPtrs_[i];
         ~~~~~~~~~~~ ^
./OsiCuts.hpp:449:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete colCutPtrs_[i];
         ~~~~~~~~~~~ ^
./OsiCuts.hpp:456:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  OsiRowCut * cut = rowCutPtrs_[i];
                    ~~~~~~~~~~~ ^
./OsiCuts.hpp:457:15: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  rowCutPtrs_[i]=NULL;
  ~~~~~~~~~~~ ^
./OsiCuts.hpp:468:24: warning: implicit conversion changes signedness: 'const value_type' (aka 'const int') to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    delete rowCutPtrs_[to_erase[i]];
           ~~~~~~~~~~~ ^~~~~~~~~~~
OsiRowCutDebugger.cpp:225:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (value || !ok) std::cout << j << " " << value << std::endl ;
            ^~~~~ ~~
OsiRowCutDebugger.cpp:1610:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memset (mark,0,numberColumns_);
    ~~~~~~         ^~~~~~~~~~~~~~
In file included from OsiRowCutDebugger.cpp:15:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiRowCutDebugger.cpp:15:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
23 warnings generated.
In file included from OsiSolverBranch.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from OsiSolverBranch.cpp:16:
In file included from ./OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
OsiSolverBranch.cpp:121:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempI+putNow,indices_+start_[2-base],numberNow*sizeof(int));
                                              ^~~~~~~~~~
OsiSolverBranch.cpp:122:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempD+putNow,bound_+start_[2-base],numberNow*sizeof(double));
                                            ^~~~~~~~~~
OsiSolverBranch.cpp:123:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempI+putNew,whichLower,numberTighterLower*sizeof(int));
                                 ^~~~~~~~~~~~~~~~~~~
OsiSolverBranch.cpp:124:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempD+putNew,newLower,numberTighterLower*sizeof(double));
                               ^~~~~~~~~~~~~~~~~~~
OsiSolverBranch.cpp:126:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempI+putNew,whichUpper,numberTighterUpper*sizeof(int));
                                 ^~~~~~~~~~~~~~~~~~~
OsiSolverBranch.cpp:127:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempD+putNew,newUpper,numberTighterUpper*sizeof(double));
                               ^~~~~~~~~~~~~~~~~~~
OsiSolverBranch.cpp:184:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempI+putNow,indices_+start_[2-base],numberNow*sizeof(int));
                                              ^~~~~~~~~~
OsiSolverBranch.cpp:185:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempD+putNow,bound_+start_[2-base],numberNow*sizeof(double));
                                            ^~~~~~~~~~
OsiSolverBranch.cpp:186:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempI+putNew,whichLower,numberTighterLower*sizeof(int));
                                 ^~~~~~~~~~~~~~~~~~~
OsiSolverBranch.cpp:187:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempD+putNew,newLower,numberTighterLower*sizeof(double));
                               ^~~~~~~~~~~~~~~~~~~
OsiSolverBranch.cpp:189:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempI+putNew,whichUpper,numberTighterUpper*sizeof(int));
                                 ^~~~~~~~~~~~~~~~~~~
OsiSolverBranch.cpp:190:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(tempD+putNew,newUpper,numberTighterUpper*sizeof(double));
                               ^~~~~~~~~~~~~~~~~~~
In file included from OsiSolverBranch.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
OsiSolverBranch.cpp:43:16: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
    indices_ = CoinCopyOfArray(rhs.indices_,size);
               ^
In file included from OsiSolverBranch.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
OsiSolverBranch.cpp:44:14: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
    bound_ = CoinCopyOfArray(rhs.bound_,size);
             ^
24 warnings generated.
In file included from OsiSolverInterface.cpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from OsiSolverInterface.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMpsIO.hpp:19:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiSolverInterface.cpp:21:
./OsiCuts.hpp:384:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiRowCut * OsiCuts::rowCutPtr(int i) const { return rowCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
./OsiCuts.hpp:385:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiColCut * OsiCuts::colCutPtr(int i) const { return colCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
./OsiCuts.hpp:386:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiRowCut * OsiCuts::rowCutPtr(int i) { return rowCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
./OsiCuts.hpp:387:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiColCut * OsiCuts::colCutPtr(int i) { return colCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
./OsiCuts.hpp:444:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete rowCutPtrs_[i];
         ~~~~~~~~~~~ ^
./OsiCuts.hpp:449:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete colCutPtrs_[i];
         ~~~~~~~~~~~ ^
./OsiCuts.hpp:456:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  OsiRowCut * cut = rowCutPtrs_[i];
                    ~~~~~~~~~~~ ^
./OsiCuts.hpp:457:15: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  rowCutPtrs_[i]=NULL;
  ~~~~~~~~~~~ ^
./OsiCuts.hpp:468:24: warning: implicit conversion changes signedness: 'const value_type' (aka 'const int') to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    delete rowCutPtrs_[to_erase[i]];
           ~~~~~~~~~~~ ^~~~~~~~~~~
In file included from OsiSolverInterface.cpp:30:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModel.hpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
OsiSolverInterface.cpp:131:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        strictColSolution_[i] = colLower[i];
        ~~~~~~~~~~~~~~~~~~ ^
OsiSolverInterface.cpp:134:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      strictColSolution_[i] = colUpper[i];
      ~~~~~~~~~~~~~~~~~~ ^
OsiSolverInterface.cpp:1329:42: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
   memcpy(objective,getObjCoefficients(),numcols*sizeof(double));
                                         ^~~~~~~~
In file included from OsiSolverInterface.cpp:21:
In file included from ./OsiCuts.hpp:13:
In file included from ./OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiSolverInterface.cpp:21:
In file included from ./OsiCuts.hpp:13:
In file included from ./OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
26 warnings generated.
In file included from OsiColCutTest.cpp:13:
In file included from ../../src/Osi/OsiColCut.hpp:13:
In file included from ../../src/Osi/OsiCut.hpp:9:
In file included from ../../src/Osi/OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
OsiColCutTest.cpp:279:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    OSIUNITTEST_ASSERT_ERROR( cut.violated(solution), {}, "osicolcut", "violated");
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./OsiUnitTests.hpp:294:40: note: expanded from macro 'OSIUNITTEST_ASSERT_ERROR'
  OSIUNITTEST_ASSERT_SEVERITY_EXPECTED(condition,failurecode,component,testname,\
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./OsiUnitTests.hpp:284:42: note: expanded from macro 'OSIUNITTEST_ASSERT_SEVERITY_EXPECTED'
  if (!OsiUnitTestAssertSeverityExpected(condition, #condition, \
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~
OsiColCutTest.cpp:284:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    OSIUNITTEST_ASSERT_ERROR( cut.violated(solution), {}, "osicolcut", "violated");
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./OsiUnitTests.hpp:294:40: note: expanded from macro 'OSIUNITTEST_ASSERT_ERROR'
  OSIUNITTEST_ASSERT_SEVERITY_EXPECTED(condition,failurecode,component,testname,\
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./OsiUnitTests.hpp:284:42: note: expanded from macro 'OSIUNITTEST_ASSERT_SEVERITY_EXPECTED'
  if (!OsiUnitTestAssertSeverityExpected(condition, #condition, \
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~
OsiColCutTest.cpp:289:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    OSIUNITTEST_ASSERT_ERROR(!cut.violated(solution), {}, "osicolcut", "violated");
                             ~^~~~~~~~~~~~~~~~~~~~~~
./OsiUnitTests.hpp:294:40: note: expanded from macro 'OSIUNITTEST_ASSERT_ERROR'
  OSIUNITTEST_ASSERT_SEVERITY_EXPECTED(condition,failurecode,component,testname,\
                                       ^~~~~~~~~
./OsiUnitTests.hpp:284:42: note: expanded from macro 'OSIUNITTEST_ASSERT_SEVERITY_EXPECTED'
  if (!OsiUnitTestAssertSeverityExpected(condition, #condition, \
                                         ^~~~~~~~~
In file included from OsiColCutTest.cpp:13:
In file included from ../../src/Osi/OsiColCut.hpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiColCutTest.cpp:13:
In file included from ../../src/Osi/OsiColCut.hpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
9 warnings generated.
In file included from OsiCutsTest.cpp:9:
In file included from ../../src/Osi/OsiCuts.hpp:13:
In file included from ../../src/Osi/OsiRowCut.hpp:11:
In file included from ../../src/Osi/OsiCut.hpp:9:
In file included from ../../src/Osi/OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiCutsTest.cpp:9:
../../src/Osi/OsiCuts.hpp:384:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiRowCut * OsiCuts::rowCutPtr(int i) const { return rowCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:385:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiColCut * OsiCuts::colCutPtr(int i) const { return colCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:386:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiRowCut * OsiCuts::rowCutPtr(int i) { return rowCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:387:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiColCut * OsiCuts::colCutPtr(int i) { return colCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:444:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete rowCutPtrs_[i];
         ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:449:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete colCutPtrs_[i];
         ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:456:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  OsiRowCut * cut = rowCutPtrs_[i];
                    ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:457:15: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  rowCutPtrs_[i]=NULL;
  ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:468:24: warning: implicit conversion changes signedness: 'const value_type' (aka 'const int') to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    delete rowCutPtrs_[to_erase[i]];
           ~~~~~~~~~~~ ^~~~~~~~~~~
In file included from OsiCutsTest.cpp:9:
In file included from ../../src/Osi/OsiCuts.hpp:13:
In file included from ../../src/Osi/OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiCutsTest.cpp:9:
In file included from ../../src/Osi/OsiCuts.hpp:13:
In file included from ../../src/Osi/OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
15 warnings generated.
In file included from OsiRowCutDebuggerTest.cpp:9:
In file included from ../../src/Osi/OsiRowCutDebugger.hpp:16:
In file included from ../../src/Osi/OsiCuts.hpp:13:
In file included from ../../src/Osi/OsiRowCut.hpp:11:
In file included from ../../src/Osi/OsiCut.hpp:9:
In file included from ../../src/Osi/OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiRowCutDebuggerTest.cpp:9:
In file included from ../../src/Osi/OsiRowCutDebugger.hpp:16:
../../src/Osi/OsiCuts.hpp:384:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiRowCut * OsiCuts::rowCutPtr(int i) const { return rowCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:385:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiColCut * OsiCuts::colCutPtr(int i) const { return colCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:386:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiRowCut * OsiCuts::rowCutPtr(int i) { return rowCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:387:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiColCut * OsiCuts::colCutPtr(int i) { return colCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:444:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete rowCutPtrs_[i];
         ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:449:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete colCutPtrs_[i];
         ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:456:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  OsiRowCut * cut = rowCutPtrs_[i];
                    ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:457:15: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  rowCutPtrs_[i]=NULL;
  ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:468:24: warning: implicit conversion changes signedness: 'const value_type' (aka 'const int') to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    delete rowCutPtrs_[to_erase[i]];
           ~~~~~~~~~~~ ^~~~~~~~~~~
In file included from OsiRowCutDebuggerTest.cpp:9:
In file included from ../../src/Osi/OsiRowCutDebugger.hpp:16:
In file included from ../../src/Osi/OsiCuts.hpp:13:
In file included from ../../src/Osi/OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiRowCutDebuggerTest.cpp:9:
In file included from ../../src/Osi/OsiRowCutDebugger.hpp:16:
In file included from ../../src/Osi/OsiCuts.hpp:13:
In file included from ../../src/Osi/OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
15 warnings generated.
In file included from OsiRowCutTest.cpp:11:
In file included from ../../src/Osi/OsiRowCut.hpp:11:
In file included from ../../src/Osi/OsiCut.hpp:9:
In file included from ../../src/Osi/OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
OsiRowCutTest.cpp:344:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    OSIUNITTEST_ASSERT_ERROR(cut.violated(solution), {}, "osirowcut", "violation");
    ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./OsiUnitTests.hpp:294:40: note: expanded from macro 'OSIUNITTEST_ASSERT_ERROR'
  OSIUNITTEST_ASSERT_SEVERITY_EXPECTED(condition,failurecode,component,testname,\
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./OsiUnitTests.hpp:284:42: note: expanded from macro 'OSIUNITTEST_ASSERT_SEVERITY_EXPECTED'
  if (!OsiUnitTestAssertSeverityExpected(condition, #condition, \
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~
OsiRowCutTest.cpp:348:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    OSIUNITTEST_ASSERT_ERROR(!cut.violated(solution), {}, "osirowcut", "violation");
                             ~^~~~~~~~~~~~~~~~~~~~~~
./OsiUnitTests.hpp:294:40: note: expanded from macro 'OSIUNITTEST_ASSERT_ERROR'
  OSIUNITTEST_ASSERT_SEVERITY_EXPECTED(condition,failurecode,component,testname,\
                                       ^~~~~~~~~
./OsiUnitTests.hpp:284:42: note: expanded from macro 'OSIUNITTEST_ASSERT_SEVERITY_EXPECTED'
  if (!OsiUnitTestAssertSeverityExpected(condition, #condition, \
                                         ^~~~~~~~~
OsiRowCutTest.cpp:351:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    OSIUNITTEST_ASSERT_ERROR( cut.violated(solution), {}, "osirowcut", "violation");
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./OsiUnitTests.hpp:294:40: note: expanded from macro 'OSIUNITTEST_ASSERT_ERROR'
  OSIUNITTEST_ASSERT_SEVERITY_EXPECTED(condition,failurecode,component,testname,\
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./OsiUnitTests.hpp:284:42: note: expanded from macro 'OSIUNITTEST_ASSERT_SEVERITY_EXPECTED'
  if (!OsiUnitTestAssertSeverityExpected(condition, #condition, \
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~
In file included from OsiRowCutTest.cpp:11:
In file included from ../../src/Osi/OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiRowCutTest.cpp:11:
In file included from ../../src/Osi/OsiRowCut.hpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
9 warnings generated.
In file included from OsiSimplexAPITest.cpp:25:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from OsiSimplexAPITest.cpp:30:
In file included from ../../src/Osi/OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
OsiSimplexAPITest.cpp:533:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(fakeCost,si->getObjCoefficients(),numberColumns*sizeof(double));
                                           ^~~~~~~~~~~~~~
In file included from OsiSimplexAPITest.cpp:28:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiSimplexAPITest.cpp:28:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
13 warnings generated.
In file included from OsiNetlibTest.cpp:27:
In file included from ../../src/Osi/OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
OsiNetlibTest.cpp:184:43: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  std::vector<OsiSolverInterface*> vecSiP(numSolvers) ;
                                   ~~~~~~ ^~~~~~~~~~
OsiNetlibTest.cpp:185:35: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  std::vector<std::string> siName(numSolvers) ;
                           ~~~~~~ ^~~~~~~~~~
OsiNetlibTest.cpp:186:28: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  std::vector<int> siStage(numSolvers) ;
                   ~~~~~~~ ^~~~~~~~~~
OsiNetlibTest.cpp:187:34: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  std::vector<int> numProbSolved(numSolvers) ;
                   ~~~~~~~~~~~~~ ^~~~~~~~~~
OsiNetlibTest.cpp:188:33: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  std::vector<double> timeTaken(numSolvers) ;
                      ~~~~~~~~~ ^~~~~~~~~~
OsiNetlibTest.cpp:190:12: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { siName[i] = "unknown" ;
    ~~~~~~ ^
OsiNetlibTest.cpp:191:19: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    numProbSolved[i] = 0 ;
    ~~~~~~~~~~~~~ ^
OsiNetlibTest.cpp:192:15: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    timeTaken[i] = 0.0 ; }
    ~~~~~~~~~ ^
OsiNetlibTest.cpp:207:14: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      vecSiP[i] = vecEmptySiP[i]->clone() ;
      ~~~~~~ ^
OsiNetlibTest.cpp:207:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      vecSiP[i] = vecEmptySiP[i]->clone() ;
                  ~~~~~~~~~~~ ^
OsiNetlibTest.cpp:208:14: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      vecSiP[i]->getStrParam(OsiSolverName,siName[i]) ;
      ~~~~~~ ^
OsiNetlibTest.cpp:208:51: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      vecSiP[i]->getStrParam(OsiSolverName,siName[i]) ;
                                           ~~~~~~ ^
OsiNetlibTest.cpp:209:15: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      siStage[i] = 0 ;
      ~~~~~~~ ^
OsiNetlibTest.cpp:217:14: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      vecSiP[i]->readMps(fn.c_str(),"mps") ;
      ~~~~~~ ^
OsiNetlibTest.cpp:219:16: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        vecSiP[i]->setObjSense(1.0) ;
        ~~~~~~ ^
OsiNetlibTest.cpp:221:16: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        vecSiP[i]->setObjSense(-1.0) ;
        ~~~~~~ ^
OsiNetlibTest.cpp:222:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      int nr = vecSiP[i]->getNumRows() ;
               ~~~~~~ ^
OsiNetlibTest.cpp:223:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      int nc = vecSiP[i]->getNumCols() ;
               ~~~~~~ ^
OsiNetlibTest.cpp:225:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { siStage[i] = 1 ;
        ~~~~~~~ ^
OsiNetlibTest.cpp:234:50: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      for (s1 = 0 ; s1 < numSolvers-1 && siStage[s1] < 1 ; s1++) ;
                                         ~~~~~~~ ^~
OsiNetlibTest.cpp:236:51: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      for (s2 = s1+1 ; s2 < numSolvers && siStage[s2] < 1 ; s2++) ;
                                          ~~~~~~~ ^~
OsiNetlibTest.cpp:238:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        std::cout << "  comparing problem representation for " << siName[s1] << " and " << siName[s2] << " ..." ;
                                                                  ~~~~~~ ^~
OsiNetlibTest.cpp:238:99: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        std::cout << "  comparing problem representation for " << siName[s1] << " and " << siName[s2] << " ..." ;
                                                                                           ~~~~~~ ^~
OsiNetlibTest.cpp:239:49: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (OsiUnitTest::compareProblems(vecSiP[s1],vecSiP[s2]))
                                         ~~~~~~ ^~
OsiNetlibTest.cpp:239:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (OsiUnitTest::compareProblems(vecSiP[s1],vecSiP[s2]))
                                                    ~~~~~~ ^~
OsiNetlibTest.cpp:242:48: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        for (s2++ ; s2 < numSolvers && siStage[s2] < 1 ; s2++) ;
                                       ~~~~~~~ ^~
OsiNetlibTest.cpp:250:19: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { if (siStage[i] < 1) continue ;
          ~~~~~~~ ^
OsiNetlibTest.cpp:253:38: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      OSIUNITTEST_CATCH_ERROR(vecSiP[i]->initialSolve(), continue, *vecSiP[i], "netlib " + mpsName[m]);
                              ~~~~~~ ^
./OsiUnitTests.hpp:364:38: note: expanded from macro 'OSIUNITTEST_CATCH_ERROR'
        OSIUNITTEST_CATCH_SEVERITY_EXPECTED(trycode, catchcode, component, testname, OsiUnitTest::TestOutcome::ERROR, false)
                                            ^~~~~~~
./OsiUnitTests.hpp:318:5: note: expanded from macro 'OSIUNITTEST_CATCH_SEVERITY_EXPECTED'
    trycode; \
    ^~~~~~~
OsiNetlibTest.cpp:253:76: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      OSIUNITTEST_CATCH_ERROR(vecSiP[i]->initialSolve(), continue, *vecSiP[i], "netlib " + mpsName[m]);
                                                                    ~~~~~~ ^
./OsiUnitTests.hpp:364:58: note: expanded from macro 'OSIUNITTEST_CATCH_ERROR'
        OSIUNITTEST_CATCH_SEVERITY_EXPECTED(trycode, catchcode, component, testname, OsiUnitTest::TestOutcome::ERROR, false)
                                                                ^~~~~~~~~
./OsiUnitTests.hpp:319:29: note: expanded from macro 'OSIUNITTEST_CATCH_SEVERITY_EXPECTED'
    OSIUNITTEST_ADD_OUTCOME(component,testname,#trycode " did not throw exception",\
                            ^~~~~~~~~
./OsiUnitTests.hpp:269:31: note: expanded from macro 'OSIUNITTEST_ADD_OUTCOME'
    OsiUnitTest::outcomes.add(component,testname,testcondition,severity,\
                              ^~~~~~~~~
OsiNetlibTest.cpp:253:76: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      OSIUNITTEST_CATCH_ERROR(vecSiP[i]->initialSolve(), continue, *vecSiP[i], "netlib " + mpsName[m]);
                                                                    ~~~~~~ ^
./OsiUnitTests.hpp:364:58: note: expanded from macro 'OSIUNITTEST_CATCH_ERROR'
        OSIUNITTEST_CATCH_SEVERITY_EXPECTED(trycode, catchcode, component, testname, OsiUnitTest::TestOutcome::ERROR, false)
                                                                ^~~~~~~~~
./OsiUnitTests.hpp:337:29: note: expanded from macro 'OSIUNITTEST_CATCH_SEVERITY_EXPECTED'
    OSIUNITTEST_ADD_OUTCOME(component,testname,errmsg.str().c_str(),\
                            ^~~~~~~~~
./OsiUnitTests.hpp:269:31: note: expanded from macro 'OSIUNITTEST_ADD_OUTCOME'
    OsiUnitTest::outcomes.add(component,testname,testcondition,severity,\
                              ^~~~~~~~~
OsiNetlibTest.cpp:253:76: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      OSIUNITTEST_CATCH_ERROR(vecSiP[i]->initialSolve(), continue, *vecSiP[i], "netlib " + mpsName[m]);
                                                                    ~~~~~~ ^
./OsiUnitTests.hpp:364:58: note: expanded from macro 'OSIUNITTEST_CATCH_ERROR'
        OSIUNITTEST_CATCH_SEVERITY_EXPECTED(trycode, catchcode, component, testname, OsiUnitTest::TestOutcome::ERROR, false)
                                                                ^~~~~~~~~
./OsiUnitTests.hpp:339:33: note: expanded from macro 'OSIUNITTEST_CATCH_SEVERITY_EXPECTED'
    OsiUnitTest::failureMessage(component,testname,errmsg.str().c_str()); \
                                ^~~~~~~~~
OsiNetlibTest.cpp:253:76: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      OSIUNITTEST_CATCH_ERROR(vecSiP[i]->initialSolve(), continue, *vecSiP[i], "netlib " + mpsName[m]);
                                                                    ~~~~~~ ^
./OsiUnitTests.hpp:364:58: note: expanded from macro 'OSIUNITTEST_CATCH_ERROR'
        OSIUNITTEST_CATCH_SEVERITY_EXPECTED(trycode, catchcode, component, testname, OsiUnitTest::TestOutcome::ERROR, false)
                                                                ^~~~~~~~~
./OsiUnitTests.hpp:354:29: note: expanded from macro 'OSIUNITTEST_CATCH_SEVERITY_EXPECTED'
    OSIUNITTEST_ADD_OUTCOME(component,testname,errmsg.c_str(),severity,false); \
                            ^~~~~~~~~
./OsiUnitTests.hpp:269:31: note: expanded from macro 'OSIUNITTEST_ADD_OUTCOME'
    OsiUnitTest::outcomes.add(component,testname,testcondition,severity,\
                              ^~~~~~~~~
OsiNetlibTest.cpp:253:76: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      OSIUNITTEST_CATCH_ERROR(vecSiP[i]->initialSolve(), continue, *vecSiP[i], "netlib " + mpsName[m]);
                                                                    ~~~~~~ ^
./OsiUnitTests.hpp:364:58: note: expanded from macro 'OSIUNITTEST_CATCH_ERROR'
        OSIUNITTEST_CATCH_SEVERITY_EXPECTED(trycode, catchcode, component, testname, OsiUnitTest::TestOutcome::ERROR, false)
                                                                ^~~~~~~~~
./OsiUnitTests.hpp:355:33: note: expanded from macro 'OSIUNITTEST_CATCH_SEVERITY_EXPECTED'
    OsiUnitTest::failureMessage(component,testname,errmsg.c_str()); \
                                ^~~~~~~~~
OsiNetlibTest.cpp:256:39: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      OSIUNITTEST_ASSERT_ERROR(vecSiP[i]->isProvenOptimal(), {}, *vecSiP[i], "netlib " + mpsName[m]);
                               ~~~~~~ ^
./OsiUnitTests.hpp:294:40: note: expanded from macro 'OSIUNITTEST_ASSERT_ERROR'
  OSIUNITTEST_ASSERT_SEVERITY_EXPECTED(condition,failurecode,component,testname,\
                                       ^~~~~~~~~
./OsiUnitTests.hpp:284:42: note: expanded from macro 'OSIUNITTEST_ASSERT_SEVERITY_EXPECTED'
  if (!OsiUnitTestAssertSeverityExpected(condition, #condition, \
                                         ^~~~~~~~~
OsiNetlibTest.cpp:256:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      OSIUNITTEST_ASSERT_ERROR(vecSiP[i]->isProvenOptimal(), {}, *vecSiP[i], "netlib " + mpsName[m]);
                                                                  ~~~~~~ ^
./OsiUnitTests.hpp:294:62: note: expanded from macro 'OSIUNITTEST_ASSERT_ERROR'
  OSIUNITTEST_ASSERT_SEVERITY_EXPECTED(condition,failurecode,component,testname,\
                                                             ^~~~~~~~~
./OsiUnitTests.hpp:285:27: note: expanded from macro 'OSIUNITTEST_ASSERT_SEVERITY_EXPECTED'
      __FILE__, __LINE__, component, testname, severity, expected)) { \
                          ^~~~~~~~~
OsiNetlibTest.cpp:257:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      if (vecSiP[i]->isProvenOptimal())
          ~~~~~~ ^
OsiNetlibTest.cpp:258:30: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      { double soln = vecSiP[i]->getObjValue();
                      ~~~~~~ ^
OsiNetlibTest.cpp:262:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
            *vecSiP[i], "netlib " + mpsName[m]);
             ~~~~~~ ^
./OsiUnitTests.hpp:294:62: note: expanded from macro 'OSIUNITTEST_ASSERT_ERROR'
  OSIUNITTEST_ASSERT_SEVERITY_EXPECTED(condition,failurecode,component,testname,\
                                                             ^~~~~~~~~
./OsiUnitTests.hpp:285:27: note: expanded from macro 'OSIUNITTEST_ASSERT_SEVERITY_EXPECTED'
      __FILE__, __LINE__, component, testname, severity, expected)) { \
                          ^~~~~~~~~
OsiNetlibTest.cpp:264:38: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                std::cout << "  " << siName[i] << " "   << soln << " = " << objValue[m] << ", " << vecSiP[i]->getIterationCount() << " iters; okay" ;
                                     ~~~~~~ ^
OsiNetlibTest.cpp:264:98: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                std::cout << "  " << siName[i] << " "   << soln << " = " << objValue[m] << ", " << vecSiP[i]->getIterationCount() << " iters; okay" ;
                                                                                                   ~~~~~~ ^
OsiNetlibTest.cpp:265:24: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                numProbSolved[i]++ ; }
                ~~~~~~~~~~~~~ ^
OsiNetlibTest.cpp:267:19: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        timeTaken[i] += timeOfSolution;
        ~~~~~~~~~ ^
OsiNetlibTest.cpp:271:37: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        std::cerr << "  " << siName[i] << "; error " ;
                             ~~~~~~ ^
OsiNetlibTest.cpp:272:20: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (vecSiP[i]->isProvenPrimalInfeasible())
            ~~~~~~ ^
OsiNetlibTest.cpp:274:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        else if (vecSiP[i]->isIterationLimitReached())
                 ~~~~~~ ^
OsiNetlibTest.cpp:276:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        else if (vecSiP[i]->isAbandoned())
                 ~~~~~~ ^
OsiNetlibTest.cpp:284:54: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    for (i = 0 ; i < numSolvers ; i++) delete vecSiP[i] ; }
                                              ~~~~~~ ^
OsiNetlibTest.cpp:290:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      << siName[i] << " solved "
         ~~~~~~ ^
OsiNetlibTest.cpp:291:24: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      << numProbSolved[i] << " out of "
         ~~~~~~~~~~~~~ ^
OsiNetlibTest.cpp:292:51: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      << numProblems << " and took " << timeTaken[i] << " seconds."
                                        ~~~~~~~~~ ^
54 warnings generated.
In file included from OsiUnitTestUtils.cpp:25:
In file included from ../../src/Osi/OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiUnitTestUtils.cpp:27:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
OsiUnitTestUtils.cpp:489:42: warning: comparison of unsigned expression < 0 is always false [-Wtautological-compare]
        if( *endptr != '\0' || verblevel < 0) {
                               ~~~~~~~~~ ^ ~
11 warnings generated.
In file included from OsiSolverInterfaceTest.cpp:77:
In file included from ../../src/Osi/OsiSolverInterface.hpp:13:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiSolverInterfaceTest.cpp:82:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinWarmStartBasis.hpp:19:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from OsiSolverInterfaceTest.cpp:84:
../../src/Osi/OsiCuts.hpp:384:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiRowCut * OsiCuts::rowCutPtr(int i) const { return rowCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:385:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiColCut * OsiCuts::colCutPtr(int i) const { return colCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:386:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiRowCut * OsiCuts::rowCutPtr(int i) { return rowCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:387:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiColCut * OsiCuts::colCutPtr(int i) { return colCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:444:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete rowCutPtrs_[i];
         ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:449:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete colCutPtrs_[i];
         ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:456:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  OsiRowCut * cut = rowCutPtrs_[i];
                    ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:457:15: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  rowCutPtrs_[i]=NULL;
  ~~~~~~~~~~~ ^
../../src/Osi/OsiCuts.hpp:468:24: warning: implicit conversion changes signedness: 'const value_type' (aka 'const int') to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    delete rowCutPtrs_[to_erase[i]];
           ~~~~~~~~~~~ ^~~~~~~~~~~
In file included from OsiSolverInterfaceTest.cpp:85:
../../src/Osi/OsiPresolve.hpp:167:54: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
  { presolveActions_  = (presolveActions_&0xffff0000)|(action&0xffff);}
                      ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
../../src/Osi/OsiPresolve.hpp:167:26: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  { presolveActions_  = (presolveActions_&0xffff0000)|(action&0xffff);}
                         ^~~~~~~~~~~~~~~~~
OsiSolverInterfaceTest.cpp:1464:20: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { if (rowNames[i] != exmip1RowNames[i])
          ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1464:41: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { if (rowNames[i] != exmip1RowNames[i])
                         ~~~~~~~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1467:58: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        std::cout << "Row " << i << " is \"" << rowNames[i] << "\" expected \"" << exmip1RowNames[i] << "\"." << std::endl; } }
                                                ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1467:99: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        std::cout << "Row " << i << " is \"" << rowNames[i] << "\" expected \"" << exmip1RowNames[i] << "\"." << std::endl; } }
                                                                                   ~~~~~~~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1475:20: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { if (colNames[j] != exmip1ColNames[j])
          ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1475:41: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { if (colNames[j] != exmip1ColNames[j])
                         ~~~~~~~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1478:59: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        std::cout << "Column " << j << " is " << colNames[j] << "\" expected \"" << exmip1ColNames[j] << "\"." << std::endl ; } }
                                                 ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1478:100: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        std::cout << "Column " << j << " is " << colNames[j] << "\" expected \"" << exmip1ColNames[j] << "\"." << std::endl ; } }
                                                                                    ~~~~~~~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1536:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { if (rowNames[i] != exmip1RowNames[i])
        ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1536:39: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { if (rowNames[i] != exmip1RowNames[i])
                       ~~~~~~~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1539:56: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Row " << i << " is \"" << rowNames[i] << "\" expected \"" << exmip1RowNames[i] << "\"." << std::endl ; } }
                                              ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1539:97: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Row " << i << " is \"" << rowNames[i] << "\" expected \"" << exmip1RowNames[i] << "\"." << std::endl ; } }
                                                                                 ~~~~~~~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1547:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { if (colNames[j] != exmip1ColNames[j])
        ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1547:39: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { if (colNames[j] != exmip1ColNames[j])
                       ~~~~~~~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1550:57: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Column " << j << " is " << colNames[j] << "\" expected \"" << exmip1ColNames[j] << "\"." << std::endl ; } }
                                               ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1550:98: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Column " << j << " is " << colNames[j] << "\" expected \"" << exmip1ColNames[j] << "\"." << std::endl ; } }
                                                                                  ~~~~~~~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1587:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1RowNames[i+1] ; }
                 ~~~~~~~~~~~~~~ ~^~
OsiSolverInterfaceTest.cpp:1590:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (rowNames[i] != expected)
        ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1593:56: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Row " << i << " is \"" << rowNames[i] << "\" expected \"" << expected << "\"." << std::endl ; } }
                                              ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1625:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1ColNames[j+1] ; }
                 ~~~~~~~~~~~~~~ ~^~
OsiSolverInterfaceTest.cpp:1628:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (colNames[j] != expected)
        ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1631:59: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Column " << j << " is \"" << colNames[j] << "\" expected \"" << expected << "\"." << std::endl ; } }
                                                 ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1645:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1RowNames[i+1] ; }
                 ~~~~~~~~~~~~~~ ~^~
OsiSolverInterfaceTest.cpp:1648:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1ColNames[i-2] ; }
                 ~~~~~~~~~~~~~~ ~^~
OsiSolverInterfaceTest.cpp:1651:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (rowNames[i] != expected)
        ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1654:56: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Row " << i << " is \"" << rowNames[i]       << "\" expected \"" << expected << "\"." << std::endl ; } }
                                              ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1665:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1RowNames[j+3] ; }
                 ~~~~~~~~~~~~~~ ~^~
OsiSolverInterfaceTest.cpp:1668:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1ColNames[j+1] ; }
                 ~~~~~~~~~~~~~~ ~^~
OsiSolverInterfaceTest.cpp:1671:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (colNames[j] != expected)
        ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1674:59: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Column " << j << " is \"" << colNames[j] << "\" expected \"" << expected << "\"." << std::endl ; } }
                                                 ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1689:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1ColNames[i] ; }
                 ~~~~~~~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1690:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (rowNames[i] != expected)
        ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1693:56: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Row " << i << " is \"" << rowNames[i] << "\" expected \"" << expected << "\"." << std::endl ; } }
                                              ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1704:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1RowNames[j+3] ; }
                 ~~~~~~~~~~~~~~ ~^~
OsiSolverInterfaceTest.cpp:1707:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1ColNames[j+1] ; }
                 ~~~~~~~~~~~~~~ ~^~
OsiSolverInterfaceTest.cpp:1708:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (colNames[j] != expected)
        ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1711:59: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Column " << j << " is \"" << colNames[j] << "\" expected \"" << expected << "\"." << std::endl ; } }
                                                 ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1723:39: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  OSIUNITTEST_ASSERT_WARNING(rowNames[m] == exmip1ObjName, {}, solverName, "testNames full names: objective name");
                             ~~~~~~~~ ^
./OsiUnitTests.hpp:301:40: note: expanded from macro 'OSIUNITTEST_ASSERT_WARNING'
  OSIUNITTEST_ASSERT_SEVERITY_EXPECTED(condition,failurecode,component,testname,\
                                       ^~~~~~~~~
./OsiUnitTests.hpp:284:42: note: expanded from macro 'OSIUNITTEST_ASSERT_SEVERITY_EXPECTED'
  if (!OsiUnitTestAssertSeverityExpected(condition, #condition, \
                                         ^~~~~~~~~
OsiSolverInterfaceTest.cpp:1728:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1ColNames[i] ; }
                 ~~~~~~~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1731:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (rowNames[i] != expected)
        ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1734:56: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Row " << i << " is \"" << rowNames[i] << "\" expected \"" << expected << "\"." << std::endl ; } }
                                              ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1745:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1RowNames[j+3] ; }
                 ~~~~~~~~~~~~~~ ~^~
OsiSolverInterfaceTest.cpp:1748:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    { expected = exmip1ColNames[j+1] ; }
                 ~~~~~~~~~~~~~~ ~^~
OsiSolverInterfaceTest.cpp:1751:18: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    if (colNames[j] != expected)
        ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:1754:57: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      std::cout << "Column " << j << " is " << colNames[j] << "\" expected \"" << expected << "\"." << std::endl ; } }
                                               ~~~~~~~~ ^
OsiSolverInterfaceTest.cpp:2497:17: warning: equality comparison result unused [-Wunused-comparison]
     solverName == "unknown";
     ~~~~~~~~~~~^~~~~~~~~~~~
OsiSolverInterfaceTest.cpp:2497:17: note: use '=' to turn this equality comparison into an assignment
     solverName == "unknown";
                ^~
                =
OsiSolverInterfaceTest.cpp:3496:9: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    m = si->getNumRows() ;
      ~ ^~~~~~~~~~~~~~~~
OsiSolverInterfaceTest.cpp:3497:9: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    n = si->getNumCols() ;
      ~ ^~~~~~~~~~~~~~~~
OsiSolverInterfaceTest.cpp:3527:51: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          { std::cout << "    " << si->getRowName(i) << " [" << i << "]: " << ray[i] << "\t rhs: " << rhs[i] << "\t sense: " << sense[i] << std::endl ; } }
                                   ~~             ^
OsiSolverInterfaceTest.cpp:3531:53: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
            { std::cout << "    " << si->getColName(j) << " [" << j << "]: " << ray[m+j] << std::endl ; } } } }
                                     ~~             ^
OsiSolverInterfaceTest.cpp:3552:39: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
              { statj = wsb->getStructStatus(j) ;
                        ~~~                  ^
OsiSolverInterfaceTest.cpp:3586:20: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
      CoinFillN(rA,m,0.0) ;
      ~~~~~~~~~    ^
OsiSolverInterfaceTest.cpp:3591:40: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
        { statj = wsb->getStructStatus(j) ;
                  ~~~                  ^
In file included from OsiSolverInterfaceTest.cpp:80:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiSolverInterfaceTest.cpp:80:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
76 warnings generated.
In file included from ClpCholeskyBase.cpp:29:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpCholeskyBase.cpp:29:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpCholeskyBase.cpp:29:
In file included from ./ClpInterior.hpp:20:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpCholeskyBase.cpp:29:
In file included from ./ClpInterior.hpp:22:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpCholeskyBase.cpp:212:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(rowsDropped_, 0, numberRows_);
     ~~~~~~                  ^~~~~~~~~~~
ClpCholeskyBase.cpp:305:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(rowsDropped_, 0, numberRows_);
          ~~~~~~                  ^~~~~~~~~~~
ClpCholeskyBase.cpp:497:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(rowsDropped_, 0, numberRows_);
          ~~~~~~                  ^~~~~~~~~~~
ClpCholeskyBase.cpp:648:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(rowsDropped_, 0, numberRows_);
          ~~~~~~                  ^~~~~~~~~~~
ClpCholeskyBase.cpp:669:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(rowsDropped_, 0, numberRows_);
     ~~~~~~                  ^~~~~~~~~~~
ClpCholeskyBase.cpp:1834:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(count, 0, numberRows_ * sizeof(int));
                      ^~~~~~~~~~~ ~
ClpCholeskyBase.cpp:2731:30: warning: implicit conversion turns floating-point number into integer: 'const CoinWorkDouble' (aka 'const double') to 'bool' [-Wfloat-conversion]
                         if (diagonal[iColumn]) {
                         ~~  ^~~~~~~~~~~~~~~~~
ClpCholeskyBase.cpp:2927:39: warning: use of logical '&&' with constant operand [-Wconstant-logical-operand]
               if (numberRowsDropped_ && 0) {
                                      ^  ~
ClpCholeskyBase.cpp:2927:39: note: use '&' for a bitwise operation
               if (numberRowsDropped_ && 0) {
                                      ^~
                                      &
ClpCholeskyBase.cpp:2927:39: note: remove constant to silence this warning
               if (numberRowsDropped_ && 0) {
                                     ~^~~~
ClpCholeskyBase.cpp:3542:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(dropped, 0, nDense * sizeof(int));
                             ^~~~~~ ~
In file included from ClpCholeskyBase.cpp:29:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<char>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpCholeskyBase.cpp:93:21: note: in instantiation of function template specialization 'ClpCopyOfArray<char>' requested here
     rowsDropped_ = ClpCopyOfArray(rhs.rowsDropped_, numberRows_);
                    ^
In file included from ClpCholeskyBase.cpp:29:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<int>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpCholeskyBase.cpp:94:24: note: in instantiation of function template specialization 'ClpCopyOfArray<int>' requested here
     permuteInverse_ = ClpCopyOfArray(rhs.permuteInverse_, numberRows_);
                       ^
In file included from ClpCholeskyBase.cpp:29:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpCholeskyBase.cpp:99:22: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
     sparseFactor_ = ClpCopyOfArray(rhs.sparseFactor_, rhs.sizeFactor_);
                     ^
In file included from ClpCholeskyBase.cpp:32:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, int, CoinFirstLess_2<int, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpCholeskyBase.cpp:767:11: note: in instantiation of function template specialization 'CoinSort_2<int, int>' requested here
          CoinSort_2(count, count + numberRows_, permute_);
          ^
30 warnings generated.
In file included from ClpCholeskyDense.cpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpCholeskyDense.cpp:12:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpCholeskyDense.cpp:12:
In file included from ./ClpInterior.hpp:20:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpCholeskyDense.cpp:12:
In file included from ./ClpInterior.hpp:22:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpCholeskyDense.cpp:113:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(rowsDropped_, 0, numberRows_);
          ~~~~~~                  ^~~~~~~~~~~
ClpCholeskyDense.cpp:663:15: warning: implicit conversion turns floating-point number into integer: 'longDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          if (diagonal_[i]) {
          ~~  ^~~~~~~~~~~~
19 warnings generated.
In file included from ClpConstraint.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpConstraint.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpConstraint.cpp:7:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpConstraint.cpp:7:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
17 warnings generated.
In file included from ClpConstraintLinear.cpp:7:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpConstraintLinear.cpp:8:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpConstraintLinear.cpp:9:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpConstraintLinear.cpp:9:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpConstraintLinear.cpp:9:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpConstraintLinear.cpp:154:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(deleted, 0, numberColumns_ * sizeof(char));
                             ^~~~~~~~~~~~~~ ~
In file included from ClpConstraintLinear.cpp:7:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpConstraintLinear.cpp:41:16: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
     column_ = CoinCopyOfArray(column, numberCoefficients_);
               ^
In file included from ClpConstraintLinear.cpp:7:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpConstraintLinear.cpp:42:21: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
     coefficient_ = CoinCopyOfArray(coefficient, numberCoefficients_);
                    ^
In file included from ClpConstraintLinear.cpp:8:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstLess_2<int, double> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpConstraintLinear.cpp:43:6: note: in instantiation of function template specialization 'CoinSort_2<int, double>' requested here
     CoinSort_2(column_, column_ + numberCoefficients_, coefficient_);
     ^
24 warnings generated.
In file included from ClpConstraintQuadratic.cpp:7:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpConstraintQuadratic.cpp:8:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpConstraintQuadratic.cpp:9:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpConstraintQuadratic.cpp:9:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpConstraintQuadratic.cpp:9:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpConstraintQuadratic.cpp:48:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(mark, 0, numberQuadraticColumns_);
     ~~~~~~          ^~~~~~~~~~~~~~~~~~~~~~~
ClpConstraintQuadratic.cpp:210:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(deleted, 0, numberColumns_ * sizeof(char));
                             ^~~~~~~~~~~~~~ ~
In file included from ClpConstraintQuadratic.cpp:7:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpConstraintQuadratic.cpp:43:15: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
     start_ = CoinCopyOfArray(start, numberQuadraticColumns + 1);
              ^
In file included from ClpConstraintQuadratic.cpp:7:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpConstraintQuadratic.cpp:46:21: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
     coefficient_ = CoinCopyOfArray(coefficient, numberElements);
                    ^
24 warnings generated.
In file included from Clp_C_Interface.cpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from Clp_C_Interface.cpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from Clp_C_Interface.cpp:14:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from Clp_C_Interface.cpp:14:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
Clp_C_Interface.cpp:390:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
     rowNames.reserve(numberRows);
     ~~~~~~~~         ^~~~~~~~~~
Clp_C_Interface.cpp:398:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
     columnNames.reserve(numberColumns);
     ~~~~~~~~~~~         ^~~~~~~~~~~~~
Clp_C_Interface.cpp:468:55: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     strncpy(array, name.c_str(), maxNumberCharacters - 1);
     ~~~~~~~                      ~~~~~~~~~~~~~~~~~~~~^~~
Clp_C_Interface.cpp:671:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          array = static_cast<double*>(malloc(numberRows*sizeof(double)));
                                              ^~~~~~~~~~~
Clp_C_Interface.cpp:672:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(array,ray,numberRows*sizeof(double));
                           ^~~~~~~~~~~
Clp_C_Interface.cpp:688:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          array = static_cast<double*>(malloc(numberColumns*sizeof(double)));
                                              ^~~~~~~~~~~~~~
Clp_C_Interface.cpp:689:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(array,ray,numberColumns*sizeof(double));
                           ^~~~~~~~~~~~~~
24 warnings generated.
In file included from ClpDualRowDantzig.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpDualRowDantzig.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpDualRowDantzig.cpp:7:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpDualRowDantzig.cpp:7:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpDualRowDantzig.cpp:9:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
20 warnings generated.
In file included from ClpDualRowPivot.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpDualRowPivot.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpDualRowPivot.cpp:7:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpDualRowPivot.cpp:7:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
17 warnings generated.
In file included from ClpDualRowSteepest.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpDualRowSteepest.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpDualRowSteepest.cpp:7:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpDualRowSteepest.cpp:7:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpDualRowSteepest.cpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
ClpDualRowSteepest.cpp:255:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (infeas[lastPivotRow])
               ~~  ^~~~~~~~~~~~~~~~~~~~
ClpDualRowSteepest.cpp:267:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (infeas[lastPivotRow])
               ~~  ^~~~~~~~~~~~~~~~~~~~
ClpDualRowSteepest.cpp:273:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (infeas[lastPivotRow])
               ~~  ^~~~~~~~~~~~~~~~~~~~
ClpDualRowSteepest.cpp:646:16: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (!alpha) {
              ~^~~~~
ClpDualRowSteepest.cpp:713:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iRow])
                    ~~  ^~~~~~~~~~~~
ClpDualRowSteepest.cpp:729:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iRow])
                    ~~  ^~~~~~~~~~~~
ClpDualRowSteepest.cpp:735:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iRow])
                    ~~  ^~~~~~~~~~~~
ClpDualRowSteepest.cpp:763:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iRow])
                    ~~  ^~~~~~~~~~~~
ClpDualRowSteepest.cpp:779:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iRow])
                    ~~  ^~~~~~~~~~~~
ClpDualRowSteepest.cpp:785:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iRow])
                    ~~  ^~~~~~~~~~~~
ClpDualRowSteepest.cpp:796:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (infeas[iRow])
          ~~  ^~~~~~~~~~~~
In file included from ClpDualRowSteepest.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpDualRowSteepest.cpp:55:16: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
               ClpDisjointCopyN(rhs.weights_, number, weights_);
               ^
In file included from ClpDualRowSteepest.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpDualRowSteepest.cpp:73:16: note: in instantiation of function template specialization 'ClpDisjointCopyN<int>' requested here
               ClpDisjointCopyN(rhs.dubiousWeights_, number, dubiousWeights_);
               ^
33 warnings generated.
In file included from ClpDummyMatrix.cpp:10:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpDummyMatrix.cpp:10:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpDummyMatrix.cpp:10:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpDummyMatrix.cpp:10:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpDummyMatrix.cpp:12:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
20 warnings generated.
In file included from ClpDynamicExampleMatrix.cpp:9:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpDynamicExampleMatrix.cpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpDynamicExampleMatrix.cpp:12:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpDynamicExampleMatrix.cpp:12:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpDynamicExampleMatrix.cpp:12:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpDynamicExampleMatrix.cpp:104:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(dynamicStatus_, 0, maximumGubColumns_);
     ~~~~~~                    ^~~~~~~~~~~~~~~~~~
ClpDynamicExampleMatrix.cpp:138:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (columnLowerGen_[i]) {
               ~~  ^~~~~~~~~~~~~~~~~~
ClpDynamicExampleMatrix.cpp:162:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(status_,status, numberSets_ * sizeof(char));
                                 ^~~~~~~~~~~ ~
ClpDynamicExampleMatrix.cpp:168:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(status_, 0, numberSets_);
          ~~~~~~             ^~~~~~~~~~~
ClpDynamicExampleMatrix.cpp:175:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(dynamicStatusGen_, 0, numberColumns_); // for clarity
     ~~~~~~                       ^~~~~~~~~~~~~~
In file included from ClpDynamicExampleMatrix.cpp:12:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<int>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpDynamicExampleMatrix.cpp:51:24: note: in instantiation of function template specialization 'ClpCopyOfArray<int>' requested here
     startColumnGen_ = ClpCopyOfArray(rhs.startColumnGen_, numberColumns_ + 1);
                       ^
In file included from ClpDynamicExampleMatrix.cpp:12:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpDynamicExampleMatrix.cpp:54:20: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
     elementGen_ = ClpCopyOfArray(rhs.elementGen_, numberElements);;
                   ^
In file included from ClpDynamicExampleMatrix.cpp:12:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<unsigned char>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpDynamicExampleMatrix.cpp:57:26: note: in instantiation of function template specialization 'ClpCopyOfArray<unsigned char>' requested here
     dynamicStatusGen_ = ClpCopyOfArray(rhs.dynamicStatusGen_, numberColumns_);
                         ^
In file included from ClpDynamicExampleMatrix.cpp:9:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstLess_2<int, double> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpDynamicExampleMatrix.cpp:132:11: note: in instantiation of function template specialization 'CoinSort_2<int, double>' requested here
          CoinSort_2(rowGen_ + startColumnGen_[i], rowGen_ + startColumnGen_[i+1], elementGen_ + startColumnGen_[i]);
          ^
29 warnings generated.
In file included from ClpDynamicMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpDynamicMatrix.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpDynamicMatrix.cpp:96:62: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     status_ = ClpCopyOfArray(rhs.status_, static_cast<int>(2*numberSets_+4*sizeof(int)));
                                                            ~^~~~~~~~~~~~~
ClpDynamicMatrix.cpp:266:62: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          status_ = ClpCopyOfArray(status, static_cast<int>(2*numberSets_+4*sizeof(int)));
                                                            ~^~~~~~~~~~~~~
ClpDynamicMatrix.cpp:270:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          status_ = new unsigned char [2*numberSets_+4*sizeof(int)];
                                       ~^~~~~~~~~~~~~
ClpDynamicMatrix.cpp:271:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(status_, 0, numberSets_);
          ~~~~~~             ^~~~~~~~~~~
ClpDynamicMatrix.cpp:278:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(dynamicStatus_, 0, numberGubColumns_); // for clarity
          ~~~~~~                    ^~~~~~~~~~~~~~~~~
ClpDynamicMatrix.cpp:363:67: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          status_ = ClpCopyOfArray(rhs.status_, static_cast<int>(2*numberSets_+4*sizeof(int)));
                                                                 ~^~~~~~~~~~~~~
ClpDynamicMatrix.cpp:778:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                           if (value) {
                           ~~  ^~~~~
ClpDynamicMatrix.cpp:807:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (b) {
                                   ~~  ^
ClpDynamicMatrix.cpp:1110:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
       memcpy(status_+numberSets_,status_,numberSets_);
       ~~~~~~                             ^~~~~~~~~~~
ClpDynamicMatrix.cpp:1113:23: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
              dynamicStatus_,maximumGubColumns_);
                             ^~~~~~~~~~~~~~~~~~
ClpDynamicMatrix.cpp:1118:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
       memcpy(status_,status_+numberSets_,numberSets_);
       ~~~~~~                             ^~~~~~~~~~~
ClpDynamicMatrix.cpp:1121:8: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
              maximumGubColumns_);
              ^~~~~~~~~~~~~~~~~~
ClpDynamicMatrix.cpp:1605:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpDynamicMatrix.cpp:1620:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (amount) {
     ~~  ^~~~~~
In file included from ClpDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<int>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpDynamicMatrix.cpp:90:24: note: in instantiation of function template specialization 'ClpCopyOfArray<int>' requested here
     backToPivotRow_ = ClpCopyOfArray(rhs.backToPivotRow_, lastDynamic_);
                       ^
In file included from ClpDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpDynamicMatrix.cpp:94:18: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
     lowerSet_ = ClpCopyOfArray(rhs.lowerSet_, numberSets_);
                 ^
In file included from ClpDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<unsigned char>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpDynamicMatrix.cpp:96:16: note: in instantiation of function template specialization 'ClpCopyOfArray<unsigned char>' requested here
     status_ = ClpCopyOfArray(rhs.status_, static_cast<int>(2*numberSets_+4*sizeof(int)));
               ^
In file included from ClpDynamicMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstLess_2<int, double> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpDynamicMatrix.cpp:193:11: note: in instantiation of function template specialization 'CoinSort_2<int, double>' requested here
          CoinSort_2(row_ + startColumn_[i], row_ + startColumn_[i+1], element_ + startColumn_[i]);
          ^
38 warnings generated.
In file included from ClpEventHandler.cpp:8:
In file included from ./ClpEventHandler.hpp:9:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpEventHandler.cpp:8:
In file included from ./ClpEventHandler.hpp:9:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpEventHandler.cpp:8:
In file included from ./ClpEventHandler.hpp:9:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpEventHandler.cpp:8:
In file included from ./ClpEventHandler.hpp:9:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
17 warnings generated.
In file included from ClpFactorization.cpp:7:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpFactorization.cpp:7:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpFactorization.cpp:7:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpFactorization.cpp:7:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpFactorization.cpp:7:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpFactorization.cpp:2805:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(temp, 0, numberRows * sizeof(int));
                          ^~~~~~~~~~ ~
In file included from ClpFactorization.cpp:7:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpFactorization.cpp:2061:21: note: in instantiation of function template specialization 'ClpDisjointCopyN<int>' requested here
                    ClpDisjointCopyN ( coinFactorizationA_->permute(), useNumberRows , coinFactorizationA_->pivotColumn()  );
                    ^
22 warnings generated.
In file included from ClpGubDynamicMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpGubDynamicMatrix.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpGubDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpGubDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpGubDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpGubDynamicMatrix.cpp:207:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(status_, 0, numberSets_);
          ~~~~~~             ^~~~~~~~~~~
ClpGubDynamicMatrix.cpp:215:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(saveStatus_, 0, numberSets_);
     ~~~~~~                 ^~~~~~~~~~~
ClpGubDynamicMatrix.cpp:217:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(savedKeyVariable_, 0, numberSets_ * sizeof(int));
                                  ^~~~~~~~~~~ ~
ClpGubDynamicMatrix.cpp:1044:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(mark, 0, numberColumns);
     ~~~~~~          ^~~~~~~~~~~~~
ClpGubDynamicMatrix.cpp:1055:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(dynamicStatus_, 0, numberGubColumns_); // for clarity
     ~~~~~~                    ^~~~~~~~~~~~~~~~~
ClpGubDynamicMatrix.cpp:1426:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(mark, 0, numberColumns);
     ~~~~~~          ^~~~~~~~~~~~~
ClpGubDynamicMatrix.cpp:1748:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (value) {
                         ~~  ^~~~~
ClpGubDynamicMatrix.cpp:1797:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (b) {
                              ~~  ^
ClpGubDynamicMatrix.cpp:1952:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpGubDynamicMatrix.cpp:1973:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpGubDynamicMatrix.cpp:2087:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
In file included from ClpGubDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<int>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpGubDynamicMatrix.cpp:66:21: note: in instantiation of function template specialization 'ClpCopyOfArray<int>' requested here
     startColumn_ = ClpCopyOfArray(rhs.startColumn_, numberGubColumns_ + 1);
                    ^
In file included from ClpGubDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpGubDynamicMatrix.cpp:69:17: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
     element_ = ClpCopyOfArray(rhs.element_, numberElements);;
                ^
In file included from ClpGubDynamicMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<unsigned char>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpGubDynamicMatrix.cpp:75:23: note: in instantiation of function template specialization 'ClpCopyOfArray<unsigned char>' requested here
     dynamicStatus_ = ClpCopyOfArray(rhs.dynamicStatus_, numberGubColumns_);
                      ^
In file included from ClpGubDynamicMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, double, CoinFirstLess_2<int, double> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpGubDynamicMatrix.cpp:119:11: note: in instantiation of function template specialization 'CoinSort_2<int, double>' requested here
          CoinSort_2(row_ + startColumn_[i], row_ + startColumn_[i+1], element_ + startColumn_[i]);
          ^
35 warnings generated.
In file included from ClpGubMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpGubMatrix.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpGubMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpGubMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpGubMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpGubMatrix.cpp:234:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(status_, 0, numberSets_);
          ~~~~~~             ^~~~~~~~~~~
ClpGubMatrix.cpp:242:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(saveStatus_, 0, numberSets_);
     ~~~~~~                 ^~~~~~~~~~~
ClpGubMatrix.cpp:244:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(savedKeyVariable_, 0, numberSets_ * sizeof(int));
                                  ^~~~~~~~~~~ ~
ClpGubMatrix.cpp:541:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     if (numberColumns * sizeof(double) > 1000000) {
         ^~~~~~~~~~~~~ ~
ClpGubMatrix.cpp:839:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpGubMatrix.cpp:864:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpGubMatrix.cpp:950:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (!keyValue) {
                             ~^~~~~~~~
ClpGubMatrix.cpp:1247:41: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (!array[lastIndex])
                                       ~^~~~~~~~~~~~~~~~
ClpGubMatrix.cpp:1270:41: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (!array[lastIndex])
                                       ~^~~~~~~~~~~~~~~~
ClpGubMatrix.cpp:2272:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpGubMatrix.cpp:2392:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpGubMatrix.cpp:2506:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (costChange) {
               ~~  ^~~~~~~~~~
ClpGubMatrix.cpp:2527:36: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (!newValue)
                                  ~^~~~~~~~
ClpGubMatrix.cpp:2536:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (!newValue)
                             ~^~~~~~~~
ClpGubMatrix.cpp:2555:41: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (!newValue)
                                       ~^~~~~~~~
ClpGubMatrix.cpp:3061:20: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
               if (columnLower[j] && columnLower[j] > -1.0e20)
                   ^~~~~~~~~~~~~~ ~~
ClpGubMatrix.cpp:3063:20: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
               if (columnUpper[j] && columnUpper[j] < 1.0e20)
                   ^~~~~~~~~~~~~~ ~~
ClpGubMatrix.cpp:3344:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(mark, 0, numberColumns);
     ~~~~~~          ^~~~~~~~~~~~~
ClpGubMatrix.cpp:3605:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (b)
                         ~~  ^
ClpGubMatrix.cpp:3688:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (oldB)
                              ~~  ^~~~
ClpGubMatrix.cpp:3723:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (oldB)
                         ~~  ^~~~
ClpGubMatrix.cpp:3757:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (oldB)
                              ~~  ^~~~
ClpGubMatrix.cpp:3937:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (newB)
                              ~~  ^~~~
ClpGubMatrix.cpp:3967:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (newB)
                         ~~  ^~~~
In file included from ClpGubMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<int>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpGubMatrix.cpp:76:15: note: in instantiation of function template specialization 'ClpCopyOfArray<int>' requested here
     start_ = ClpCopyOfArray(rhs.start_, numberSets_);
              ^
In file included from ClpGubMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpGubMatrix.cpp:78:15: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
     lower_ = ClpCopyOfArray(rhs.lower_, numberSets_);
              ^
In file included from ClpGubMatrix.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<unsigned char>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpGubMatrix.cpp:80:16: note: in instantiation of function template specialization 'ClpCopyOfArray<unsigned char>' requested here
     status_ = ClpCopyOfArray(rhs.status_, numberSets_);
               ^
47 warnings generated.
In file included from ClpHelperFunctions.cpp:16:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
6 warnings generated.
In file included from ClpInterior.cpp:11:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpInterior.cpp:12:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpInterior.cpp:12:
In file included from ./ClpInterior.hpp:20:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpInterior.cpp:12:
In file included from ./ClpInterior.hpp:22:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpInterior.cpp:541:10: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
     if (direction)
     ~~  ^~~~~~~~~
ClpInterior.cpp:546:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(cost_ + numberColumns_, 0, numberRows_ * sizeof(CoinWorkDouble));
                                       ^~~~~~~~~~~ ~
ClpInterior.cpp:675:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(status_, 0, numberRows_ + numberColumns_);
     ~~~~~~             ~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ClpInterior.cpp:779:22: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          } else if (value) {
                 ~~  ^~~~~
ClpInterior.cpp:791:20: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpInterior.cpp:800:39: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          if (lower_[i] > -1.0e100 && lower_[i]) {
                                   ~~ ^~~~~~~~~
ClpInterior.cpp:807:38: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          if (upper_[i] < 1.0e100 && upper_[i]) {
                                  ~~ ^~~~~~~~~
ClpInterior.cpp:815:10: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
     if (largestBound)
     ~~  ^~~~~~~~~~~~
ClpInterior.cpp:831:22: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          } else if (value) {
                 ~~  ^~~~~
ClpInterior.cpp:843:20: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpInterior.cpp:852:39: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          if (lower_[i] > -1.0e100 && lower_[i]) {
                                   ~~ ^~~~~~~~~
ClpInterior.cpp:859:38: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          if (upper_[i] < 1.0e100 && upper_[i]) {
                                  ~~ ^~~~~~~~~
ClpInterior.cpp:884:10: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
     if (largestBound)
     ~~  ^~~~~~~~~~~~
In file included from ClpInterior.cpp:12:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpInterior.cpp:369:15: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
     lower_ = ClpCopyOfArray(rhs.lower_, numberColumns_ + numberRows_);
              ^
31 warnings generated.
In file included from ClpLinearObjective.cpp:7:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpLinearObjective.cpp:7:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpLinearObjective.cpp:8:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpLinearObjective.cpp:8:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpLinearObjective.cpp:8:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpLinearObjective.cpp:140:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
In file included from ClpLinearObjective.cpp:7:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:221:36: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpLinearObjective.cpp:37:19: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
     objective_ = CoinCopyOfArray(objective, numberColumns_, 0.0);
                  ^
In file included from ClpLinearObjective.cpp:7:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpLinearObjective.cpp:47:19: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
     objective_ = CoinCopyOfArray(rhs.objective_, numberColumns_);
                  ^
In file included from ClpLinearObjective.cpp:8:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpLinearObjective.cpp:161:6: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
     ClpDisjointCopyN(model->costRegion(1), numberColumns, dj);
     ^
24 warnings generated.
In file included from ClpMatrixBase.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpMatrixBase.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpMatrixBase.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpMatrixBase.cpp:13:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpMatrixBase.cpp:13:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpMatrixBase.cpp:509:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (!scaleFactor)
         ~^~~~~~~~~~~
In file included from ClpMatrixBase.cpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpMatrixBase.cpp:64:24: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
          rhsOffset_ = ClpCopyOfArray(rhs.rhsOffset_, numberRows);
                       ^
22 warnings generated.
In file included from ClpMessage.cpp:7:
In file included from ./ClpMessage.hpp:15:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
4 warnings generated.
In file included from ClpModel.cpp:40:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpModel.cpp:42:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpModel.cpp:42:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpModel.cpp:43:
In file included from ./ClpEventHandler.hpp:9:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpModel.cpp:51:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpModel.cpp:58:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModel.hpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
ClpModel.cpp:262:24: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
     int saveOptions = specialOptions_;
         ~~~~~~~~~~~   ^~~~~~~~~~~~~~~
ClpModel.cpp:264:24: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     specialOptions_ = saveOptions;
                     ~ ^~~~~~~~~~~
ClpModel.cpp:802:35: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               specialOptions_ &= ~65536;
                               ~~ ^~~~~~
ClpModel.cpp:998:46: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     specialOptions_ = rhs.specialOptions_ & ~65536;
                                           ~ ^~~~~~
ClpModel.cpp:1332:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memset(tempC, 3, newNumberColumns * sizeof(unsigned char));
                                     ^~~~~~~~~~~~~~~~ ~
ClpModel.cpp:1333:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memset(tempR, 1, newNumberRows * sizeof(unsigned char));
                                     ^~~~~~~~~~~~~ ~
ClpModel.cpp:1340:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                            newNumberRows);
                            ^~~~~~~~~~~~~
ClpModel.cpp:1342:74: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    memset(status_ + numberColumns_, 3, newNumberColumns - numberColumns_);
                    ~~~~~~                              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ClpModel.cpp:1344:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                            newNumberRows);
                            ^~~~~~~~~~~~~
ClpModel.cpp:1358:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               rowNames_.resize(newNumberRows);
               ~~~~~~~~~        ^~~~~~~~~~~~~
ClpModel.cpp:1363:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    rowNames_[iRow] = name;
                    ~~~~~~~~~ ^~~~
ClpModel.cpp:1369:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               columnNames_.resize(newNumberColumns);
               ~~~~~~~~~~~~        ^~~~~~~~~~~~~~~~
ClpModel.cpp:1375:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    columnNames_[iColumn] = name;
                    ~~~~~~~~~~~~ ^~~~~~~
ClpModel.cpp:1415:23: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     whatsChanged_ &= ~(1 + 2 + 4 + 8 + 16 + 32); // all except columns changed
                   ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpModel.cpp:1490:32: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    rowNames_[k++] = rowNames_[i];
                    ~~~~~~~~~ ~^~
ClpModel.cpp:1490:48: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    rowNames_[k++] = rowNames_[i];
                                     ~~~~~~~~~ ^
ClpModel.cpp:1518:23: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     whatsChanged_ &= ~(1 + 2 + 4 + 8 + 64 + 128 + 256); // all except rows changed
                   ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpModel.cpp:1576:35: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    columnNames_[k++] = columnNames_[i];
                    ~~~~~~~~~~~~ ~^~
ClpModel.cpp:1576:54: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    columnNames_[k++] = columnNames_[i];
                                        ~~~~~~~~~~~~ ^
ClpModel.cpp:1601:22: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    whatsChanged_ &= ~511; // all changed
                  ~~ ^~~~
ClpModel.cpp:1606:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(backRows,0,numberTotal*sizeof(int));
                      ^~~~~~~~~~~~
ClpModel.cpp:1635:17: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          columnNames_[iColumn] = columnNames_[i];
          ~~~~~~~~~~~~ ^~~~~~~
ClpModel.cpp:1635:41: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          columnNames_[iColumn] = columnNames_[i];
                                  ~~~~~~~~~~~~ ^
ClpModel.cpp:1666:14: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          rowNames_[iRow] = rowNames_[i];
          ~~~~~~~~~ ^~~~
ClpModel.cpp:1666:32: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          rowNames_[iRow] = rowNames_[i];
                            ~~~~~~~~~ ^
ClpModel.cpp:1764:28: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ &= ~(1 + 2 + 8 + 16 + 32); // all except columns changed
                        ~~ ^~~~~~~~~~~~~~~~~~~~~~
ClpModel.cpp:1806:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               rowNames_.resize(numberRows_);
               ~~~~~~~~~        ^~~~~~~~~~~
ClpModel.cpp:1857:23: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     whatsChanged_ &= ~(1 + 2 + 8 + 16 + 32); // all except columns changed
                   ~~ ^~~~~~~~~~~~~~~~~~~~~~
ClpModel.cpp:1900:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          rowNames_.resize(numberRows_);
          ~~~~~~~~~        ^~~~~~~~~~~
ClpModel.cpp:1927:30: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                         if (elements[i]) {
                         ~~  ^~~~~~~~~~~
ClpModel.cpp:2238:28: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ &= ~(1 + 2 + 4 + 64 + 128 + 256); // all except rows changed
                        ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpModel.cpp:2290:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               columnNames_.resize(numberColumns_);
               ~~~~~~~~~~~~        ^~~~~~~~~~~~~~
ClpModel.cpp:2340:23: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     whatsChanged_ &= ~(1 + 2 + 4 + 64 + 128 + 256); // all except rows changed
                   ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpModel.cpp:2393:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          columnNames_.resize(numberColumns_);
          ~~~~~~~~~~~~        ^~~~~~~~~~~~~~
ClpModel.cpp:2423:30: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                         if (elements[i]) {
                         ~~  ^~~~~~~~~~~
ClpModel.cpp:2780:21: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
         memcpy(array,ray_,numberRows_*sizeof(double));
                           ^~~~~~~~~~~~
ClpModel.cpp:2781:30: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
         memset(array+numberRows_,0,numberColumns_*sizeof(double));
                                    ^~~~~~~~~~~~~~~
ClpModel.cpp:2943:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               rowNames_.reserve(numberRows_);
               ~~~~~~~~~         ^~~~~~~~~~~
ClpModel.cpp:2951:37: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               columnNames_.reserve(numberColumns_);
               ~~~~~~~~~~~~         ^~~~~~~~~~~~~~
ClpModel.cpp:3027:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               rowNames_.reserve(numberRows_);
               ~~~~~~~~~         ^~~~~~~~~~~
ClpModel.cpp:3035:37: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               columnNames_.reserve(numberColumns_);
               ~~~~~~~~~~~~         ^~~~~~~~~~~~~~
ClpModel.cpp:3360:29: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          rowNames_.reserve(numberRows_);
          ~~~~~~~~~         ^~~~~~~~~~~
ClpModel.cpp:3362:51: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               rowNames_.push_back(rhs->rowNames_[whichRow[iRow]]);
                                   ~~~            ^~~~~~~~~~~~~~
ClpModel.cpp:3363:91: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               maxLength = CoinMax(maxLength, static_cast<unsigned int> (strlen(rowNames_[iRow].c_str())));
                                                                                ~~~~~~~~~ ^~~~
ClpModel.cpp:3366:32: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          columnNames_.reserve(numberColumns_);
          ~~~~~~~~~~~~         ^~~~~~~~~~~~~~
ClpModel.cpp:3368:57: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               columnNames_.push_back(rhs->columnNames_[whichColumn[iColumn]]);
                                      ~~~               ^~~~~~~~~~~~~~~~~~~~
ClpModel.cpp:3369:94: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               maxLength = CoinMax(maxLength, static_cast<unsigned int> (strlen(columnNames_[iColumn].c_str())));
                                                                                ~~~~~~~~~~~~ ^~~~~~~
ClpModel.cpp:3448:24: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
     rowNames_.reserve(numberRows_);
     ~~~~~~~~~         ^~~~~~~~~~~
ClpModel.cpp:3450:40: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          rowNames_.push_back(rowNames[iRow]);
                              ~~~~~~~~ ^~~~
ClpModel.cpp:3451:86: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          maxLength = CoinMax(maxLength, static_cast<unsigned int> (strlen(rowNames_[iRow].c_str())));
                                                                           ~~~~~~~~~ ^~~~
ClpModel.cpp:3454:27: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
     columnNames_.reserve(numberColumns_);
     ~~~~~~~~~~~~         ^~~~~~~~~~~~~~
ClpModel.cpp:3456:46: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          columnNames_.push_back(columnNames[iColumn]);
                                 ~~~~~~~~~~~ ^~~~~~~
ClpModel.cpp:3457:89: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          maxLength = CoinMax(maxLength, static_cast<unsigned int> (strlen(columnNames_[iColumn].c_str())));
                                                                           ~~~~~~~~~~~~ ^~~~~~~
ClpModel.cpp:3472:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
ClpModel.cpp:3489:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     unsigned int maxLength = lengthNames_;
                  ~~~~~~~~~   ^~~~~~~~~~~~
ClpModel.cpp:3492:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          rowNames_.resize(iRow + 1);
          ~~~~~~~~~        ~~~~~^~~
ClpModel.cpp:3493:16: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
     rowNames_[iRow] = name;
     ~~~~~~~~~ ^~~~
ClpModel.cpp:3509:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
ClpModel.cpp:3526:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     unsigned int maxLength = lengthNames_;
                  ~~~~~~~~~   ^~~~~~~~~~~~
ClpModel.cpp:3529:39: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          columnNames_.resize(iColumn + 1);
          ~~~~~~~~~~~~        ~~~~~~~~^~~
ClpModel.cpp:3530:19: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
     columnNames_[iColumn] = name;
     ~~~~~~~~~~~~ ^~~~~~~
ClpModel.cpp:3544:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     unsigned int maxLength = lengthNames_;
                  ~~~~~~~~~   ^~~~~~~~~~~~
ClpModel.cpp:3547:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          rowNames_.resize(numberRows_);
          ~~~~~~~~~        ^~~~~~~~~~~
ClpModel.cpp:3550:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          rowNames_[iRow] = rowNames[iRow-first];
          ~~~~~~~~~ ^~~~
ClpModel.cpp:3550:42: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          rowNames_[iRow] = rowNames[iRow-first];
                            ~~~~~~~~ ~~~~^~~~~~
ClpModel.cpp:3551:90: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          maxLength = CoinMax(maxLength, static_cast<unsigned int> (strlen(rowNames_[iRow-first].c_str())));
                                                                           ~~~~~~~~~ ~~~~^~~~~~
ClpModel.cpp:3565:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     unsigned int maxLength = lengthNames_;
                  ~~~~~~~~~   ^~~~~~~~~~~~
ClpModel.cpp:3568:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          columnNames_.resize(numberColumns_);
          ~~~~~~~~~~~~        ^~~~~~~~~~~~~~
ClpModel.cpp:3571:24: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          columnNames_[iColumn] = columnNames[iColumn-first];
          ~~~~~~~~~~~~ ^~~~~~~
ClpModel.cpp:3571:54: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          columnNames_[iColumn] = columnNames[iColumn-first];
                                  ~~~~~~~~~~~ ~~~~~~~^~~~~~
ClpModel.cpp:3572:96: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          maxLength = CoinMax(maxLength, static_cast<unsigned int> (strlen(columnNames_[iColumn-first].c_str())));
                                                                           ~~~~~~~~~~~~ ~~~~~~~^~~~~~
ClpModel.cpp:3586:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     unsigned int maxLength = lengthNames_;
                  ~~~~~~~~~   ^~~~~~~~~~~~
ClpModel.cpp:3589:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          rowNames_.resize(numberRows_);
          ~~~~~~~~~        ^~~~~~~~~~~
ClpModel.cpp:3593:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               rowNames_[iRow] = rowNames[iRow-first];
               ~~~~~~~~~ ^~~~
ClpModel.cpp:3599:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               rowNames_[iRow] = name;
               ~~~~~~~~~ ^~~~
ClpModel.cpp:3614:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     unsigned int maxLength = lengthNames_;
                  ~~~~~~~~~   ^~~~~~~~~~~~
ClpModel.cpp:3617:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          columnNames_.resize(numberColumns_);
          ~~~~~~~~~~~~        ^~~~~~~~~~~~~~
ClpModel.cpp:3621:29: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               columnNames_[iColumn] = columnNames[iColumn-first];
               ~~~~~~~~~~~~ ^~~~~~~
ClpModel.cpp:3627:29: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               columnNames_[iColumn] = name;
               ~~~~~~~~~~~~ ^~~~~~~
ClpModel.cpp:3711:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (!objValue) {
                             ~^~~~~~~~
ClpModel.cpp:3746:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (objValue) {
                         ~~  ^~~~~~~~
ClpModel.cpp:3946:28: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ &= ~(2 + 4 + 8);
                        ~~ ^~~~~~~~~~~~
ClpModel.cpp:4195:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     specialOptions_ &= ~65536;
                     ~~ ^~~~~~
ClpModel.cpp:4324:34: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(columnCount, 0, numberColumns_);
          ~~~~~~                 ^~~~~~~~~~~~~~
ClpModel.cpp:4368:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               memset(currentColumnCount, 0, numberColumns_);
               ~~~~~~                        ^~~~~~~~~~~~~~
In file included from ClpModel.cpp:49:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from ClpModel.cpp:49:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
In file included from ClpModel.cpp:40:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpModel.cpp:805:31: note: in instantiation of function template specialization 'CoinCopyOfArray<char>' requested here
               integerType_ = CoinCopyOfArray(rhs.integerType_, numberColumns_);
                              ^
In file included from ClpModel.cpp:42:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpModel.cpp:848:21: note: in instantiation of function template specialization 'ClpDisjointCopyN<char>' requested here
                    ClpDisjointCopyN(rhs.integerType_, numberColumns_, integerType_);
                    ^
In file included from ClpModel.cpp:42:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpModel.cpp:853:21: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
                    ClpDisjointCopyN ( rhs.rowActivity_, numberRows_ ,
                    ^
In file included from ClpModel.cpp:42:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpModel.cpp:880:16: note: in instantiation of function template specialization 'ClpDisjointCopyN<unsigned char>' requested here
               ClpDisjointCopyN( rhs.status_, numberColumns_ + numberRows_, status_);
               ^
113 warnings generated.
In file included from ClpNetworkBasis.cpp:8:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpNetworkBasis.cpp:9:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpNetworkBasis.cpp:9:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpNetworkBasis.cpp:9:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpNetworkBasis.cpp:11:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
ClpNetworkBasis.cpp:713:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (pivotValue) {
                              ~~  ^~~~~~~~~~
ClpNetworkBasis.cpp:732:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (pivotValue) {
                              ~~  ^~~~~~~~~~
ClpNetworkBasis.cpp:830:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (pivotValue) {
                         ~~  ^~~~~~~~~~
ClpNetworkBasis.cpp:878:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
ClpNetworkBasis.cpp:904:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (pivotValue) {
               ~~  ^~~~~~~~~~
ClpNetworkBasis.cpp:938:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
ClpNetworkBasis.cpp:983:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (pivotValue)
               ~~  ^~~~~~~~~~
ClpNetworkBasis.cpp:1073:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (pivotValue) {
                    ~~  ^~~~~~~~~~
ClpNetworkBasis.cpp:1156:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (pivotValue)
                    ~~  ^~~~~~~~~~
29 warnings generated.
In file included from ClpNetworkMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpNetworkMatrix.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpNetworkMatrix.cpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpNetworkMatrix.cpp:14:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpNetworkMatrix.cpp:14:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpNetworkMatrix.cpp:233:23: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memset(tempP, 0, numberRows_ * sizeof(CoinBigIndex));
                      ^~~~~~~~~~~ ~
ClpNetworkMatrix.cpp:234:23: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memset(tempN, 0, numberRows_ * sizeof(CoinBigIndex));
                      ^~~~~~~~~~~ ~
ClpNetworkMatrix.cpp:286:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpNetworkMatrix.cpp:297:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpNetworkMatrix.cpp:387:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     if (numberColumns * sizeof(double) > 1000000) {
         ^~~~~~~~~~~~~ ~
ClpNetworkMatrix.cpp:737:23: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(which, 0, numberColumns_);
     ~~~~~~           ^~~~~~~~~~~~~~
ClpNetworkMatrix.cpp:782:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(which, 0, numberRows_ * sizeof(int));
                      ^~~~~~~~~~~ ~
In file included from ClpNetworkMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from ClpNetworkMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
In file included from ClpNetworkMatrix.cpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpNetworkMatrix.cpp:84:24: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
          rhsOffset_ = ClpCopyOfArray(rhs.rhsOffset_, numberRows);
                       ^
In file included from ClpNetworkMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpNetworkMatrix.cpp:684:27: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
          int * indices = CoinCopyOfArray(indices_, 2 * numberColumns_);
                          ^
31 warnings generated.
In file included from ClpNonLinearCost.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpNonLinearCost.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpNonLinearCost.cpp:12:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpNonLinearCost.cpp:12:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpNonLinearCost.cpp:12:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpNonLinearCost.cpp:88:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (cost[iSequence]) {
          ~~  ^~~~~~~~~~~~~~~
ClpNonLinearCost.cpp:122:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(offset_, 0, numberTotal * sizeof(int));
                             ^~~~~~~~~~~ ~
ClpNonLinearCost.cpp:149:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(infeasible_, 0, ((put + 31) >> 5)*sizeof(unsigned int));
                                  ~~~~~~~~~~~^~~~ ~
ClpNonLinearCost.cpp:285:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(cost + numberColumns_, 0, numberRows_ * sizeof(double));
                                      ^~~~~~~~~~~ ~
ClpNonLinearCost.cpp:325:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(offset_, 0, numberTotal * sizeof(int));
                        ^~~~~~~~~~~ ~
ClpNonLinearCost.cpp:367:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(infeasible_, 0, ((put + 31) >> 5)*sizeof(unsigned int));
                             ~~~~~~~~~~~^~~~ ~
ClpNonLinearCost.cpp:1945:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(cost_, 0, n * sizeof(double));
                           ^ ~
In file included from ClpNonLinearCost.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpNonLinearCost.cpp:497:25: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
               bound_ = CoinCopyOfArray(rhs.bound_, numberTotal);
                        ^
In file included from ClpNonLinearCost.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpNonLinearCost.cpp:499:26: note: in instantiation of function template specialization 'CoinCopyOfArray<unsigned char>' requested here
               status_ = CoinCopyOfArray(rhs.status_, numberTotal);
                         ^
29 warnings generated.
In file included from ClpNode.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpNode.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpNode.cpp:7:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpNode.cpp:7:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpNode.cpp:9:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
ClpNode.cpp:152:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               primalSolution_ = new double [maximumTotal*sizeof(double)];
                                             ^~~~~~~~~~~~~
ClpNode.cpp:153:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               dualSolution_ = new double [maximumTotal*sizeof(double)];
                                           ^~~~~~~~~~~~~
ClpNode.cpp:1133:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (!value)
         ~^~~~~
In file included from ClpNode.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:205:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,copySize*sizeof(T));
                                   ^~~~~~~~~
ClpNode.cpp:100:21: note: in instantiation of function template specialization 'CoinCopyOfArrayPartial<unsigned char>' requested here
          status_ = CoinCopyOfArrayPartial(model->statusArray(), maximumTotal, numberTotal);
                    ^
In file included from ClpNode.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:205:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,copySize*sizeof(T));
                                   ^~~~~~~~~
ClpNode.cpp:101:29: note: in instantiation of function template specialization 'CoinCopyOfArrayPartial<double>' requested here
          primalSolution_ = CoinCopyOfArrayPartial(model->solutionRegion(), maximumTotal, numberTotal);
                            ^
In file included from ClpNode.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:205:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,copySize*sizeof(T));
                                   ^~~~~~~~~
ClpNode.cpp:103:29: note: in instantiation of function template specialization 'CoinCopyOfArrayPartial<int>' requested here
          pivotVariables_ = CoinCopyOfArrayPartial(model->pivotVariable(), maximumRows_, numberRows);
                            ^
In file included from ClpNode.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpNode.cpp:925:20: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
     downPseudo_ = CoinCopyOfArray(down, number);
                   ^
In file included from ClpNode.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpNode.cpp:927:18: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
     priority_ = CoinCopyOfArray(priority, number);
                 ^
28 warnings generated.
In file included from ClpObjective.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpObjective.cpp:7:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpObjective.cpp:7:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpObjective.cpp:7:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
17 warnings generated.
In file included from ClpPackedMatrix.cpp:11:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpPackedMatrix.cpp:11:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpPackedMatrix.cpp:15:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpPackedMatrix.cpp:15:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpPackedMatrix.cpp:15:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpPackedMatrix.cpp:291:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpPackedMatrix.cpp:306:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpPackedMatrix.cpp:385:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpPackedMatrix.cpp:401:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpPackedMatrix.cpp:481:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value)
                    ~~  ^~~~~
ClpPackedMatrix.cpp:567:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value)
               ~~  ^~~~~
ClpPackedMatrix.cpp:616:10: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     if (numberActiveColumns_ * sizeof(double) > 1000000) {
         ^~~~~~~~~~~~~~~~~~~~ ~
ClpPackedMatrix.cpp:1302:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (array[iColumn])
                    ~~  ^~~~~~~~~~~~~~
ClpPackedMatrix.cpp:1734:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
ClpPackedMatrix.cpp:2027:10: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     if (numberActiveColumns_ * sizeof(double) > 1000000) {
         ^~~~~~~~~~~~~~~~~~~~ ~
ClpPackedMatrix.cpp:2077:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (!scaleFactor)
         ~^~~~~~~~~~~
ClpPackedMatrix.cpp:2364:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (!scaleFactor)
         ~^~~~~~~~~~~
ClpPackedMatrix.cpp:2526:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (value) {
                         ~~  ^~~~~
ClpPackedMatrix.cpp:2546:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (value) {
                         ~~  ^~~~~
ClpPackedMatrix.cpp:3656:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          memset(usedRow, 0, numberRows);
          ~~~~~~             ^~~~~~~~~~
ClpPackedMatrix.cpp:3969:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpPackedMatrix.cpp:3983:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpPackedMatrix.cpp:4140:26: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (!value)
                        ~^~~~~
ClpPackedMatrix.cpp:4184:26: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (!value)
                        ~^~~~~
ClpPackedMatrix.cpp:4336:13: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (inValue) {
               ~~  ^~~~~~~
ClpPackedMatrix.cpp:4338:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (!outValue)
                     ~^~~~~~~~
ClpPackedMatrix.cpp:4898:63: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (!matrix_->isColOrdered() || numberOther >= 0 || matrix_->getExtraGap()) {
                                                           ~~ ^~~~~~~~~~~~~~~~~~~~~~
ClpPackedMatrix.cpp:4987:26: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                    if (!elementByColumn[j])
                        ~^~~~~~~~~~~~~~~~~~
ClpPackedMatrix.cpp:5125:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(count_, 0, nRow * sizeof(unsigned short));
                       ^~~~ ~
ClpPackedMatrix.cpp:5151:36: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                              if (!element[j]) {
                                  ~^~~~~~~~~~
ClpPackedMatrix.cpp:5896:20: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
               if(!elementByColumn[j])
                  ~^~~~~~~~~~~~~~~~~~
ClpPackedMatrix.cpp:5933:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(block_, 0, numberBlocks_ * sizeof(blockStruct));
                       ^~~~~~~~~~~~~ ~
ClpPackedMatrix.cpp:5967:20: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
               if(!elementByColumn[j])
                  ~^~~~~~~~~~~~~~~~~~
ClpPackedMatrix.cpp:5982:29: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if(value) {
                         ~~ ^~~~~
ClpPackedMatrix.cpp:5993:29: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if(value) {
                         ~~ ^~~~~
ClpPackedMatrix.cpp:6176:20: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
               if(!elementByColumn[j])
                  ~^~~~~~~~~~~~~~~~~~
ClpPackedMatrix.cpp:6423:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (!scaleFactor)
         ~^~~~~~~~~~~
In file included from ClpPackedMatrix.cpp:15:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpPackedMatrix.cpp:87:24: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
          rhsOffset_ = ClpCopyOfArray(rhs.rhsOffset_, numberRows);
                       ^
In file included from ClpPackedMatrix.cpp:11:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpPackedMatrix.cpp:5184:21: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
          offset_ = CoinCopyOfArray(rhs.offset_, numberBlocks_ + 1);
                    ^
In file included from ClpPackedMatrix.cpp:11:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpPackedMatrix.cpp:5186:20: note: in instantiation of function template specialization 'CoinCopyOfArray<unsigned short>' requested here
          count_ = CoinCopyOfArray(rhs.count_, nRow);
                   ^
In file included from ClpPackedMatrix.cpp:11:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpPackedMatrix.cpp:5191:19: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
          work_ = CoinCopyOfArray(rhs.work_, sizeWork);
                  ^
In file included from ClpPackedMatrix.cpp:11:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpPackedMatrix.cpp:6032:20: note: in instantiation of function template specialization 'CoinCopyOfArray<blockStruct>' requested here
          block_ = CoinCopyOfArray(rhs.block_, numberBlocks_);
                   ^
57 warnings generated.
In file included from ClpPlusMinusOneMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpPlusMinusOneMatrix.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpPlusMinusOneMatrix.cpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpPlusMinusOneMatrix.cpp:14:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpPlusMinusOneMatrix.cpp:14:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpPlusMinusOneMatrix.cpp:378:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(tempP, 0, numberMinor * sizeof(CoinBigIndex));
                      ^~~~~~~~~~~ ~
ClpPlusMinusOneMatrix.cpp:379:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(tempN, 0, numberMinor * sizeof(CoinBigIndex));
                      ^~~~~~~~~~~ ~
ClpPlusMinusOneMatrix.cpp:440:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
ClpPlusMinusOneMatrix.cpp:523:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     if (numberColumns * sizeof(double) > 1000000) {
         ^~~~~~~~~~~~~ ~
ClpPlusMinusOneMatrix.cpp:819:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value2) {
                    ~~  ^~~~~~
ClpPlusMinusOneMatrix.cpp:830:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value2) {
                    ~~  ^~~~~~
ClpPlusMinusOneMatrix.cpp:1110:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(which, 0, numberColumns_ * sizeof(int));
                      ^~~~~~~~~~~~~~ ~
ClpPlusMinusOneMatrix.cpp:1171:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(which, 0, numberRows_ * sizeof(int));
                      ^~~~~~~~~~~ ~
ClpPlusMinusOneMatrix.cpp:1384:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(countPositive, 0, numberColumns_ * sizeof(int));
                              ^~~~~~~~~~~~~~ ~
ClpPlusMinusOneMatrix.cpp:1386:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(countNegative, 0, numberColumns_ * sizeof(int));
                              ^~~~~~~~~~~~~~ ~
ClpPlusMinusOneMatrix.cpp:1658:10: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     if (numberColumns_ * sizeof(double) > 1000000) {
         ^~~~~~~~~~~~~~ ~
ClpPlusMinusOneMatrix.cpp:1700:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (!scaleFactor)
         ~^~~~~~~~~~~
ClpPlusMinusOneMatrix.cpp:1838:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (!scaleFactor)
         ~^~~~~~~~~~~
In file included from ClpPlusMinusOneMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from ClpPlusMinusOneMatrix.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
In file included from ClpPlusMinusOneMatrix.cpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpPlusMinusOneMatrix.cpp:66:24: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
          rhsOffset_ = ClpCopyOfArray(rhs.rhsOffset_, numberRows);
                       ^
In file included from ClpPlusMinusOneMatrix.cpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<int>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpPlusMinusOneMatrix.cpp:86:23: note: in instantiation of function template specialization 'ClpCopyOfArray<int>' requested here
     startPositive_ = ClpCopyOfArray(startPositive, numberMajor + 1);
                      ^
37 warnings generated.
In file included from ClpPredictorCorrector.cpp:15:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpPredictorCorrector.cpp:16:
In file included from ./ClpPredictorCorrector.hpp:14:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpPredictorCorrector.cpp:16:
In file included from ./ClpPredictorCorrector.hpp:14:
In file included from ./ClpInterior.hpp:20:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpPredictorCorrector.cpp:16:
In file included from ./ClpPredictorCorrector.hpp:14:
In file included from ./ClpInterior.hpp:22:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpPredictorCorrector.cpp:1926:11: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
     if (!maximumObjective) {
         ~^~~~~~~~~~~~~~~~
ClpPredictorCorrector.cpp:2524:15: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
          if (delta_ || dualR_) {
              ^~~~~~ ~~
ClpPredictorCorrector.cpp:3615:10: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
     if (quadraticOffset) {
     ~~  ^~~~~~~~~~~~~~~
ClpPredictorCorrector.cpp:3626:10: warning: implicit conversion turns floating-point number into integer: 'CoinWorkDouble' (aka 'double') to 'bool' [-Wfloat-conversion]
     if (maximumDJInfeasibility) {
     ~~  ^~~~~~~~~~~~~~~~~~~~~~
In file included from ClpPredictorCorrector.cpp:16:
In file included from ./ClpPredictorCorrector.hpp:14:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpPredictorCorrector.cpp:3793:33: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
     CoinWorkDouble * dualNew = ClpCopyOfArray(dualArray, numberRows_);
                                ^
22 warnings generated.
In file included from ClpPdco.cpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDenseVector.hpp:17:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpPdco.cpp:20:
In file included from ./ClpPdco.hpp:14:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpPdco.cpp:20:
In file included from ./ClpPdco.hpp:14:
In file included from ./ClpInterior.hpp:20:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpPdco.cpp:20:
In file included from ./ClpPdco.hpp:14:
In file included from ./ClpInterior.hpp:22:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpPdco.cpp:632:39: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                      show, info, dy , &istop, &itncg, &outfo, precon, Pr);
                                      ^~~~
ClpPdco.cpp:994:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     int *low_ = (int *)malloc(numberColumns_ * sizeof(int)) ;
                               ^~~~~~~~~~~~~~ ~
19 warnings generated.
In file included from ClpPdcoBase.cpp:10:
In file included from ./ClpPdcoBase.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDenseVector.hpp:17:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpPdcoBase.cpp:11:
In file included from ./ClpPdco.hpp:14:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpPdcoBase.cpp:11:
In file included from ./ClpPdco.hpp:14:
In file included from ./ClpInterior.hpp:20:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpPdcoBase.cpp:11:
In file included from ./ClpPdco.hpp:14:
In file included from ./ClpInterior.hpp:22:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
17 warnings generated.
In file included from ClpLsqr.cpp:6:
In file included from ./ClpLsqr.hpp:9:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDenseVector.hpp:17:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpLsqr.cpp:6:
In file included from ./ClpLsqr.hpp:11:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpLsqr.cpp:6:
In file included from ./ClpLsqr.hpp:11:
In file included from ./ClpInterior.hpp:20:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpLsqr.cpp:6:
In file included from ./ClpLsqr.hpp:11:
In file included from ./ClpInterior.hpp:22:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpLsqr.cpp:6:
In file included from ./ClpLsqr.hpp:11:
In file included from ./ClpInterior.hpp:20:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpLsqr.cpp:376:15: note: in instantiation of function template specialization 'ClpCopyOfArray<double>' requested here
     diag1_ = ClpCopyOfArray(rhs.diag1_, nrows_);
              ^
18 warnings generated.
In file included from ClpPresolve.cpp:14:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpPresolve.cpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpPresolve.cpp:22:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpPresolve.cpp:22:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpPresolve.cpp:28:
./ClpPresolve.hpp:183:63: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                            ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpPresolve.hpp:183:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                               ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:303:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(originalModel_->primalRowSolution(), 0, nrows_ * sizeof(double));
                                                    ^~~~~~ ~
ClpPresolve.cpp:568:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (!cost[icol]) {
            ~^~~~~~~~~~
ClpPresolve.cpp:921:6: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     printProgress('A',0);
     ^~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:924:6: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     printProgress('B',0);
     ^~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:992:9: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               printProgress('C',0);
               ^~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1009:6: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            printProgress('D',0);
            ^~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1014:9: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               printProgress('E',0);
               ^~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1040:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               if ((presolveActions_ & 0x80000000) != 0)
                    ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1079:5: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         printProgress('F',iLoop+1);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1089:5: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         printProgress('G',iLoop+1);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1097:5: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         printProgress('H',iLoop+1);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1104:5: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         printProgress('I',iLoop+1);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1112:5: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         printProgress('J',iLoop+1);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1120:5: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         printProgress('K',iLoop+1);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1129:5: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         printProgress('L',iLoop+1);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1234:5: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         printProgress('M',iLoop+1);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1250:10: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                              printProgress('N',iLoop+1);
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1268:7: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    printProgress('O',iLoop+1);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1281:7: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    printProgress('P',iLoop+1);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1292:7: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    printProgress('Q',iLoop+1);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1330:7: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    printProgress('R',iLoop+1);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:883:34: note: expanded from macro 'printProgress'
#define printProgress(x,y) {if ((presolveActions_ & 0x80000000) != 0)   \
                                 ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:1425:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(rsol, 0, nrows * sizeof(double));
                          ^~~~~ ~
ClpPresolve.cpp:1737:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(rowChanged_, 0, nrows_);
     ~~~~~~                 ^~~~~~
ClpPresolve.cpp:1739:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(colChanged_, 0, ncols_);
     ~~~~~~                 ^~~~~~
ClpPresolve.cpp:1834:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (nonLinearValue) {
     ~~  ^~~~~~~~~~~~~~
ClpPresolve.cpp:2061:25: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(cdone_, -1, ncols0_);
     ~~~~~~             ^~~~~~~
ClpPresolve.cpp:2062:25: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(rdone_, -1, nrows0_);
     ~~~~~~             ^~~~~~~
ClpPresolve.cpp:2148:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(rowObjective_, 0, nrows_ * sizeof(double));
                                   ^~~~~~ ~
ClpPresolve.cpp:2215:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(rowObjective_, 0, nrows_ * sizeof(double));
                                        ^~~~~~ ~
ClpPresolve.cpp:2217:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          if ((presolveActions_ & 0x80000000) != 0)
               ^~~~~~~~~~~~~~~~ ~
ClpPresolve.cpp:2234:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(acts, 0, nrows * sizeof(double));
                               ^~~~~ ~
ClpPresolve.cpp:2361:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    memset(mark, 0, ncols_);
                    ~~~~~~          ^~~~~~
ClpPresolve.cpp:2407:38: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    rowNames.reserve(nrowsNow);
                    ~~~~~~~~         ^~~~~~~~
ClpPresolve.cpp:2415:41: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    columnNames.reserve(ncolsNow);
                    ~~~~~~~~~~~         ^~~~~~~~
ClpPresolve.cpp:2438:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (rowObjective_[iRow])
                         ~~  ^~~~~~~~~~~~~~~~~~~
ClpPresolve.cpp:2450:26: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               if ((prob.presolveOptions_ & 0x80000000) == 0 && information) {
                    ~~~~~^~~~~~~~~~~~~~~~ ~
In file included from ClpPresolve.cpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpPresolve.cpp:1643:6: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
     ClpDisjointCopyN(si->getColLower(), ncols, clo_);
     ^
In file included from ClpPresolve.cpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpPresolve.cpp:1750:6: note: in instantiation of function template specialization 'ClpDisjointCopyN<int>' requested here
     ClpDisjointCopyN(m->getVectorLengths(), ncols_,  hincol_);
     ^
57 warnings generated.
In file included from ClpPrimalColumnDantzig.cpp:10:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpPrimalColumnDantzig.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpPrimalColumnDantzig.cpp:12:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpPrimalColumnDantzig.cpp:12:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpPrimalColumnDantzig.cpp:12:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
20 warnings generated.
In file included from ClpPrimalColumnPivot.cpp:8:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpPrimalColumnPivot.cpp:8:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpPrimalColumnPivot.cpp:8:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpPrimalColumnPivot.cpp:8:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
17 warnings generated.
In file included from ClpPrimalColumnSteepest.cpp:8:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpPrimalColumnSteepest.cpp:8:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpPrimalColumnSteepest.cpp:8:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpPrimalColumnSteepest.cpp:8:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpPrimalColumnSteepest.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:344:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[sequenceOut])
                    ~~  ^~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:355:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[sequenceOut])
                    ~~  ^~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:366:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[sequenceOut])
                    ~~  ^~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:483:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (infeas[i]) {
               ~~  ^~~~~~~~~
ClpPrimalColumnSteepest.cpp:675:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (infeas[iSequence+addSequence])
                         ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:692:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (infeas[iSequence])
                         ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:709:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (infeas[iSequence])
                         ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:811:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence+addSequence])
                    ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:835:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence])
                    ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:859:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence])
                    ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:911:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence])
                    ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:929:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence])
                    ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:947:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence])
                    ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1084:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence+addSequence])
                    ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1123:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence])
                    ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1162:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence])
                    ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1205:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence])
                    ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1216:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence])
                    ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1227:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[iSequence])
                    ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1333:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (infeas[iSequence+addSequence])
                         ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1350:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (infeas[iSequence])
                         ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1367:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (infeas[iSequence])
                         ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1545:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (infeas[iSequence+addSequence])
                         ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1562:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (infeas[iSequence])
                         ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1579:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (infeas[iSequence])
                         ~~  ^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:1768:16: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (!scaleFactor)
              ~^~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2182:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2193:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2204:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2235:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2246:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2257:45: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                        if (infeas[iSequence+addSequence])
                                        ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2267:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2278:45: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                        if (infeas[iSequence+addSequence])
                                        ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2316:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[sequenceOut])
                    ~~  ^~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2327:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[sequenceOut])
                    ~~  ^~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2338:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (infeas[sequenceOut])
                    ~~  ^~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2381:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2392:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2403:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2431:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2442:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2453:45: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                        if (infeas[iSequence+addSequence])
                                        ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2463:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (infeas[iSequence+addSequence])
                                   ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:2474:45: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                        if (infeas[iSequence+addSequence])
                                        ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:3012:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (work[iRow])
                         ~~  ^~~~~~~~~~
ClpPrimalColumnSteepest.cpp:3281:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (!newWork[pivotRow] && devex_ > 0.0)
                             ~^~~~~~~~~~~~~~~~~
ClpPrimalColumnSteepest.cpp:3347:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (!newWork[pivotRow] && devex_ > 0.0)
                             ~^~~~~~~~~~~~~~~~~
In file included from ClpPrimalColumnSteepest.cpp:8:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpPrimalColumnSteepest.cpp:75:34: note: in instantiation of function template specialization 'CoinCopyOfArray<unsigned int>' requested here
                    reference_ = CoinCopyOfArray(rhs.reference_, (number + 31) >> 5);
                                 ^
In file included from ClpPrimalColumnSteepest.cpp:8:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpPrimalColumnSteepest.cpp:2933:37: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
                    savedWeights_ = CoinCopyOfArray(weights_, numberRows + numberColumns);
                                    ^
In file included from ClpPrimalColumnSteepest.cpp:9:
./ClpPrimalColumnSteepest.hpp:241:10: warning: private field 'lastRectified_' is not used [-Wunused-private-field]
     int lastRectified_;
         ^
71 warnings generated.
In file included from ClpQuadraticObjective.cpp:7:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpQuadraticObjective.cpp:8:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpQuadraticObjective.cpp:9:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpQuadraticObjective.cpp:9:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpQuadraticObjective.cpp:9:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpQuadraticObjective.cpp:50:74: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(objective_ + numberColumns_, 0, (numberExtendedColumns_ - numberColumns_)*sizeof(double));
                                                  ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~ ~
ClpQuadraticObjective.cpp:53:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(objective_, 0, numberExtendedColumns_ * sizeof(double));
                                ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpQuadraticObjective.cpp:329:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                         memset(gradient_, 0, numberExtendedColumns_ * sizeof(double));
                                              ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpQuadraticObjective.cpp:409:83: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memset(gradient_ + numberColumns_, 0, (numberExtendedColumns_ - numberColumns_)*sizeof(double));
                                                           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~ ~
ClpQuadraticObjective.cpp:420:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memset(gradient_, 0, numberExtendedColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpQuadraticObjective.cpp:550:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(deleted, 0, numberColumns_ * sizeof(char));
                             ^~~~~~~~~~~~~~ ~
ClpQuadraticObjective.cpp:577:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(deleted, 0, numberColumns_ * sizeof(char));
                             ^~~~~~~~~~~~~~ ~
ClpQuadraticObjective.cpp:625:71: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(objective_ + numberColumns_, 0, (numberExtended - numberColumns_)*sizeof(double));
                                                       ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~ ~
ClpQuadraticObjective.cpp:633:70: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(gradient_ + numberColumns_, 0, (numberExtended - numberColumns_)*sizeof(double));
                                                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~ ~
ClpQuadraticObjective.cpp:688:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
ClpQuadraticObjective.cpp:827:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (direction)
          ~~  ^~~~~~~~~
ClpQuadraticObjective.cpp:972:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (direction)
          ~~  ^~~~~~~~~
In file included from ClpQuadraticObjective.cpp:9:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpQuadraticObjective.cpp:707:6: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
     ClpDisjointCopyN(costNow, numberColumns, dj);
     ^
33 warnings generated.
In file included from ClpSimplex.cpp:16:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpSimplex.cpp:18:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpSimplex.cpp:18:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpSimplex.cpp:18:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpSimplex.cpp:19:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpSimplex.cpp:31:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModel.hpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
ClpSimplex.cpp:272:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (solution[iColumn])
               ~~  ^~~~~~~~~~~~~~~~~
ClpSimplex.cpp:281:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (solution[i]) {
                    ~~  ^~~~~~~~~~~
ClpSimplex.cpp:430:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (solution[iColumn])
               ~~  ^~~~~~~~~~~~~~~~~
ClpSimplex.cpp:439:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (solution[i]) {
                    ~~  ^~~~~~~~~~~
ClpSimplex.cpp:496:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(dual_, 0, numberRows_ * sizeof(double));
                      ^~~~~~~~~~~ ~
ClpSimplex.cpp:565:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(rowActivityWork_, 0, numberRows_ * sizeof(double));
                                      ^~~~~~~~~~~ ~
ClpSimplex.cpp:803:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpSimplex.cpp:819:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpSimplex.cpp:920:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpSimplex.cpp:934:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpSimplex.cpp:992:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpSimplex.cpp:1005:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpSimplex.cpp:1157:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (value) {
                         ~~  ^~~~~
ClpSimplex.cpp:1172:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (value) {
                         ~~  ^~~~~
ClpSimplex.cpp:1304:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(rowActivityWork_, 0, numberRows_ * sizeof(double));
                                 ^~~~~~~~~~~ ~
ClpSimplex.cpp:3163:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               memset(newStatus + numberOld, 0, numberExtraRows_);
               ~~~~~~                           ^~~~~~~~~~~~~~~~
ClpSimplex.cpp:3328:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (value && columnLower_[i] != columnUpper_[i]) {
                             ^~~~~ ~~
ClpSimplex.cpp:3362:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (largestObj) {
                    ~~  ^~~~~~~~~~
ClpSimplex.cpp:3503:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memset(rowObjectiveWork_, 0, numberRows_ * sizeof(double));
                                                 ^~~~~~~~~~~ ~
ClpSimplex.cpp:3517:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memset(rowObjectiveWork_, 0, numberRows_ * sizeof(double));
                                                 ^~~~~~~~~~~ ~
ClpSimplex.cpp:3719:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (direction)
          ~~  ^~~~~~~~~
ClpSimplex.cpp:4298:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(rowObjectiveWork_, 0, numberRows_ * sizeof(double));
                                            ^~~~~~~~~~~ ~
ClpSimplex.cpp:4312:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(rowObjectiveWork_, 0, numberRows_ * sizeof(double));
                                            ^~~~~~~~~~~ ~
ClpSimplex.cpp:4842:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (factor) {
     ~~  ^~~~~~
ClpSimplex.cpp:5521:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(reducedCost_, 0, numberColumns_ * sizeof(double));
                                       ^~~~~~~~~~~~~~ ~
ClpSimplex.cpp:5589:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpSimplex.cpp:5630:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (value) {
                              ~~  ^~~~~
ClpSimplex.cpp:5655:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memcpy(rowLower_, saveLower, numberRows_ * sizeof(double));
                                                 ^~~~~~~~~~~ ~
ClpSimplex.cpp:5656:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memcpy(rowUpper_, saveUpper, numberRows_ * sizeof(double));
                                                 ^~~~~~~~~~~ ~
ClpSimplex.cpp:5702:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (value) {
                         ~~  ^~~~~
In file included from ClpSimplex.cpp:5998:
./ClpPresolve.hpp:183:63: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                            ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpPresolve.hpp:183:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                               ^~~~~~~~~~~~~~~~ ~
ClpSimplex.cpp:6352:57: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          numberWritten = fwrite(array, sizeof(double), length, fp);
                          ~~~~~~                        ^~~~~~
ClpSimplex.cpp:6457:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               length = numberRows_ + numberColumns_;
                      ~ ~~~~~~~~~~~~^~~~~~~~~~~~~~~~
ClpSimplex.cpp:6478:43: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    strcpy(put, rowNames_[i].c_str());
                                ~~~~~~~~~ ^
ClpSimplex.cpp:6481:59: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberWritten = fwrite(array, lengthNames_ + 1, numberRows_, fp);
                               ~~~~~~        ~~~~~~~~~~~~~^~~
ClpSimplex.cpp:6481:64: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberWritten = fwrite(array, lengthNames_ + 1, numberRows_, fp);
                               ~~~~~~                          ^~~~~~~~~~~
ClpSimplex.cpp:6488:46: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    strcpy(put, columnNames_[i].c_str());
                                ~~~~~~~~~~~~ ^
ClpSimplex.cpp:6491:59: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberWritten = fwrite(array, lengthNames_ + 1, numberColumns_, fp);
                               ~~~~~~        ~~~~~~~~~~~~~^~~
ClpSimplex.cpp:6491:64: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberWritten = fwrite(array, lengthNames_ + 1, numberColumns_, fp);
                               ~~~~~~                          ^~~~~~~~~~~~~~
ClpSimplex.cpp:6501:56: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberWritten = fwrite(integerType_, 1, numberColumns_, fp);
                               ~~~~~~                  ^~~~~~~~~~~~~~
ClpSimplex.cpp:6514:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                   + matrix_->getVectorLengths()[numberColumns_-1];
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpSimplex.cpp:6527:62: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                 sizeof(int), numberColumns_ + 1, fp);
                                              ~~~~~~~~~~~~~~~^~~
ClpSimplex.cpp:6531:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                 sizeof(int), numberColumns_, fp);
                                              ^~~~~~~~~~~~~~
ClpSimplex.cpp:6554:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          numberRead = fread(array, sizeof(double), length, fp);
                       ~~~~~                        ^~~~~~
ClpSimplex.cpp:6623:47: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    numberRead = fread(array, length, 1, fp);
                                 ~~~~~        ^~~~~~
ClpSimplex.cpp:6681:58: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberRead = fread(status_, sizeof(char), length, fp);
                            ~~~~~                        ^~~~~~
ClpSimplex.cpp:6690:55: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberRead = fread(array, lengthNames_ + 1, numberRows_, fp);
                            ~~~~~        ~~~~~~~~~~~~~^~~
ClpSimplex.cpp:6690:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberRead = fread(array, lengthNames_ + 1, numberRows_, fp);
                            ~~~~~                          ^~~~~~~~~~~
ClpSimplex.cpp:6694:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               rowNames_.resize(numberRows_);
               ~~~~~~~~~        ^~~~~~~~~~~
ClpSimplex.cpp:6700:55: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberRead = fread(array, lengthNames_ + 1, numberColumns_, fp);
                            ~~~~~        ~~~~~~~~~~~~~^~~
ClpSimplex.cpp:6700:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberRead = fread(array, lengthNames_ + 1, numberColumns_, fp);
                            ~~~~~                          ^~~~~~~~~~~~~~
ClpSimplex.cpp:6704:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
               columnNames_.resize(numberColumns_);
               ~~~~~~~~~~~~        ^~~~~~~~~~~~~~
ClpSimplex.cpp:6722:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               numberRead = fread(integerType_, 1, numberColumns_, fp);
                            ~~~~~                  ^~~~~~~~~~~~~~
ClpSimplex.cpp:6776:56: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          numberRead = fread(elements, sizeof(double), length, fp);
                       ~~~~~                           ^~~~~~
ClpSimplex.cpp:6779:52: warning: implicit conversion changes signedness: 'CoinBigIndex' (aka 'int') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          numberRead = fread(indices, sizeof(int), length, fp);
                       ~~~~~                       ^~~~~~
ClpSimplex.cpp:6782:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          numberRead = fread(starts, sizeof(int), numberColumns_ + 1, fp);
                       ~~~~~                      ~~~~~~~~~~~~~~~^~~
ClpSimplex.cpp:6785:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          numberRead = fread(lengths, sizeof(int), numberColumns_, fp);
                       ~~~~~                       ^~~~~~~~~~~~~~
ClpSimplex.cpp:6868:22: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          } else if (value) {
                 ~~  ^~~~~
ClpSimplex.cpp:6880:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpSimplex.cpp:6889:39: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (lower_[i] > -1.0e100 && lower_[i]) {
                                   ~~ ^~~~~~~~~
ClpSimplex.cpp:6896:38: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (upper_[i] < 1.0e100 && upper_[i]) {
                                  ~~ ^~~~~~~~~
ClpSimplex.cpp:6904:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (largestBound)
     ~~  ^~~~~~~~~~~~
ClpSimplex.cpp:6920:22: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          } else if (value) {
                 ~~  ^~~~~
ClpSimplex.cpp:6932:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpSimplex.cpp:6941:39: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (lower_[i] > -1.0e100 && lower_[i]) {
                                   ~~ ^~~~~~~~~
ClpSimplex.cpp:6948:38: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (upper_[i] < 1.0e100 && upper_[i]) {
                                  ~~ ^~~~~~~~~
ClpSimplex.cpp:6973:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (largestBound)
     ~~  ^~~~~~~~~~~~
ClpSimplex.cpp:6987:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(status_, 0, (numberColumns_ + numberRows_)*sizeof(char));
                         ~~~~~~~~~~~~~~~^~~~~~~~~~~~~ ~
ClpSimplex.cpp:7219:24: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
     rowNames_.reserve(numberRows_);
     ~~~~~~~~~         ^~~~~~~~~~~
ClpSimplex.cpp:7231:27: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
     columnNames_.reserve(numberColumns_);
     ~~~~~~~~~~~~         ^~~~~~~~~~~~~~
ClpSimplex.cpp:7438:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(rowActivity_,0,numberRows_*sizeof(double));
                          ^~~~~~~~~~~~
ClpSimplex.cpp:7440:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(sum,0,numberRows_*sizeof(double));
                 ^~~~~~~~~~~~
ClpSimplex.cpp:7447:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (value) {
      ~~  ^~~~~
ClpSimplex.cpp:7611:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (direction)
          ~~  ^~~~~~~~~
ClpSimplex.cpp:7675:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memset (pi, 0, numberRows_ * sizeof(double));
                                   ^~~~~~~~~~~ ~
ClpSimplex.cpp:8458:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                   memset(array, 0, numberRows_ * sizeof(double));
                                                    ^~~~~~~~~~~ ~
ClpSimplex.cpp:8568:28: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ &= ~0xffff;
                        ~~ ^~~~~~~
ClpSimplex.cpp:8799:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          specialOptions_ &= ~8;
                          ~~ ^~
ClpSimplex.cpp:8829:23: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     whatsChanged_ &= ~0xffff;
                   ~~ ^~~~~~~
ClpSimplex.cpp:8913:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset (sumFixed, 0, numberRows_ * sizeof(double));
                          ^~~~~~~~~~~ ~
ClpSimplex.cpp:9026:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset (sumFixed, 0, numberRows_ * sizeof(double));
                          ^~~~~~~~~~~ ~
ClpSimplex.cpp:9426:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~64;
                             ~~ ^~~
ClpSimplex.cpp:9454:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~16;
                             ~~ ^~~
ClpSimplex.cpp:9484:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~32;
                             ~~ ^~~
ClpSimplex.cpp:9517:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~16;
                             ~~ ^~~
ClpSimplex.cpp:9532:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~32;
                             ~~ ^~~
ClpSimplex.cpp:9569:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~16;
                             ~~ ^~~
ClpSimplex.cpp:9574:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~32;
                             ~~ ^~~
ClpSimplex.cpp:9619:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~128;
                             ~~ ^~~~
ClpSimplex.cpp:9653:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~256;
                             ~~ ^~~~
ClpSimplex.cpp:9688:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~128;
                             ~~ ^~~~
ClpSimplex.cpp:9706:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~256;
                             ~~ ^~~~
ClpSimplex.cpp:9743:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~16;
                             ~~ ^~~
ClpSimplex.cpp:9748:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               whatsChanged_ &= ~32;
                             ~~ ^~~
ClpSimplex.cpp:10089:21: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
         memcpy(array,ray_,numberRows_*sizeof(double));
                           ^~~~~~~~~~~~
ClpSimplex.cpp:10090:30: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
         memset(array+numberRows_,0,numberColumns_*sizeof(double));
                                    ^~~~~~~~~~~~~~~
ClpSimplex.cpp:10171:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          specialOptions_ &= ~65536;
                          ~~ ^~~~~~
ClpSimplex.cpp:10908:29: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          int saveOptions = specialOptions_;
              ~~~~~~~~~~~   ^~~~~~~~~~~~~~~
ClpSimplex.cpp:10909:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          specialOptions_ &= ~65536;
                          ~~ ^~~~~~
ClpSimplex.cpp:10911:29: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          specialOptions_ = saveOptions;
                          ~ ^~~~~~~~~~~
ClpSimplex.cpp:11582:27: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
     info->saveOptions_ = specialOptions_;
                        ~ ^~~~~~~~~~~~~~~
ClpSimplex.cpp:11646:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
         if (cost_[i]) {
         ~~  ^~~~~~~~
ClpSimplex.cpp:11695:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     specialOptions_ &= ~524288; // say dont use solution
                     ~~ ^~~~~~~
ClpSimplex.cpp:11767:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(reducedCost_, 0, numberColumns_ * sizeof(double));
                                       ^~~~~~~~~~~~~~ ~
ClpSimplex.cpp:11846:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     specialOptions_ = info->saveOptions_;
                     ~ ~~~~~~^~~~~~~~~~~~
ClpSimplex.cpp:11851:23: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     whatsChanged_ &= ~0xffff;
                   ~~ ^~~~~~~
ClpSimplex.cpp:11943:29: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          int saveOptions = specialOptions_;
              ~~~~~~~~~~~   ^~~~~~~~~~~~~~~
ClpSimplex.cpp:11946:29: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          specialOptions_ = saveOptions;
                          ~ ^~~~~~~~~~~
In file included from ClpSimplex.cpp:19:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<double, int, CoinFirstLess_2<double, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpSimplex.cpp:649:16: note: in instantiation of function template specialization 'CoinSort_2<double, int>' requested here
               CoinSort_2(save, save + numberOut, sort);
               ^
In file included from ClpSimplex.cpp:18:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
ClpSimplex.cpp:780:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<double>' requested here
          ClpDisjointCopyN(columnActivities, numberColumns_, columnActivityWork_);
          ^
In file included from ClpSimplex.cpp:18:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:24:
./ClpParameters.hpp:84:57: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reinterpret_cast<void *> (newArray), array, size * sizeof(T));
                                                        ^~~~ ~
./ClpParameters.hpp:112:11: note: in instantiation of function template specialization 'ClpDisjointCopyN<unsigned char>' requested here
          ClpDisjointCopyN(array, size, arrayNew);
          ^
ClpSimplex.cpp:2402:30: note: in instantiation of function template specialization 'ClpCopyOfArray<unsigned char>' requested here
               saveStatus_ = ClpCopyOfArray( rhs.saveStatus_, numberTotal);
                             ^
In file included from ClpSimplex.cpp:16:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpSimplex.cpp:2498:32: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
          perturbationArray_ = CoinCopyOfArray(rhs.perturbationArray_,
                               ^
In file included from ClpSimplex.cpp:19:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, int, CoinFirstLess_2<int, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpSimplex.cpp:5722:26: note: in instantiation of function template specialization 'CoinSort_2<int, int>' requested here
                         CoinSort_2(whichRows, whichRows + numberRows_, order);
                         ^
In file included from ClpSimplex.cpp:16:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpSimplex.cpp:10189:31: note: in instantiation of function template specialization 'CoinCopyOfArray<unsigned char>' requested here
                    status_ = CoinCopyOfArray(rhs.status_, numberRows_ + numberColumns_);
                              ^
In file included from ClpSimplex.cpp:16:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpSimplex.cpp:12034:22: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
    pivotVariable_ = CoinCopyOfArray(rhs->pivotVariable_,numberRows_);
                     ^
138 warnings generated.
In file included from ClpSimplexDual.cpp:99:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpSimplexDual.cpp:101:
In file included from ./ClpSimplexDual.hpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpSimplexDual.cpp:101:
In file included from ./ClpSimplexDual.hpp:14:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpSimplexDual.cpp:101:
In file included from ./ClpSimplexDual.hpp:14:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpSimplexDual.cpp:103:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
ClpSimplexDual.cpp:564:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     specialOptions_ &= ~131072;
                     ~~ ^~~~~~~
ClpSimplexDual.cpp:1177:55: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         (factorization_->pivots() && saveSumDual))
                                                   ~~ ^~~~~~~~~~~
ClpSimplexDual.cpp:2054:55: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                                  if (value) {
                                                  ~~  ^~~~~
ClpSimplexDual.cpp:2879:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (movement && outputArray) {
                             ^~~~~~~~ ~~
ClpSimplexDual.cpp:3834:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (modification)
                                   ~~  ^~~~~~~~~~~~
ClpSimplexDual.cpp:3860:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (modification)
                                   ~~  ^~~~~~~~~~~~
ClpSimplexDual.cpp:3924:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (modification)
          ~~  ^~~~~~~~~~~~
ClpSimplexDual.cpp:4367:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                   memcpy(temp, cost_, nTotal * sizeof(double));
                                                       ^~~~~~ ~
ClpSimplexDual.cpp:4368:65: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                   memcpy(temp + nTotal, cost_, nTotal * sizeof(double));
                                                                ^~~~~~ ~
ClpSimplexDual.cpp:4391:61: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                        memcpy(temp, cost_, nTotal * sizeof(double));
                                                            ^~~~~~ ~
ClpSimplexDual.cpp:4392:70: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                        memcpy(temp + nTotal, cost_, nTotal * sizeof(double));
                                                                     ^~~~~~ ~
ClpSimplexDual.cpp:4399:71: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                        memcpy(cost_, cost_ + nTotal, nTotal * sizeof(double));
                                                                      ^~~~~~ ~
ClpSimplexDual.cpp:4477:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (sumPrimalInfeasibilities_ && sumPrimalInfeasibilities_ < 1.0e5) {
              ^~~~~~~~~~~~~~~~~~~~~~~~~ ~~
ClpSimplexDual.cpp:4528:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(cost_ + nTotal, cost_, nTotal * sizeof(double));
                                        ^~~~~~ ~
ClpSimplexDual.cpp:5259:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (sumDualInfeasibilities_)
          ~~  ^~~~~~~~~~~~~~~~~~~~~~~
ClpSimplexDual.cpp:5541:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value)
               ~~  ^~~~~
ClpSimplexDual.cpp:5621:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpSimplexDual.cpp:5626:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (lo && lo > -1.0e10) {
                   ^~ ~~
ClpSimplexDual.cpp:5629:26: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (!lastValue)
                        ~^~~~~~~~~
ClpSimplexDual.cpp:5634:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (up && up < 1.0e10) {
                   ^~ ~~
ClpSimplexDual.cpp:5637:26: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (!lastValue)
                        ~^~~~~~~~~
ClpSimplexDual.cpp:5651:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpSimplexDual.cpp:5655:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (lo && lo > -1.0e10) {
                   ^~ ~~
ClpSimplexDual.cpp:5658:26: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (!lastValue2)
                        ~^~~~~~~~~~
ClpSimplexDual.cpp:5663:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (up && up < 1.0e10) {
                   ^~ ~~
ClpSimplexDual.cpp:5666:26: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (!lastValue2)
                        ~^~~~~~~~~~
ClpSimplexDual.cpp:5735:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (currentValue) {
                    ~~  ^~~~~~~~~~~~
ClpSimplexDual.cpp:5821:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpSimplexDual.cpp:5845:32: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    } else if (value) {
                           ~~  ^~~~~
ClpSimplexDual.cpp:5857:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (currentValue) {
                    ~~  ^~~~~~~~~~~~
ClpSimplexDual.cpp:6180:28: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ &= ~0xffff;
                        ~~ ^~~~~~~
ClpSimplexDual.cpp:6399:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     specialOptions_ &= ~(16384 | 1048576);
                     ~~ ^~~~~~~~~~~~~~~~~~
ClpSimplexDual.cpp:6412:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     specialOptions_ &= ~131072;
                     ~~ ^~~~~~~
ClpSimplexDual.cpp:6435:29: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          int saveOptions = specialOptions_;
              ~~~~~~~~~~~   ^~~~~~~~~~~~~~~
ClpSimplexDual.cpp:6450:29: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          specialOptions_ = saveOptions;
                          ~ ^~~~~~~~~~~
ClpSimplexDual.cpp:6552:23: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     whatsChanged_ &= ~0xffff;
                   ~~ ^~~~~~~
ClpSimplexDual.cpp:7470:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memcpy(lower_, columnLower_, numberColumns_ * sizeof(double));
                                            ^~~~~~~~~~~~~~ ~
ClpSimplexDual.cpp:7471:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memcpy(upper_, columnUpper_, numberColumns_ * sizeof(double));
                                            ^~~~~~~~~~~~~~ ~
ClpSimplexDual.cpp:7472:59: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memcpy(lower_ + numberColumns_, rowLower_, numberRows_ * sizeof(double));
                                                          ^~~~~~~~~~~ ~
ClpSimplexDual.cpp:7473:59: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memcpy(upper_ + numberColumns_, rowUpper_, numberRows_ * sizeof(double));
                                                          ^~~~~~~~~~~ ~
In file included from ClpSimplexDual.cpp:99:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpSimplexDual.cpp:4668:47: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
                         saveColumnSolution = CoinCopyOfArray(columnActivityWork_, numberColumns_);
                                              ^
61 warnings generated.
In file included from ClpSimplexNonlinear.cpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpSimplexNonlinear.cpp:11:
In file included from ./ClpSimplexNonlinear.hpp:18:
In file included from ./ClpSimplexPrimal.hpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpSimplexNonlinear.cpp:11:
In file included from ./ClpSimplexNonlinear.hpp:18:
In file included from ./ClpSimplexPrimal.hpp:14:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpSimplexNonlinear.cpp:11:
In file included from ./ClpSimplexNonlinear.hpp:18:
In file included from ./ClpSimplexPrimal.hpp:14:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpSimplexNonlinear.cpp:12:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
ClpSimplexNonlinear.cpp:383:71: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    (nonLinearCost_->sumInfeasibilities() > 1.0e-3 || sumOfRelaxedPrimalInfeasibilities_)
                                                                   ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpSimplexNonlinear.cpp:1160:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpSimplexNonlinear.cpp:1172:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpSimplexNonlinear.cpp:1188:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value) {
               ~~  ^~~~~
ClpSimplexNonlinear.cpp:1191:26: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (!oldValue) {
                        ~^~~~~~~~
ClpSimplexNonlinear.cpp:1525:45: warning: use of logical '&&' with constant operand [-Wconstant-logical-operand]
                         if (numberNonBasic && 0) {
                                            ^  ~
ClpSimplexNonlinear.cpp:1525:45: note: use '&' for a bitwise operation
                         if (numberNonBasic && 0) {
                                            ^~
                                            &
ClpSimplexNonlinear.cpp:1525:45: note: remove constant to silence this warning
                         if (numberNonBasic && 0) {
                                           ~^~~~
ClpSimplexNonlinear.cpp:2034:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (alpha) {
                    ~~  ^~~~~
ClpSimplexNonlinear.cpp:2110:16: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (!basicTheta && !ordinaryDj) {
              ~^~~~~~~~~~
ClpSimplexNonlinear.cpp:2214:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (direction) {
                                   ~~  ^~~~~~~~~
ClpSimplexNonlinear.cpp:2673:31: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(markNonlinear, 0, numberColumns);
     ~~~~~~                   ^~~~~~~~~~~~~
ClpSimplexNonlinear.cpp:2723:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(saveRowSolution, 0, numberRows * sizeof(double));
                                ^~~~~~~~~~ ~
ClpSimplexNonlinear.cpp:2810:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(rowActivity_, 0, numberRows_ * sizeof(double));
                                  ^~~~~~~~~~~ ~
ClpSimplexNonlinear.cpp:2812:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(saveRowSolution, 0, numberRows_ * sizeof(double));
                                     ^~~~~~~~~~~ ~
ClpSimplexNonlinear.cpp:2859:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(rowActivity_, 0, numberRows_ * sizeof(double));
                                       ^~~~~~~~~~~ ~
ClpSimplexNonlinear.cpp:3001:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (alpha) {
                                   ~~  ^~~~~
ClpSimplexNonlinear.cpp:3053:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(rowActivity_, 0, numberRows_ * sizeof(double));
                                       ^~~~~~~~~~~ ~
ClpSimplexNonlinear.cpp:3196:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(r, 0, numberColumns * sizeof(double));
                       ^~~~~~~~~~~~~ ~
ClpSimplexNonlinear.cpp:3280:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(rowActivity_, 0, numberRows_ * sizeof(double));
                                       ^~~~~~~~~~~ ~
ClpSimplexNonlinear.cpp:3487:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(mark, 0, numberColumns_);
     ~~~~~~          ^~~~~~~~~~~~~~
ClpSimplexNonlinear.cpp:3546:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    memset(mark, 0, numberColumns_);
                    ~~~~~~          ^~~~~~~~~~~~~~
ClpSimplexNonlinear.cpp:3678:21: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (!trueLower[jNon] && columnLower[iColumn] < SMALL_FIX)
                   ~^~~~~~~~~~~~~~~
ClpSimplexNonlinear.cpp:3683:21: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (!trueLower[jNon])
                   ~^~~~~~~~~~~~~~~
ClpSimplexNonlinear.cpp:3686:21: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (!trueLower[jNon] && tryFix &&
                   ~^~~~~~~~~~~~~~~
ClpSimplexNonlinear.cpp:3898:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (infValue)
          ~~  ^~~~~~~~
ClpSimplexNonlinear.cpp:3900:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (objectiveOffset2)
          ~~  ^~~~~~~~~~~~~~~~
ClpSimplexNonlinear.cpp:3961:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (gap)
                    ~~  ^~~
ClpSimplexNonlinear.cpp:3968:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (gap) {
                    ~~  ^~~
ClpSimplexNonlinear.cpp:4141:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (difference) {
          ~~  ^~~~~~~~~~
48 warnings generated.
In file included from ClpSimplexOther.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpSimplexOther.cpp:11:
In file included from ./ClpSimplexOther.hpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpSimplexOther.cpp:11:
In file included from ./ClpSimplexOther.hpp:14:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpSimplexOther.cpp:11:
In file included from ./ClpSimplexOther.hpp:14:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpSimplexOther.cpp:16:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:69:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     bool inCBC = !dualTolerance_;
                  ~^~~~~~~~~~~~~~
ClpSimplexOther.cpp:250:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (!optimizationDirection_)
         ~^~~~~~~~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:683:47: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                 columnNames_[iColumn].c_str(),
                                 ~~~~~~~~~~~~ ^~~~~~~
ClpSimplexOther.cpp:684:44: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                 rowNames_[iRow].c_str());
                                 ~~~~~~~~~ ^~~~
ClpSimplexOther.cpp:689:47: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                 columnNames_[iColumn].c_str());
                                 ~~~~~~~~~~~~ ^~~~~~~
ClpSimplexOther.cpp:713:61: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                         fprintf(fp, " UL %s", columnNames_[iColumn].c_str());
                                               ~~~~~~~~~~~~ ^~~~~~~
ClpSimplexOther.cpp:776:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(rowActivity_, 0, numberRows_ * sizeof(double));
                                       ^~~~~~~~~~~ ~
ClpSimplexOther.cpp:885:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (offset) {
          ~~  ^~~~~~
ClpSimplexOther.cpp:1227:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(rowActivity_, 0, numberRows_ * sizeof(double));
                             ^~~~~~~~~~~ ~
ClpSimplexOther.cpp:1230:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reducedCost_, this->objective(), numberColumns_ * sizeof(double));
                                             ^~~~~~~~~~~~~~ ~
ClpSimplexOther.cpp:1319:35: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                    if (n == 0 && element[j])
                               ~~ ^~~~~~~~~~
ClpSimplexOther.cpp:1328:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (upper) {
               ~~  ^~~~~
ClpSimplexOther.cpp:1929:26: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     bool canTryQuick = (reportIncrement) ? true : false;
                         ^~~~~~~~~~~~~~~  ~
ClpSimplexOther.cpp:1955:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(chgLower, 0, numberTotal * sizeof(double));
                                   ^~~~~~~~~~~ ~
ClpSimplexOther.cpp:1957:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(chgUpper, 0, numberTotal * sizeof(double));
                                   ^~~~~~~~~~~ ~
ClpSimplexOther.cpp:1959:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(chgObjective, 0, numberTotal * sizeof(double));
                                       ^~~~~~~~~~~ ~
ClpSimplexOther.cpp:2102:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (!reportIncrement)
                             ~^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2344:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memset(lowerRowMove,0,numberRows_*sizeof(double));
                            ^~~~~~~~~~~~
ClpSimplexOther.cpp:2346:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memset(upperRowMove,0,numberRows_*sizeof(double));
                            ^~~~~~~~~~~~
ClpSimplexOther.cpp:2515:55: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        lowerColumnMove = reinterpret_cast<double *> (malloc(numberColumns_ * sizeof(double)));
                                                             ^~~~~~~~~~~~~~ ~
ClpSimplexOther.cpp:2516:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memset(lowerColumnMove,0,numberColumns_*sizeof(double));
                                 ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2517:55: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        upperColumnMove = reinterpret_cast<double *> (malloc(numberColumns_ * sizeof(double)));
                                                             ^~~~~~~~~~~~~~ ~
ClpSimplexOther.cpp:2518:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memset(upperColumnMove,0,numberColumns_*sizeof(double));
                                 ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2519:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        objectiveMove = reinterpret_cast<double *> (malloc(numberColumns_ * sizeof(double)));
                                                           ^~~~~~~~~~~~~~ ~
ClpSimplexOther.cpp:2520:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memset(objectiveMove,0,numberColumns_*sizeof(double));
                               ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2632:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (lowerRowMove[i]) {
        ~~  ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2645:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (upperRowMove[i]) {
        ~~  ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2658:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (lowerColumnMove[i]) {
        ~~  ^~~~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2671:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (upperColumnMove[i]) {
        ~~  ^~~~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2684:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (objectiveMove[i]) {
        ~~  ^~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2697:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (detail>0&&!intervalTheta)
                  ~^~~~~~~~~~~~~
ClpSimplexOther.cpp:2727:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (reportIncrement && canTryQuick) {
         ^~~~~~~~~~~~~~~ ~~
ClpSimplexOther.cpp:2907:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(lowerChange, 0, numberTotal * sizeof(double));
                         ^~~~~~~~~~~ ~
ClpSimplexOther.cpp:2908:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(upperChange, 0, numberTotal * sizeof(double));
                         ^~~~~~~~~~~ ~
ClpSimplexOther.cpp:2910:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(lowerChange,lowerChangeBound,numberColumns_*sizeof(double));
                                        ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2912:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(upperChange,upperChangeBound,numberColumns_*sizeof(double));
                                        ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2915:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           lowerChangeRhs,numberRows_*sizeof(double));
                          ^~~~~~~~~~~~
ClpSimplexOther.cpp:2918:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           upperChangeRhs,numberRows_*sizeof(double));
                          ^~~~~~~~~~~~
ClpSimplexOther.cpp:2937:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(saveLower+unscaledChangesOffset,lowerChange,numberTotal*sizeof(double));
                                                     ^~~~~~~~~~~~
ClpSimplexOther.cpp:2938:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(saveUpper+unscaledChangesOffset,upperChange,numberTotal*sizeof(double));
                                                     ^~~~~~~~~~~~
ClpSimplexOther.cpp:2942:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (lowerChange[i]) { 
    ~~  ^~~~~~~~~~~~~~
ClpSimplexOther.cpp:2945:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (upperChange[i]) { 
    ~~  ^~~~~~~~~~~~~~
ClpSimplexOther.cpp:2952:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (lowerChange[i]) { 
    ~~  ^~~~~~~~~~~~~~
ClpSimplexOther.cpp:2955:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (upperChange[i]) { 
    ~~  ^~~~~~~~~~~~~~
ClpSimplexOther.cpp:2961:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(lowerCopy,columnLower_,numberColumns_*sizeof(double));
                                ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2962:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(upperCopy,columnUpper_,numberColumns_*sizeof(double));
                                ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
         rowLower_,numberRows_*sizeof(double));
                   ^~~~~~~~~~~~
ClpSimplexOther.cpp:2966:13: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
         rowUpper_,numberRows_*sizeof(double));
                   ^~~~~~~~~~~~
ClpSimplexOther.cpp:2971:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(unscaledCopy,columnLower_,numberColumns_*sizeof(double));
                                     ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2973:15: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           rowLower_,numberRows_*sizeof(double));
                     ^~~~~~~~~~~~
ClpSimplexOther.cpp:2975:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(unscaledCopy,columnUpper_,numberColumns_*sizeof(double));
                                     ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:2977:15: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           rowUpper_,numberRows_*sizeof(double));
                     ^~~~~~~~~~~~
ClpSimplexOther.cpp:3004:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(saveLower,lower_,numberTotal*sizeof(double));
                              ^~~~~~~~~~~~
ClpSimplexOther.cpp:3010:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(saveUpper,upper_,numberTotal*sizeof(double));
                              ^~~~~~~~~~~~
ClpSimplexOther.cpp:3053:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        while(sumPrimalInfeasibilities_) {
        ~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3141:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(columnLower_,lowerCopy,numberColumns_*sizeof(double));
                                  ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3142:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(columnUpper_,upperCopy,numberColumns_*sizeof(double));
                                  ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3144:5: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           numberRows_*sizeof(double));
           ^~~~~~~~~~~~
ClpSimplexOther.cpp:3146:5: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           numberRows_*sizeof(double));
           ^~~~~~~~~~~~
ClpSimplexOther.cpp:3151:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(columnLower_,unscaledCopy,numberColumns_*sizeof(double));
                                     ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3153:5: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           numberRows_*sizeof(double));
           ^~~~~~~~~~~~
ClpSimplexOther.cpp:3155:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(columnUpper_,unscaledCopy,numberColumns_*sizeof(double));
                                     ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3157:5: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
           numberRows_*sizeof(double));
           ^~~~~~~~~~~~
ClpSimplexOther.cpp:3256:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(columnLower_,lower_,numberColumns_*sizeof(double));
                                 ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3257:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(rowLower_,lower_+numberColumns_,numberRows_*sizeof(double));
                                             ^~~~~~~~~~~~
ClpSimplexOther.cpp:3258:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(columnUpper_,upper_,numberColumns_*sizeof(double));
                                 ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3259:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(rowUpper_,upper_+numberColumns_,numberRows_*sizeof(double));
                                             ^~~~~~~~~~~~
ClpSimplexOther.cpp:3286:13: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      while(sumPrimalInfeasibilities_) {
      ~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3303:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (!moved) {
            ~^~~~~
ClpSimplexOther.cpp:3507:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (sumDualInfeasibilities_)
          ~~  ^~~~~~~~~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3586:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
              memcpy(columnLower_,saveLower,numberColumns_*sizeof(double));
                                            ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3587:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
              memcpy(rowLower_,saveLower+numberColumns_,numberRows_*sizeof(double));
                                                        ^~~~~~~~~~~~
ClpSimplexOther.cpp:3589:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
              memcpy(columnUpper_,saveUpper,numberColumns_*sizeof(double));
                                            ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:3590:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
              memcpy(rowUpper_,saveUpper+numberColumns_,numberRows_*sizeof(double));
                                                        ^~~~~~~~~~~~
ClpSimplexOther.cpp:3911:13: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                      if (multiplier) {
                      ~~  ^~~~~~~~~~
ClpSimplexOther.cpp:4127:29: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                          strcpy(in,columnNames_[iSequence].c_str());
                                    ~~~~~~~~~~~~ ^~~~~~~~~
ClpSimplexOther.cpp:4133:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                          strcpy(in,rowNames_[iSequence].c_str());
                                    ~~~~~~~~~ ^~~~~~~~~
ClpSimplexOther.cpp:4140:30: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                          strcpy(out,columnNames_[iSequence].c_str());
                                     ~~~~~~~~~~~~ ^~~~~~~~~
ClpSimplexOther.cpp:4146:27: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                          strcpy(out,rowNames_[iSequence].c_str());
                                     ~~~~~~~~~ ^~~~~~~~~
ClpSimplexOther.cpp:4330:50: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                             if (value) {
                                             ~~  ^~~~~
ClpSimplexOther.cpp:4467:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(lowerSave,columnLower_,numberColumns_*sizeof(double));
                                ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:4468:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(lowerSave+numberColumns_,rowLower_,numberRows_*sizeof(double));
                                            ^~~~~~~~~~~~
ClpSimplexOther.cpp:4469:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(upperSave,columnUpper_,numberColumns_*sizeof(double));
                                ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:4470:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(upperSave+numberColumns_,rowUpper_,numberRows_*sizeof(double));
                                            ^~~~~~~~~~~~
ClpSimplexOther.cpp:4505:36: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      (factorization_->pivots() && sumDualInfeasibilities_))
                                ~~ ^~~~~~~~~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:4730:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (change) {
    ~~  ^~~~~~
ClpSimplexOther.cpp:4755:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (change) {
    ~~  ^~~~~~
ClpSimplexOther.cpp:4858:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(markDone,0,nToZero*sizeof(int));
                    ^~~~~~~~
ClpSimplexOther.cpp:5503:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (realValue) {
                         ~~  ^~~~~~~~~
ClpSimplexOther.cpp:5509:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                   if (rowActivity[kRow]) {
                                   ~~  ^~~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:5511:46: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                        if (!rowActivity[kRow])
                                            ~^~~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:5558:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (realValue) {
                              ~~  ^~~~~~~~~
ClpSimplexOther.cpp:5630:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
     memset(mark, 0, numberRows_);
     ~~~~~~          ^~~~~~~~~~~
ClpSimplexOther.cpp:5722:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memcpy(reducedCost_, this->objective(), numberColumns_ * sizeof(double));
                                             ^~~~~~~~~~~~~~ ~
ClpSimplexOther.cpp:5772:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (value) 
      ~~  ^~~~~
ClpSimplexOther.cpp:5934:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(temp1,0,numberRows*sizeof(int));
                   ^~~~~~~~~~~
ClpSimplexOther.cpp:6390:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(numberKey,0,numberRows*sizeof(int));
                     ^~~~~~~~~~~
ClpSimplexOther.cpp:6634:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(numberKey,0,numberRows*sizeof(int));
                     ^~~~~~~~~~~
ClpSimplexOther.cpp:6760:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (!newValue) {
              ~^~~~~~~~
ClpSimplexOther.cpp:6773:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
              if (newValue) {
              ~~  ^~~~~~~~
ClpSimplexOther.cpp:6788:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (newValue) {
          ~~  ^~~~~~~~
ClpSimplexOther.cpp:6812:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if (elementByColumn[j]) {
            ~~  ^~~~~~~~~~~~~~~~~~
ClpSimplexOther.cpp:6834:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if (oldValue) {
            ~~  ^~~~~~~~
ClpSimplexOther.cpp:6848:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (!newValue) {
              ~^~~~~~~~
ClpSimplexOther.cpp:6859:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (array[iRow]) {
          ~~  ^~~~~~~~~~~
ClpSimplexOther.cpp:6873:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (newValue) {
          ~~  ^~~~~~~~
ClpSimplexOther.cpp:7042:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(lower_,columnLower_,numberColumns_*sizeof(double));
                               ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:7043:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(lower_+numberColumns_,rowLower_,numberRows_*sizeof(double));
                                           ^~~~~~~~~~~~
ClpSimplexOther.cpp:7044:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(upper_,columnUpper_,numberColumns_*sizeof(double));
                               ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:7045:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(upper_+numberColumns_,rowUpper_,numberRows_*sizeof(double));
                                           ^~~~~~~~~~~~
ClpSimplexOther.cpp:7046:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(cost_,objective(),numberColumns_*sizeof(double));
                             ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:7047:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(cost_+numberColumns_,0,numberRows_*sizeof(double));
                                  ^~~~~~~~~~~~
ClpSimplexOther.cpp:7808:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if (!multiplier) {
                ~^~~~~~~~~~
ClpSimplexOther.cpp:7988:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset (rowActivity_,0,numberRows_*sizeof(double));
                         ^~~~~~~~~~~~
ClpSimplexOther.cpp:8000:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (infeasibility) {
    ~~  ^~~~~~~~~~~~~
ClpSimplexOther.cpp:8032:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (infeasibility) {
        ~~  ^~~~~~~~~~~~~
ClpSimplexOther.cpp:8102:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset (rowActivity_,0,numberRows_*sizeof(double));
                         ^~~~~~~~~~~~
ClpSimplexOther.cpp:8312:34: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memcpy(temp,where.startStuff,k);
    ~~~~~~                       ^
ClpSimplexOther.cpp:8319:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(put,indices,numberElements*sizeof(int));
                     ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:8320:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  put += numberElements*sizeof(int);
         ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:8321:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(put,elements,numberElements*sizeof(double));
                      ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:8322:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  put += numberElements*sizeof(double);
         ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:8393:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(where.indices,get,n*sizeof(int));
                             ^~
ClpSimplexOther.cpp:8394:12: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    get += n*sizeof(int);
           ^~
ClpSimplexOther.cpp:8395:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(where.elements,get,n*sizeof(double));
                              ^~
ClpSimplexOther.cpp:8420:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(element+put,element+start,length*sizeof(double));
                                       ^~~~~~~
ClpSimplexOther.cpp:8421:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(row+put,row+start,length*sizeof(int));
                               ^~~~~~~
ClpSimplexOther.cpp:8451:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(element+put,element+start,n*sizeof(double));
                                       ^~
ClpSimplexOther.cpp:8452:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(row+put,row+start,n*sizeof(int));
                               ^~
ClpSimplexOther.cpp:8465:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(element+put,element+start,n*sizeof(double));
                                       ^~
ClpSimplexOther.cpp:8466:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(row+put,row+start,n*sizeof(int));
                               ^~
ClpSimplexOther.cpp:8541:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(infoA,'B',numberTotal*sizeof(clpPresolveInfo));
                   ^~~~~~~~~~~~
ClpSimplexOther.cpp:8542:25: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  memset(startStuff,'B',maxInfoStuff);
  ~~~~~~                ^~~~~~~~~~~~
ClpSimplexOther.cpp:8548:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(array,0,numberRows_*sizeof(double));
                 ^~~~~~~~~~~~
ClpSimplexOther.cpp:8649:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (solValue) {
        ~~  ^~~~~~~~
ClpSimplexOther.cpp:8895:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if (!value) {
                ~^~~~~
ClpSimplexOther.cpp:8899:13: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
              if (!valueNew)
                  ~^~~~~~~~
ClpSimplexOther.cpp:8923:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memcpy(row,row+lastElement,numberElements*sizeof(int));
                                       ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:8924:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memcpy(element,element+lastElement,numberElements*sizeof(double));
                                               ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:8943:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
ClpSimplexOther.cpp:8959:17: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            } else if (value) {
                   ~~  ^~~~~
ClpSimplexOther.cpp:9262:7: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (!cost) {
            ~^~~~
ClpSimplexOther.cpp:9413:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memcpy(infoData,infoA,nActions*sizeof(clpPresolveInfo));
                          ^~~~~~~~~
ClpSimplexOther.cpp:9415:43: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memcpy(info2,startStuff,stuff.putStuff-startStuff);
    ~~~~~~                  ~~~~~~~~~~~~~~^~~~~~~~~~~
ClpSimplexOther.cpp:9489:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(row,row+lastElement,numberElements*sizeof(int));
                                 ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:9490:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memcpy(element,element+lastElement,numberElements*sizeof(double));
                                         ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:9573:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  memset(rowType,0,numberTotal);
  ~~~~~~           ^~~~~~~~~~~
ClpSimplexOther.cpp:9582:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(array,0,numberRows_*sizeof(double));
                 ^~~~~~~~~~~~
ClpSimplexOther.cpp:9607:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(rowActivity_,0,numberRows_*sizeof(double));
                        ^~~~~~~~~~~~
ClpSimplexOther.cpp:9608:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(dual_,0,numberRows_*sizeof(double));
                 ^~~~~~~~~~~~
ClpSimplexOther.cpp:9730:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memcpy(objectiveX,this->objective(),numberColumns_*sizeof(double));
                                      ^~~~~~~~~~~~~~~
ClpSimplexOther.cpp:9925:50: warning: operator '?:' has lower precedence than '+'; '+' will be evaluated first [-Wparentheses]
                     iColumn,length+(jRowLower<0||jRowUpper<0) ? 1 : 2,
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
ClpSimplexOther.cpp:9925:50: note: place parentheses around the '+' expression to silence this warning
                     iColumn,length+(jRowLower<0||jRowUpper<0) ? 1 : 2,
                                                               ^
                             (                                )
ClpSimplexOther.cpp:9925:50: note: place parentheses around the '?:' expression to evaluate it first
                     iColumn,length+(jRowLower<0||jRowUpper<0) ? 1 : 2,
                                                               ^
                                    (                                 )
ClpSimplexOther.cpp:10057:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(rowX+start,tempIndex,newLength*sizeof(int));
                                    ^~~~~~~~~~
ClpSimplexOther.cpp:10058:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(elementX+start,tempElement,newLength*sizeof(double));
                                          ^~~~~~~~~~
ClpSimplexOther.cpp:10061:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (solValue) { 
        ~~  ^~~~~~~~
ClpSimplexOther.cpp:10129:17: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (newLength&&solValue) {
                     ~~^~~~~~~~
ClpSimplexOther.cpp:10195:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(rowX+start,tempIndex,newLength*sizeof(int));
                                    ^~~~~~~~~~
ClpSimplexOther.cpp:10196:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(elementX+start,tempElement,newLength*sizeof(double));
                                          ^~~~~~~~~~
ClpSimplexOther.cpp:10220:9: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (!value) {
              ~^~~~~
ClpSimplexOther.cpp:10224:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
            if (!valueNew)
                ~^~~~~~~~
ClpSimplexOther.cpp:10236:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
ClpSimplexOther.cpp:10253:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(rowX+start,tempIndex,length*sizeof(int));
                                    ^~~~~~~
ClpSimplexOther.cpp:10254:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(elementX+start,tempElement,length*sizeof(double));
                                          ^~~~~~~
In file included from ClpSimplexOther.cpp:10:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpSimplexOther.cpp:861:26: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
     double * rowLower = CoinCopyOfArray(model2->rowLower(), numberRows);
                         ^
In file included from ClpSimplexOther.cpp:16:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, int, CoinFirstLess_2<int, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpSimplexOther.cpp:6739:7: note: in instantiation of function template specialization 'CoinSort_2<int, int>' requested here
      CoinSort_2(which2,which2+n,sort);
      ^
In file included from ClpSimplexOther.cpp:16:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<double, int, CoinFirstLess_2<double, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpSimplexOther.cpp:7691:3: note: in instantiation of function template specialization 'CoinSort_2<double, int>' requested here
  CoinSort_2(weights,weights+numberLook,whichRows);
  ^
186 warnings generated.
In file included from ClpSimplexPrimal.cpp:85:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpSimplexPrimal.cpp:86:
In file included from ./ClpSimplexPrimal.hpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpSimplexPrimal.cpp:86:
In file included from ./ClpSimplexPrimal.hpp:14:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpSimplexPrimal.cpp:86:
In file included from ./ClpSimplexPrimal.hpp:14:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpSimplexPrimal.cpp:87:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
ClpSimplexPrimal.cpp:410:34: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]
                              dj = dj;
                              ~~ ^ ~~
ClpSimplexPrimal.cpp:539:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     specialOptions_ &= ~131072;
                     ~~ ^~~~~~~
ClpSimplexPrimal.cpp:918:16: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (!lastSumInfeasibility && sumInfeasibility &&
              ~^~~~~~~~~~~~~~~~~~~~
ClpSimplexPrimal.cpp:918:40: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (!lastSumInfeasibility && sumInfeasibility &&
                                    ~~ ^~~~~~~~~~~~~~~~
ClpSimplexPrimal.cpp:1048:68: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (nonLinearCost_->numberInfeasibilities() > 0 && !progress->initialWeight_ && !ifValuesPass && infeasibilityCost_ == 1.0e10) {
                                                        ~~~~~~~~~~~^~~~~~~~~~~~~~
ClpSimplexPrimal.cpp:1062:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(rowObjectiveWork_, 0, numberRows_ * sizeof(double));
                                       ^~~~~~~~~~~ ~
ClpSimplexPrimal.cpp:1253:71: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    (nonLinearCost_->sumInfeasibilities() > 1.0e-3 || sumOfRelaxedPrimalInfeasibilities_)
                                                                   ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpSimplexPrimal.cpp:1431:44: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (!alwaysOptimal || !sumOfRelaxedPrimalInfeasibilities_)
                                          ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpSimplexPrimal.cpp:1733:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (cost_[iPivot])
               ~~  ^~~~~~~~~~~~~
ClpSimplexPrimal.cpp:2203:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (difference) {
                              ~~  ^~~~~~~~~~
ClpSimplexPrimal.cpp:2218:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (difference) {
                              ~~  ^~~~~~~~~~
ClpSimplexPrimal.cpp:2249:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (difference) {
                         ~~  ^~~~~~~~~~
ClpSimplexPrimal.cpp:2264:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (difference) {
                         ~~  ^~~~~~~~~~
ClpSimplexPrimal.cpp:2342:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (lo && lo < 1.0e20) {
                   ^~ ~~
ClpSimplexPrimal.cpp:2343:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (up && up < 1.0e20) {
                        ^~ ~~
ClpSimplexPrimal.cpp:2351:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (up && up < 1.0e20)
                        ^~ ~~
ClpSimplexPrimal.cpp:2436:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
ClpSimplexPrimal.cpp:2545:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (value) {
                         ~~  ^~~~~
ClpSimplexPrimal.cpp:2549:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (solutionValue) {
                              ~~  ^~~~~~~~~~~~~
ClpSimplexPrimal.cpp:2576:54: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (lowerValue > -1.0e20 && lowerValue)
                                                  ~~ ^~~~~~~~~~
ClpSimplexPrimal.cpp:2578:53: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (upperValue < 1.0e20 && upperValue)
                                                 ~~ ^~~~~~~~~~
ClpSimplexPrimal.cpp:2580:32: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    } else if (value) {
                           ~~  ^~~~~
ClpSimplexPrimal.cpp:2592:54: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (lowerValue > -1.0e20 && lowerValue)
                                                  ~~ ^~~~~~~~~~
ClpSimplexPrimal.cpp:2605:53: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (upperValue < 1.0e20 && upperValue)
                                                 ~~ ^~~~~~~~~~
ClpSimplexPrimal.cpp:2636:54: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (lowerValue > -1.0e20 && lowerValue)
                                                  ~~ ^~~~~~~~~~
ClpSimplexPrimal.cpp:2638:53: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (upperValue < 1.0e20 && upperValue)
                                                 ~~ ^~~~~~~~~~
ClpSimplexPrimal.cpp:2640:32: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    } else if (value) {
                           ~~  ^~~~~
ClpSimplexPrimal.cpp:2652:54: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (lowerValue > -1.0e20 && lowerValue)
                                                  ~~ ^~~~~~~~~~
ClpSimplexPrimal.cpp:2665:53: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (upperValue < 1.0e20 && upperValue)
                                                 ~~ ^~~~~~~~~~
ClpSimplexPrimal.cpp:2777:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          specialOptions_ &= ~1;
                          ~~ ^~
ClpSimplexPrimal.cpp:2791:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          specialOptions_ &= ~4;
                          ~~ ^~
ClpSimplexPrimal.cpp:3153:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (!nonLinearCost_->sumInfeasibilities())
                             ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpSimplexPrimal.cpp:3653:34: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]
                              dj = dj;
                              ~~ ^ ~~
ClpSimplexPrimal.cpp:3803:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
     specialOptions_ &= ~131072;
                     ~~ ^~~~~~~
In file included from ClpSimplexPrimal.cpp:87:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<double, int, CoinFirstLess_2<double, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpSimplexPrimal.cpp:439:26: note: in instantiation of function template specialization 'CoinSort_2<double, int>' requested here
                         CoinSort_2(weight, weight + numberColumns_, whichColumns);
                         ^
In file included from ClpSimplexPrimal.cpp:85:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpSimplexPrimal.cpp:3543:26: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
          originalCost = CoinCopyOfArray(cost_, numberColumns_ + numberRows_);
                         ^
56 warnings generated.
In file included from ClpSolve.cpp:18:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpSolve.cpp:21:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpSolve.cpp:21:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpSolve.cpp:21:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpSolve.cpp:21:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpSolve.cpp:48:
./ClpPresolve.hpp:183:63: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                            ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpPresolve.hpp:183:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                               ^~~~~~~~~~~~~~~~ ~
ClpSolve.cpp:970:20: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
               if (obj[i])
               ~~  ^~~~~~
ClpSolve.cpp:1229:16: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                         } else if (objective[iColumn]) {
                                ~~  ^~~~~~~~~~~~~~~~~~
ClpSolve.cpp:1245:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (value1 && value1 > -1.0e31) {
                             ^~~~~~ ~~
ClpSolve.cpp:1254:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (value2 && value2 < 1.0e31) {
                             ^~~~~~ ~~
ClpSolve.cpp:1301:36: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (!largestGap)
                                  ~^~~~~~~~~~
ClpSolve.cpp:1307:36: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (!largestGap)
                                  ~^~~~~~~~~~
ClpSolve.cpp:1401:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value1 && value1 > -1.0e31) {
                        ^~~~~~ ~~
ClpSolve.cpp:1406:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value2 && value2 < 1.0e31) {
                        ^~~~~~ ~~
ClpSolve.cpp:1474:34: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
               int saveOptions = model2->specialOptions();
                   ~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~
ClpSolve.cpp:1476:59: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    model2->setSpecialOptions(saveOptions | 64); // go as far as possible
                    ~~~~~~                    ~~~~~~~~~~~~^~~~
ClpSolve.cpp:1578:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value1 && value1 > -1.0e31) {
                        ^~~~~~ ~~
ClpSolve.cpp:1583:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value2 && value2 < 1.0e31) {
                        ^~~~~~ ~~
ClpSolve.cpp:1638:36: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (!largestGap)
                                  ~^~~~~~~~~~
ClpSolve.cpp:1646:36: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (!largestGap)
                                  ~^~~~~~~~~~
ClpSolve.cpp:1864:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                      memcpy(model2->objective(),saveObj,numberColumns*sizeof(double));
                                                         ^~~~~~~~~~~~~~
ClpSolve.cpp:1979:21: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (!columnSolution[iColumn] || fabs(columnSolution[iColumn]) > 1.0e20) {
                   ~^~~~~~~~~~~~~~~~~~~~~~~
ClpSolve.cpp:1989:26: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                    if (!columnLower[iColumn]) {
                        ~^~~~~~~~~~~~~~~~~~~~
ClpSolve.cpp:1994:33: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                    } else if (!columnUpper[iColumn]) {
                               ~^~~~~~~~~~~~~~~~~~~~
ClpSolve.cpp:2014:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (columnSolution[jColumn])
                         ~~  ^~~~~~~~~~~~~~~~~~~~~~~
ClpSolve.cpp:2031:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (columnSolution[jColumn])
                         ~~  ^~~~~~~~~~~~~~~~~~~~~~~
ClpSolve.cpp:2106:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value && value < 1.0e30) {
                   ^~~~~ ~~
ClpSolve.cpp:2111:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (value && value < 1.0e30) {
                   ^~~~~ ~~
ClpSolve.cpp:2131:54: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (lowerValue > -1.0e20 && lowerValue)
                                                  ~~ ^~~~~~~~~~
ClpSolve.cpp:2133:53: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (upperValue < 1.0e20 && upperValue)
                                                 ~~ ^~~~~~~~~~
ClpSolve.cpp:2188:31: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              columnSolution[iColumn])
                              ^~~~~~~~~~~~~~~~~~~~~~~
ClpSolve.cpp:2344:20: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
               if (sumArtificials && iPass > 5 && sumArtificials >= lastSumArtificials) {
                   ^~~~~~~~~~~~~~ ~~
ClpSolve.cpp:2404:39: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]
                                   dj = dj;
                                   ~~ ^ ~~
ClpSolve.cpp:2441:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (diffLower)
                    ~~  ^~~~~~~~~
In file included from ClpSolve.cpp:3940:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinStructuredModel.hpp:9:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModel.hpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
In file included from ClpSolve.cpp:3940:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinStructuredModel.hpp:132:27: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return rowBlockNames_[i];}
           ~~~~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinStructuredModel.hpp:135:20: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { rowBlockNames_[i] = name;}
    ~~~~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinStructuredModel.hpp:142:30: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return columnBlockNames_[i];}
           ~~~~~~~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinStructuredModel.hpp:145:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { columnBlockNames_[i] = name;}
    ~~~~~~~~~~~~~~~~~ ^
ClpSolve.cpp:4130:82: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memcpy(whichRow + n, coinModel.coinBlock(jBlock)->originalRows(), k * sizeof(int));
                                                                                 ^ ~
ClpSolve.cpp:4147:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           k * sizeof(int));
                           ^ ~
ClpSolve.cpp:4643:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(dual, 0, n * sizeof(double));
                               ^ ~
ClpSolve.cpp:4726:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                      0, (numberMasterRows + numberBlocks)*sizeof(double));
                          ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~ ~
ClpSolve.cpp:4745:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memcpy(saveObj, objective2, numberColumns2 * sizeof(double));
                                           ^~~~~~~~~~~~~~ ~
ClpSolve.cpp:4767:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memset(objective2, 0, numberColumns2 * sizeof(double));
                                          ^~~~~~~~~~~~~~ ~
ClpSolve.cpp:4780:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memcpy(objective2, saveObj, numberColumns2 * sizeof(double));
                                           ^~~~~~~~~~~~~~ ~
ClpSolve.cpp:4917:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(sol, 0, numberColumnsGenerated * sizeof(double));
                         ^~~~~~~~~~~~~~~~~~~~~~ ~
ClpSolve.cpp:4923:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(lower, 0, (numberMasterRows + numberBlocks)*sizeof(double));
                            ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~ ~
ClpSolve.cpp:5257:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                      0, numberMasterColumns * sizeof(double));
                         ^~~~~~~~~~~~~~~~~~~ ~
ClpSolve.cpp:5283:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memcpy(lower2, saveLower, numberRows2 * sizeof(double));
                                         ^~~~~~~~~~~ ~
ClpSolve.cpp:5284:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memcpy(upper2, saveUpper, numberRows2 * sizeof(double));
                                         ^~~~~~~~~~~ ~
In file included from ClpSolve.cpp:18:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
ClpSolve.cpp:1823:28: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
                      double * saveObj = CoinCopyOfArray(model2->objective(),numberColumns);
                                         ^
In file included from ClpSolve.cpp:20:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<double, int, CoinFirstLess_2<double, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpSolve.cpp:2418:21: note: in instantiation of function template specialization 'CoinSort_2<double, int>' requested here
                    CoinSort_2(weight + saveN, weight + numberSort, sort + saveN);
                    ^
70 warnings generated.
In file included from Idiot.cpp:11:
In file included from ./ClpPresolve.hpp:8:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from Idiot.cpp:11:
In file included from ./ClpPresolve.hpp:8:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from Idiot.cpp:11:
In file included from ./ClpPresolve.hpp:8:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from Idiot.cpp:11:
In file included from ./ClpPresolve.hpp:8:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from Idiot.cpp:11:
./ClpPresolve.hpp:183:63: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                            ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpPresolve.hpp:183:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                               ^~~~~~~~~~~~~~~~ ~
Idiot.cpp:99:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(rowsol, 0, nrows * sizeof(double));
                            ^~~~~ ~
Idiot.cpp:127:25: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                    if (value) {
                    ~~  ^~~~~
Idiot.cpp:339:15: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
          if (objective[i]) {
          ~~  ^~~~~~~~~~~~
Idiot.cpp:492:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          int extra = static_cast<int> (nrows * sizeof(double) / sizeof(int));
                                        ^~~~~ ~
Idiot.cpp:615:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(lambda, 0, nrows * sizeof(double));
                       ^~~~~ ~
Idiot.cpp:630:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (offset && logLevel > 2) {
         ^~~~~~ ~~
Idiot.cpp:731:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(whenUsed, 0, ncols * sizeof(int));
                         ^~~~~ ~
Idiot.cpp:918:49: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                              memset(lambda, 0, nrows * sizeof(double));
                                                ^~~~~ ~
Idiot.cpp:941:35: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                              if (lambda[i]) nnz++;
                              ~~  ^~~~~~~~~
Idiot.cpp:1066:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (saveLambdaScale) {
     ~~  ^~~~~~~~~~~~~~~
Idiot.cpp:1101:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(rowsol, 0, nrows * sizeof(double));
                            ^~~~~ ~
Idiot.cpp:1254:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(rowsol, 0, nrows * sizeof(double));
                       ^~~~~ ~
Idiot.cpp:1352:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (lower[iCol]) {
                         ~~  ^~~~~~~~~~~
Idiot.cpp:1364:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (lower[iCol]) {
                         ~~  ^~~~~~~~~~~
Idiot.cpp:1688:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    memset(rhs, 0, nrows * sizeof(double));
                                   ^~~~~ ~
In file included from Idiot.cpp:14:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<double, int, CoinFirstLess_2<double, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
Idiot.cpp:557:21: note: in instantiation of function template specialization 'CoinSort_2<double, int>' requested here
                    CoinSort_2(dj, dj + n, whenUsed_);
                    ^
In file included from Idiot.cpp:11:
In file included from ./ClpPresolve.hpp:8:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
Idiot.cpp:1692:36: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
                    saveRowUpper = CoinCopyOfArray(rowupper, nrows);
                                   ^
36 warnings generated.
In file included from IdiSolve.cpp:11:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from IdiSolve.cpp:12:
In file included from ./Idiot.hpp:13:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from IdiSolve.cpp:12:
In file included from ./Idiot.hpp:13:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from IdiSolve.cpp:12:
In file included from ./Idiot.hpp:13:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
IdiSolve.cpp:93:15: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (value) {
          ~~  ^~~~~
IdiSolve.cpp:239:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(rowsol, 0, nrows * sizeof(double));
                       ^~~~~ ~
IdiSolve.cpp:323:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
               memset(useCostExtra, 0, extraBlock * sizeof(double));
                                       ^~~~~~~~~~ ~
IdiSolve.cpp:340:24: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
          if (upper[i] - lower[i]) {
          ~~  ~~~~~~~~~^~~~~~~~~~
IdiSolve.cpp:439:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                         memset(pi, 0, nrows * sizeof(double));
                                       ^~~~~ ~
IdiSolve.cpp:457:57: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                   memset(allsum[i], 0, nrows * sizeof(double));
                                                        ^~~~~ ~
IdiSolve.cpp:536:45: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                        if (value2) {
                                        ~~  ^~~~~~
IdiSolve.cpp:1176:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (kgood || kbad) {
         ^~~~~ ~~
IdiSolve.cpp:1176:19: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
     if (kgood || kbad) {
               ~~ ^~~~
26 warnings generated.
In file included from ClpMain.cpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from ClpMain.cpp:25:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMpsIO.hpp:19:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from ClpMain.cpp:40:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from ClpMain.cpp:40:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from ClpMain.cpp:40:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from ClpMain.cpp:54:
./ClpPresolve.hpp:183:63: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                            ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpPresolve.hpp:183:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                               ^~~~~~~~~~~~~~~~ ~
In file included from ClpMain.cpp:55:
./CbcOrClpParam.hpp:374:35: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return definedKeyWords_[currentKeyWord_];
                 ~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~
ClpMain.cpp:425:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    field = field.substr(0, length - numberQuery);
                                                   ~ ^~~~~~~~~~~
ClpMain.cpp:489:50: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                              std::cout << types[iType] << std::endl;
                                           ~~~~~ ^~~~~
ClpMain.cpp:545:50: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                              std::cout << types[iType] << std::endl;
                                           ~~~~~ ^~~~~
ClpMain.cpp:1041:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                            memset(farkas,0,(2*numberColumns+numberRows)*sizeof(double));
                                                             ~~~~~~~~~~~~~~~^~~~~~~~~~~ ~
ClpMain.cpp:1056:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                                if (value) {
                                                ~~  ^~~~~
ClpMain.cpp:1087:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                                                if (value) {
                                                ~~  ^~~~~
ClpMain.cpp:2027:52: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                              int specialOptions = models[iModel].specialOptions();
                                  ~~~~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpMain.cpp:2048:52: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                              int specialOptions = models[iModel].specialOptions();
                                  ~~~~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ClpMain.cpp:2446:77: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                                       size_t nBefore = ast - oldMask;
                                                              ~~~~~~~   ~~~~^~~~~~~~~
ClpMain.cpp:2450:80: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                       for (size_t i = 0; i <= lengthName - length; i++) {
                                                                               ^~~~~~~~~~ ~
ClpMain.cpp:2517:52: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                                if (maskMatches(maskStarts,masks,columnNames[i]))
                                                                                 ~~~~~~~~~~~ ^
ClpMain.cpp:2535:49: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                                if (maskMatches(maskStarts,masks,rowNames[i]))
                                                                                 ~~~~~~~~ ^
ClpMain.cpp:2570:64: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                              const char * name = (printMode==7) ? rowNames[iWhich-numberColumns].c_str() : columnNames[iWhich].c_str();
                                                                                   ~~~~~~~~ ~~~~~~^~~~~~~~~~~~~~
ClpMain.cpp:2570:102: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                              const char * name = (printMode==7) ? rowNames[iWhich-numberColumns].c_str() : columnNames[iWhich].c_str();
                                                                                                                            ~~~~~~~~~~~ ^~~~~~
ClpMain.cpp:2578:38: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                                  fprintf(fp,"%s,",columnNames[outSequence].c_str());
                                                                   ~~~~~~~~~~~ ^~~~~~~~~~~
ClpMain.cpp:2584:35: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                                  fprintf(fp,"%s,",rowNames[outSequence].c_str());
                                                                   ~~~~~~~~ ^~~~~~~~~~~
ClpMain.cpp:2596:37: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                                  fprintf(fp,"%s",columnNames[outSequence].c_str());
                                                                  ~~~~~~~~~~~ ^~~~~~~~~~~
ClpMain.cpp:2602:34: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                                  fprintf(fp,"%s",rowNames[outSequence].c_str());
                                                                  ~~~~~~~~ ^~~~~~~~~~~
ClpMain.cpp:2638:106: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                                  if (doMask && !maskMatches(maskStarts, masks, rowNames[iRow]))
                                                                                                ~~~~~~~~ ^~~~
ClpMain.cpp:2643:90: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                                            const char * name = rowNames[iRow].c_str();
                                                                                ~~~~~~~~ ^~~~
ClpMain.cpp:2676:85: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                                                        columnNames[iColumn]))
                                                                        ~~~~~~~~~~~ ^~~~~~~
ClpMain.cpp:2681:88: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                                                       const char * name = columnNames[iColumn].c_str();
                                                                           ~~~~~~~~~~~ ^~~~~~~
ClpMain.cpp:2816:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(number, 0, nRanges * sizeof(int));
                       ^~~~~~~ ~
ClpMain.cpp:2818:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(numberExact, 0, nRanges * sizeof(int));
                            ^~~~~~~ ~
ClpMain.cpp:2946:9: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                 if (!objective[iColumn])
                     ~^~~~~~~~~~~~~~~~~~
ClpMain.cpp:3003:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                      (numberDifferentObj+1)*sizeof(int));
                       ~~~~~~~~~~~~~~~~~~^~ ~
ClpMain.cpp:3099:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(number, 0, (numberRows + 1)*sizeof(int));
                        ~~~~~~~~~~~^~~ ~
ClpMain.cpp:3113:30: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
          if (length == 1 && objective[iColumn])
                          ~~ ^~~~~~~~~~~~~~~~~~
ClpMain.cpp:3116:15: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
          if (objective[iColumn])
          ~~  ^~~~~~~~~~~~~~~~~~
ClpMain.cpp:3279:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memset(number, 0, (numberRows + 1)*sizeof(int));
                             ~~~~~~~~~~~^~~ ~
ClpMain.cpp:3335:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
     memset(number, 0, (numberColumns + 1)*sizeof(int));
                        ~~~~~~~~~~~~~~^~~ ~
ClpMain.cpp:3382:10: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
           if (!objective[iColumn]) {
               ~^~~~~~~~~~~~~~~~~~
ClpMain.cpp:3565:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
         memset(blockEls,0,numberBlocks*sizeof(int));
                           ^~~~~~~~~~~~~
ClpMain.cpp:3744:63: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                              if (rowLower[iRow] > -1.0e30 && rowLower[iRow])
                                                           ~~ ^~~~~~~~~~~~~~
ClpMain.cpp:3746:41: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                              else if (!rowLower[iRow])
                                       ~^~~~~~~~~~~~~~
ClpMain.cpp:3748:62: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                              if (rowUpper[iRow] < 1.0e30 && rowUpper[iRow])
                                                          ~~ ^~~~~~~~~~~~~~
ClpMain.cpp:3750:41: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
                              else if (!rowUpper[iRow])
                                       ~^~~~~~~~~~~~~~
ClpMain.cpp:3789:54: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
               if (columnLower[iColumn] > -1.0e30 && columnLower[iColumn])
                                                  ~~ ^~~~~~~~~~~~~~~~~~~~
ClpMain.cpp:3791:26: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
               else if (!columnLower[iColumn])
                        ~^~~~~~~~~~~~~~~~~~~~
ClpMain.cpp:3793:53: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
               if (columnUpper[iColumn] < 1.0e30 && columnUpper[iColumn])
                                                 ~~ ^~~~~~~~~~~~~~~~~~~~
ClpMain.cpp:3795:26: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
               else if (!columnUpper[iColumn])
                        ~^~~~~~~~~~~~~~~~~~~~
In file included from ClpMain.cpp:22:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<int, char *, CoinFirstLess_2<int, char *> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpMain.cpp:2474:46: note: in instantiation of function template specialization 'CoinSort_2<int, char *>' requested here
                                             CoinSort_2(sort, sort + nEntries, masks);
                                             ^
In file included from ClpMain.cpp:22:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:190:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst, slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:231:3: note: in instantiation of function template specialization 'CoinSort_2<double, int, CoinFirstLess_2<double, int> >' requested here
  CoinSort_2(sfirst, slast, tfirst, CoinFirstLess_2<S,T>());
  ^
ClpMain.cpp:2951:5: note: in instantiation of function template specialization 'CoinSort_2<double, int>' requested here
           CoinSort_2(obj,obj+numberSort,which);
           ^
66 warnings generated.
In file included from CbcOrClpParam.cpp:8:
./CbcOrClpParam.hpp:374:35: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return definedKeyWords_[currentKeyWord_];
                 ~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~
In file included from CbcOrClpParam.cpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from CbcOrClpParam.cpp:22:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from CbcOrClpParam.cpp:22:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from CbcOrClpParam.cpp:22:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from CbcOrClpParam.cpp:23:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
CbcOrClpParam.cpp:261:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return lengthName_;
          ~~~~~~ ^~~~~~~~~~~
CbcOrClpParam.cpp:263:30: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          return lengthName_ + 2;
          ~~~~~~ ~~~~~~~~~~~~^~~
CbcOrClpParam.cpp:364:45: warning: implicit conversion changes signedness: 'const int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
     std::string current = definedKeyWords_[currentKeyWord_];
                           ~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~
CbcOrClpParam.cpp:609:41: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
               model->setSpecialOptions(value);
               ~~~~~                    ^~~~~
CbcOrClpParam.cpp:661:19: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          value = model->specialOptions();
                ~ ^~~~~~~~~~~~~~~~~~~~~~~
CbcOrClpParam.cpp:664:19: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          value = model->randomNumberGenerator()->getSeed();
                ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CbcOrClpParam.cpp:1013:41: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    << definedKeyWords_[currentKeyWord_] << " to "
                       ~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~
CbcOrClpParam.cpp:1014:41: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    << definedKeyWords_[value] << std::endl;
                       ~~~~~~~~~~~~~~~~ ^~~~~
CbcOrClpParam.cpp:1024:51: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                  name_.c_str(), definedKeyWords_[currentKeyWord_].c_str(),
                                 ~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~
CbcOrClpParam.cpp:1025:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                  definedKeyWords_[value].c_str());
                  ~~~~~~~~~~~~~~~~ ^~~~~
CbcOrClpParam.cpp:3761:70: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    nRead = fread(primalRowSolution, sizeof(double), numberRows, fp);
                            ~~~~~                                    ^~~~~~~~~~
CbcOrClpParam.cpp:3764:68: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    nRead = fread(dualRowSolution, sizeof(double), numberRows, fp);
                            ~~~~~                                  ^~~~~~~~~~
CbcOrClpParam.cpp:3767:73: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    nRead = fread(primalColumnSolution, sizeof(double), numberColumns, fp);
                            ~~~~~                                       ^~~~~~~~~~~~~
CbcOrClpParam.cpp:3770:71: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    nRead = fread(dualColumnSolution, sizeof(double), numberColumns, fp);
                            ~~~~~                                     ^~~~~~~~~~~~~
CbcOrClpParam.cpp:3776:57: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    nRead = fread(temp, sizeof(double), numberRowsFile, fp);
                            ~~~~~                       ^~~~~~~~~~~~~~
CbcOrClpParam.cpp:3780:57: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    nRead = fread(temp, sizeof(double), numberRowsFile, fp);
                            ~~~~~                       ^~~~~~~~~~~~~~
CbcOrClpParam.cpp:3784:57: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    nRead = fread(temp, sizeof(double), numberColumnsFile, fp);
                            ~~~~~                       ^~~~~~~~~~~~~~~~~
CbcOrClpParam.cpp:3788:57: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    nRead = fread(temp, sizeof(double), numberColumnsFile, fp);
                            ~~~~~                       ^~~~~~~~~~~~~~~~~
CbcOrClpParam.cpp:3863:62: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          nWrite = fwrite(primalRowSolution, sizeof(double), numberRows, fp);
                   ~~~~~~                                    ^~~~~~~~~~
CbcOrClpParam.cpp:3866:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          nWrite = fwrite(dualRowSolution, sizeof(double), numberRows, fp);
                   ~~~~~~                                  ^~~~~~~~~~
CbcOrClpParam.cpp:3871:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          nWrite = fwrite(primalColumnSolution, sizeof(double), numberColumns, fp);
                   ~~~~~~                                       ^~~~~~~~~~~~~
CbcOrClpParam.cpp:3874:63: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
          nWrite = fwrite(dualColumnSolution, sizeof(double), numberColumns, fp);
                   ~~~~~~                                     ^~~~~~~~~~~~~
43 warnings generated.
In file included from MyEventHandler.cpp:11:
In file included from ./MyEventHandler.hpp:9:
In file included from ./ClpEventHandler.hpp:9:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from MyEventHandler.cpp:11:
In file included from ./MyEventHandler.hpp:9:
In file included from ./ClpEventHandler.hpp:9:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from MyEventHandler.cpp:11:
In file included from ./MyEventHandler.hpp:9:
In file included from ./ClpEventHandler.hpp:9:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from MyEventHandler.cpp:11:
In file included from ./MyEventHandler.hpp:9:
In file included from ./ClpEventHandler.hpp:9:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
17 warnings generated.
In file included from MyMessageHandler.cpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:20:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from MyMessageHandler.cpp:14:
In file included from ./ClpSimplex.hpp:16:
In file included from ./ClpModel.hpp:21:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from MyMessageHandler.cpp:14:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from MyMessageHandler.cpp:14:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
17 warnings generated.
In file included from unitTest.cpp:20:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMpsIO.hpp:19:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from unitTest.cpp:23:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinStructuredModel.hpp:9:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModel.hpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
In file included from unitTest.cpp:23:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinStructuredModel.hpp:132:27: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return rowBlockNames_[i];}
           ~~~~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinStructuredModel.hpp:135:20: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { rowBlockNames_[i] = name;}
    ~~~~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinStructuredModel.hpp:142:30: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return columnBlockNames_[i];}
           ~~~~~~~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinStructuredModel.hpp:145:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { columnBlockNames_[i] = name;}
    ~~~~~~~~~~~~~~~~~ ^
In file included from unitTest.cpp:24:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from unitTest.cpp:34:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:195:13: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 assert (!elements_[index]);
                         ~^~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from unitTest.cpp:34:
In file included from ./ClpFactorization.hpp:12:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinFactorization.hpp:22:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from unitTest.cpp:34:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:16:
./ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
./ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
./ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
./ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
./ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from unitTest.cpp:34:
In file included from ./ClpFactorization.hpp:22:
In file included from ./ClpSimplex.hpp:18:
./ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from unitTest.cpp:50:
./ClpPresolve.hpp:183:63: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                            ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./ClpPresolve.hpp:183:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                               ^~~~~~~~~~~~~~~~ ~
unitTest.cpp:1590:43: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                         if (fabs(solnVec[c]) > 1.0e-8)
                                  ~~~~~~~ ^
unitTest.cpp:1591:113: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                              std::cout << "Saved Solution: " << s << " ColNum: " << c << " Value: " << solnVec[c] << std::endl;
                                                                                                        ~~~~~~~ ^
unitTest.cpp:1607:43: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                         if (fabs(solnVec[c]) > 1.0e-8)
                                  ~~~~~~~ ^
unitTest.cpp:1608:113: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                              std::cout << "Saved Solution: " << s << " ColNum: " << c << " Value: " << solnVec[c] << std::endl;
                                                                                                        ~~~~~~~ ^
unitTest.cpp:1751:70: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          double * binvA = reinterpret_cast<double*> (malloc((n_cols + n_rows) * sizeof(double)));
                                                              ~~~~~~~^~~~~~~~  ~
unitTest.cpp:1798:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (binvA[j]) {
                         ~~  ^~~~~~~~
unitTest.cpp:1804:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (binvA[j+n_cols]) {
                         ~~  ^~~~~~~~~~~~~~~
unitTest.cpp:1816:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (binvA[j]) {
                         ~~  ^~~~~~~~
unitTest.cpp:1843:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (binvA[j])
                         ~~  ^~~~~~~~
unitTest.cpp:1854:30: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                         if (binvA[j])
                         ~~  ^~~~~~~~
unitTest.cpp:2311:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
               memset(solution.statusArray() + numberColumns, 0, numberRows);
               ~~~~~~                                            ^~~~~~~~~~
In file included from unitTest.cpp:22:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from unitTest.cpp:22:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:13:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
42 warnings generated.
In file included from OsiClpSolverInterface.cpp:14:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:495:6: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
        if (to[j]) 
        ~~  ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:535:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    dup = static_cast<char*>(malloc(len+1));
                             ~~~~~~ ~~~^~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:788:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  CoinDrand48(true, iseed);
  ~~~~~~~~~~~       ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:821:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (getcwd(buf, size))
            ~~~~~~      ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:964:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:988:13: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    seed_ = seed;
          ~ ^~~~
In file included from OsiClpSolverInterface.cpp:15:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:208:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:228:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) {
                 ~~  ^~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:245:8: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
                 if (elements_[index]) 
                 ~~  ^~~~~~~~~~~~~~~~
In file included from OsiClpSolverInterface.cpp:16:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModel.hpp:9:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:118:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = iRow|(triple.row&0x80000000);}
               ^~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinModelUseful.hpp:125:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
{ triple.row = (string ? 0x80000000 : 0)|iRow;}
                                        ~^~~~
In file included from OsiClpSolverInterface.cpp:17:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMpsIO.hpp:19:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:407:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return doubleValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:420:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return longValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:433:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return charValue_[position];}
           ~~~~~~~~~~ ^~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinMessageHandler.hpp:446:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  { return stringValue_[position];}
           ~~~~~~~~~~~~ ^~~~~~~~
In file included from OsiClpSolverInterface.cpp:24:
In file included from ../ClpFactorization.hpp:22:
In file included from ../ClpSimplex.hpp:16:
../ClpModel.hpp:477:42: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
          memcpy(columnActivity_, input, numberColumns_ * sizeof(double));
                                         ^~~~~~~~~~~~~~ ~
../ClpModel.hpp:815:18: warning: implicit conversion changes signedness: 'const unsigned int' to 'int' [-Wsign-conversion]
          return whatsChanged_;
          ~~~~~~ ^~~~~~~~~~~~~
../ClpModel.hpp:818:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          whatsChanged_ = value;
                        ~ ^~~~~
../ClpModel.hpp:914:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return rowNames_[iRow];
                 ~~~~~~~~~ ^~~~
../ClpModel.hpp:923:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
          return columnNames_[iColumn];
                 ~~~~~~~~~~~~ ^~~~~~~
In file included from OsiClpSolverInterface.cpp:24:
In file included from ../ClpFactorization.hpp:22:
In file included from ../ClpSimplex.hpp:18:
../ClpSolve.hpp:215:75: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                  ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
../ClpSolve.hpp:215:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          independentOptions_[1]  = (independentOptions_[1] & 0xffff0000) | (action & 0xffff);
                                     ^~~~~~~~~~~~~~~~~~~~~~ ~
In file included from OsiClpSolverInterface.cpp:33:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/Osi/src/Osi/OsiCuts.hpp:384:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiRowCut * OsiCuts::rowCutPtr(int i) const { return rowCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/Osi/src/Osi/OsiCuts.hpp:385:72: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
const OsiColCut * OsiCuts::colCutPtr(int i) const { return colCutPtrs_[i]; }
                                                           ~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/Osi/src/Osi/OsiCuts.hpp:386:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiRowCut * OsiCuts::rowCutPtr(int i) { return rowCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/Osi/src/Osi/OsiCuts.hpp:387:60: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
OsiColCut * OsiCuts::colCutPtr(int i) { return colCutPtrs_[i]; }
                                               ~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/Osi/src/Osi/OsiCuts.hpp:444:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete rowCutPtrs_[i];
         ~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/Osi/src/Osi/OsiCuts.hpp:449:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  delete colCutPtrs_[i];
         ~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/Osi/src/Osi/OsiCuts.hpp:456:33: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  OsiRowCut * cut = rowCutPtrs_[i];
                    ~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/Osi/src/Osi/OsiCuts.hpp:457:15: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  rowCutPtrs_[i]=NULL;
  ~~~~~~~~~~~ ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/Osi/src/Osi/OsiCuts.hpp:468:24: warning: implicit conversion changes signedness: 'const value_type' (aka 'const int') to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    delete rowCutPtrs_[to_erase[i]];
           ~~~~~~~~~~~ ^~~~~~~~~~~
In file included from OsiClpSolverInterface.cpp:36:
../ClpPresolve.hpp:183:63: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                            ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
../ClpPresolve.hpp:183:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          presolveActions_  = (presolveActions_ & 0xffff0000) | (action & 0xffff);
                               ^~~~~~~~~~~~~~~~ ~
OsiClpSolverInterface.cpp:91:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (objValue) {
      ~~  ^~~~~~~~
OsiClpSolverInterface.cpp:128:21: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
  int saveOptions = solver->specialOptions();
      ~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:129:43: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  solver->setSpecialOptions(saveOptions|64|32768); // go as far as possible
  ~~~~~~                    ~~~~~~~~~~~~~~^~~~~~
OsiClpSolverInterface.cpp:706:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    solver->setSpecialOptions(saveOptions);
    ~~~~~~                    ^~~~~~~~~~~
OsiClpSolverInterface.cpp:860:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (objValue) {
      ~~  ^~~~~~~~
OsiClpSolverInterface.cpp:885:23: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    int saveOptions = modelPtr_->specialOptions();
        ~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:897:34: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    modelPtr_->setSpecialOptions(saveOptions); // restore
    ~~~~~~~~~                    ^~~~~~~~~~~
OsiClpSolverInterface.cpp:905:21: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
  int saveOptions = modelPtr_->specialOptions();
      ~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:910:47: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      modelPtr_->setSpecialOptions(saveOptions|(64|1024|32768));
      ~~~~~~~~~                    ~~~~~~~~~~~^~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:916:49: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        modelPtr_->setSpecialOptions(saveOptions|(64|128|512|1024|4096|32768));
        ~~~~~~~~~                    ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:918:49: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        modelPtr_->setSpecialOptions(saveOptions|(64|128|512|1024|2048|4096|32768));
        ~~~~~~~~~                    ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:921:48: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    modelPtr_->setSpecialOptions(saveOptions|64|32768);
    ~~~~~~~~~                    ~~~~~~~~~~~~~~^~~~~~
OsiClpSolverInterface.cpp:993:26: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      specialOptions_ &= ~128;
                      ~~ ^~~~
OsiClpSolverInterface.cpp:1197:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        modelPtr_->setSpecialOptions(saveOptions);
        ~~~~~~~~~                    ^~~~~~~~~~~
OsiClpSolverInterface.cpp:1304:32: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  modelPtr_->setSpecialOptions(saveOptions); // restore
  ~~~~~~~~~                    ^~~~~~~~~~~
OsiClpSolverInterface.cpp:1317:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    modelPtr_->whatsChanged_ &= ~0xffff;
                             ~~ ^~~~~~~
OsiClpSolverInterface.cpp:1700:11: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (objValue) {
      ~~  ^~~~~~~~
OsiClpSolverInterface.cpp:1729:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    int size = static_cast<int>((1+4*(numberRows+numberColumns))*sizeof(double));
                                 ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~
OsiClpSolverInterface.cpp:1731:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    size += static_cast<int>(2*numberColumns*sizeof(double));
                             ~^~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:1732:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    size += static_cast<int>((1+4*numberRows+2*numberColumns)*sizeof(int));
                              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~ ~
OsiClpSolverInterface.cpp:1752:23: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          specialOptions_ &= ~131072;
                          ~~ ^~~~~~~
OsiClpSolverInterface.cpp:1837:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    int size = static_cast<int>((1+4*(numberRows+numberColumns))*sizeof(double));
                                 ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~
OsiClpSolverInterface.cpp:1839:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    size += static_cast<int>(2*numberColumns*sizeof(double));
                             ~^~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:1840:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    size += static_cast<int>((1+4*numberRows+2*numberColumns)*sizeof(int));
                              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~ ~
OsiClpSolverInterface.cpp:1972:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      small->specialOptions_ &= ~65536;
                             ~~ ^~~~~~
OsiClpSolverInterface.cpp:2021:22: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    int clpOptions = modelPtr_->specialOptions();
        ~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:2024:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      small->setSpecialOptions(clpOptions|(64|1024));
      ~~~~~                    ~~~~~~~~~~^~~~~~~~~~
OsiClpSolverInterface.cpp:2027:44: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        small->setSpecialOptions(clpOptions|(64|128|512|1024|4096));
        ~~~~~                    ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:2029:44: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        small->setSpecialOptions(clpOptions|(64|128|512|1024|2048|4096));
        ~~~~~                    ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:2584:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      memset(modelPtr_->primalRowSolution(),0,numberRows*sizeof(double));
                                              ^~~~~~~~~~~
OsiClpSolverInterface.cpp:2687:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    modelPtr_->whatsChanged_ &= ~0xffff;
                             ~~ ^~~~~~~
OsiClpSolverInterface.cpp:2814:28: warning: implicit conversion changes signedness: 'const int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      memset(columnType_,0,numCols);
      ~~~~~~               ^~~~~~~
OsiClpSolverInterface.cpp:3058:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  memset(modelPtr_->primalRowSolution(),0,modelPtr_->numberRows()*sizeof(double));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:3073:3: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
         modelPtr_->numberColumns()*sizeof(double));
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:4386:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    rowScale_.extend(static_cast<int>(2*newNumberRows*sizeof(double)));
                                      ~^~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:4427:22: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  specialOptions_ &= ~131072;
                  ~~ ^~~~~~~
OsiClpSolverInterface.cpp:4794:22: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    rowNames.reserve(nRows);
    ~~~~~~~~         ^~~~~
OsiClpSolverInterface.cpp:4803:25: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    columnNames.reserve(nCols);
    ~~~~~~~~~~~         ^~~~~
OsiClpSolverInterface.cpp:4905:24: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      rowNames.reserve(nRows);
      ~~~~~~~~         ^~~~~
OsiClpSolverInterface.cpp:4914:27: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
      columnNames.reserve(nCols);
      ~~~~~~~~~~~         ^~~~~
OsiClpSolverInterface.cpp:4969:20: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  rowNames.reserve(nRows);
  ~~~~~~~~         ^~~~~
OsiClpSolverInterface.cpp:4978:23: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  columnNames.reserve(nCols);
  ~~~~~~~~~~~         ^~~~~
OsiClpSolverInterface.cpp:5176:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    modelPtr_->whatsChanged_ &= ~0xffff; // switch off
                             ~~ ^~~~~~~
OsiClpSolverInterface.cpp:5200:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    modelPtr_->whatsChanged_ &= ~0xffff; // switch off
                             ~~ ^~~~~~~
OsiClpSolverInterface.cpp:5219:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    modelPtr_->whatsChanged_ &= ~0xffff; // switch off
                             ~~ ^~~~~~~
OsiClpSolverInterface.cpp:5523:32: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
  int saveOptions = modelPtr_->specialOptions_;
      ~~~~~~~~~~~   ~~~~~~~~~~~^~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:5524:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  modelPtr_->specialOptions_ &= ~262144;
                             ~~ ^~~~~~~
OsiClpSolverInterface.cpp:5535:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
  modelPtr_->specialOptions_=saveOptions;
                            ~^~~~~~~~~~~
OsiClpSolverInterface.cpp:6445:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          specialOptions_ |= array[0]<<10;
                          ~~ ~~~~~~~~^~~~
OsiClpSolverInterface.cpp:6473:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  int size = static_cast<int>((1+4*(numberRows+numberColumns))*sizeof(double));
                               ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~
OsiClpSolverInterface.cpp:6475:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  size += static_cast<int>(2*numberColumns*sizeof(double));
                           ~^~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:6476:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  size += static_cast<int>((1+4*numberRows+2*numberColumns)*sizeof(int));
                            ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~ ~
OsiClpSolverInterface.cpp:6739:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memset(ray,0,numberRows*sizeof(double));
                         ^~~~~~~~~~~
OsiClpSolverInterface.cpp:8056:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
      value &= ~131072;
            ~~ ^~~~~~~
OsiClpSolverInterface.cpp:8214:14: warning: implicit conversion turns floating-point number into integer: 'const double' to 'bool' [-Wfloat-conversion]
          if (n==0&&element[j])
                  ~~^~~~~~~~~~
OsiClpSolverInterface.cpp:8394:10: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
    if (!gap)
        ~^~~
OsiClpSolverInterface.cpp:8658:12: warning: implicit conversion turns floating-point number into integer: 'double' to 'bool' [-Wfloat-conversion]
      if (!gap)
          ~^~~
OsiClpSolverInterface.cpp:8904:62: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    modelPtr_->setSpecialOptions(modelPtr_->specialOptions()&~(2048+4096));
                                                            ~^~~~~~~~~~~~
OsiClpSolverInterface.cpp:9307:55: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
          model_->setSpecialOptions(model_->specialOptions()&~(2048+4096));
                                                            ~^~~~~~~~~~~~
OsiClpSolverInterface.cpp:9407:13: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
  iValue1 = this->specialOptions();
          ~ ^~~~~~~~~~~~~~~~~~~~~~
OsiClpSolverInterface.cpp:9408:13: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
  iValue2 = other->specialOptions();
          ~ ^~~~~~~~~~~~~~~~~~~~~~~
In file included from OsiClpSolverInterface.cpp:15:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<int *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<int *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:244:6: note: in instantiation of function template specialization 'CoinSort_3<int, int, double, CoinFirstLess_3<int, int, double> >' requested here
   { CoinSort_3(indices_, indices_ + nElements_, origIndices_, elements_,
     ^
In file included from OsiClpSolverInterface.cpp:15:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinIndexedVector.hpp:19:
In file included from /Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:12:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinDistance.hpp:43:13: warning: implicit conversion changes signedness: 'typename iterator_traits<double *>::difference_type' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
   retVal = std::distance(first,last);
          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinSort.hpp:638:22: note: in instantiation of function template specialization 'coinDistance<double *>' requested here
  const size_t len = coinDistance(sfirst,slast);
                     ^
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinPackedVector.hpp:252:6: note: in instantiation of function template specialization 'CoinSort_3<double, int, int, CoinFirstLess_3<double, int, int> >' requested here
   { CoinSort_3(elements_, elements_ + nElements_, origIndices_, indices_,
     ^
In file included from OsiClpSolverInterface.cpp:14:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
OsiClpSolverInterface.cpp:3243:21: note: in instantiation of function template specialization 'CoinCopyOfArray<int>' requested here
    int * indices = CoinCopyOfArray(columnIndices,num);
                    ^
In file included from OsiClpSolverInterface.cpp:14:
/Users/channgo/Working/c4b/C4B-new/modif/pasta/packages/Clp-1.15.7/CoinUtils/src/CoinHelperFunctions.hpp:187:29: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        std::memcpy(arrayNew,array,size*sizeof(T));
                                   ^~~~~
OsiClpSolverInterface.cpp:6891:27: note: in instantiation of function template specialization 'CoinCopyOfArray<double>' requested here
      double * rowScale = CoinCopyOfArray(rowScale_.array(),2*numberRows);
                          ^
98 warnings generated.
